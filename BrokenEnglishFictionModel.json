{
  "file": "/gitbox/Word/Prostitute/Product/Goods/Words/Naturalization_Trilogy/Alien_Registration_Chip/1.txt",
  "version": "0.0.5",
  "gitSha": "30edb575085b45266571fd12f3b14e086963ece2",
  "localDateTime": "2016-11-09T21:22:50.635",
  "writers": [
    "Kalab J. Oster"
  ],
  "editors": [
    "Kalab J. Oster"
  ],
  "publishers": [
    "Word ProstituteÂ®"
  ],
  "fileState": ",,THEY JUST SHOT JESUS IN THE FUCKING HEAD FOR TRYING TO SAVE MARY!\u0027\u0027 whiny shouts Jay inside his clear headsphere in the white-panel container as a forklift hauls the container over a salt-flat desert. \n\nJesus\u0027s bloody skull bits spread over the white-panel bodyboxes in the container as naked Jesus falls dead from the container\u0027s open doorway onto the salt-flat desert.\n\n\u003c...Jesus didn\u0027t bigger dick...\u003e mentally mumbles Jay as he squints against the bright dawn glowing through doorway. He pushes arms through nano sand and against his bodybox. \u0027\u0027Is Mary dead?\u0027\u0027 \u003c|...Made dick hard...\u003e\n\nMary\u0027s naked body burns in a big truck cab exploded near the bodybox container as soldiers with machine guns surround the big truck.\n\nJay talks in his own mind in a deeper whiny voice, \u003c|Her ass sphincter licking good.\u003e He mumbles with mouth, \u0027\u0027Where did they come from?,\u0027\u0027 then says, \u0027\u0027What\u0027s going to happen to us now? Is Life program able to process with the door open? Will it corrupt the agent? I have a contract. I don\u0027t trust a fucking program name Life.\u0027\u0027\n\nA Life agent processes Jay through the bodybox, nano sand, headspheres and the stem-chip growing in Jay\u0027s forehead. The agent transmits Jay\u0027s talk and Jay\u0027s thought into a database called Jay.\n\nWhiny Jay mumbles. \u0027\u0027Did Jesus ruin our trip to Mars? Do we still get to work on Mars? Is the chip in my forehead connecting to Life? Why can\u0027t I read minds?\u0027\u0027 \n\nJay\u0027s Life agent orchestrates and processes Jay\u0027s whiny shout and Jay\u0027s whiny talk from his headsphere to the other nine people\u0027s headspheres.\n\nJay looks at the other nine heads inside headspheres sticking from tops of white panel bodyboxes. \u0027\u0027John, can you hear me?  Sue? Achea, Jobin, Barack? Some one. What about you, Oprah? Ruth? Come on Judith and Leah? I saw you get injected with a nano chip, stem chip, whatever the fuck they called it. I didn\u0027t see them. Maybe they didn\u0027t? Can you read my mind?\u0027\u0027 \u003c|If you can then fuck you.\u003e\n\nThe ten people sit, stand or crouch inside ten of the twelve nano-filled white-panel bodyboxes. They look through the open doorway.\n\nAnd Jay whines, \u0027\u0027We\u0027ve sat in these space seats for over two hours. We\u0027ve trained in that stinky isolation room for three weeks. Or three months! Who knows? We. Were. In. Isolation. I shaved my balls! I didn\u0027t talk until Jesus brains blew - ALL OVER THE FUCKING CONTAINER. AND YOU BRING,\u0027\u0027 coughs, \u0027\u0027And you,\u0027\u0027 clears throat and says, \u0027\u0027And you bring us to the desert. The desert? This ain\u0027t Mars. The door was supposed to open when we were on Mars. I don\u0027t see Mars through the doorway. I see desert and soldiers. And those soldiers are not wearing spacesuits.\u0027\u0027\n\nThe open doorway leads from their white-panel container into the bright salt-flat desert dawn and to Mary burning inside the big flat-bed truck near the concrete hanger. \n\nJay mumbles, \u0027\u0027Where\u0027s the missile launcher that blew up Mary?\u0027\u0027\n\nSoldiers wearing body armor and black glasses aim rifles at the burning truck cab. Two soldiers crouch behind towershields and walk to the burning truck cab as drones zoom around the sky.\n\n\u0027\u0027Who the fuck was Mary?\u0027\u0027 says Jay. \u0027\u0027Was Mary some sort of Savior or what the fuck? Was she one of those illegal aliens? She killed like twenty soldiers. She about got away. Damn devil of a missile. Burns like the sun.\u0027\u0027 \n\nThe dawn glows between rocky mountains over desert through the doorway as wind gusts sway the white-panel door. And the fates of ten people sway like the door sways with the desert wind, back and forth, as sand and shouts of soldiers spread through the container.\n\nInside the headspheres, the people hear only the whiny Jay say, \u0027\u0027Is Jesus\u0027s death part of the test? We signed a contract for a job interview. We\u0027re going to get paid still? I don\u0027t want to work on a farm again. I don\u0027t want to do construction. I\u0027m too smart for that work. I\u0027m better than that work.\u0027\u0027  Jay shakes head and sweat sprays from face.\n\nThe people\u0027s bodies and faces sweat in the bodyboxes and headspheres as the people glance at Jay, and a few squint from the sun light. \n\n\u0027\u0027Is this part of the test? The bright light is annoying. Is the bright light part of the test?\u0027\u0027 whines Jay to the clear headspheres of John, Sue, Achea, Jobin, Barack, Oprah, Ruth, Judith and Leah. \u0027\u0027Should we close the door? Or should we stay in our spaceseats with spacehelmets? They\u0027re call spaceseats and spacehelmets, like fucking fishbowls, right? That\u0027s what they called them, right?\u0027\u0027\n\nThe forklift stops as the white-panel container lowers to the concrete floor of the hanger as the huge hanger doors roll to close.\n\nJay shouts as soldiers aiming rifles walk pass the container\u0027s doorway. \u0027\u0027OVER HERE ASSHOLES.\u0027\u0027 He wobbles head. \u0027\u0027FUCKERS, CLOSE THE DOOR!\u0027\u0027 \n\nA silhouette steps before the dawn\u0027s light glowing between the rolling hanger door and through the white-panel doorway.\n\nJay says, \u0027\u0027HEY! THIS,\u0027\u0027 dry coughs, \u0027\u0027This is Jay. I know we\u0027re not supposed to talk, and I didn\u0027t after that missile from nowhere blew-up Mary. But they shot Jesus in the head, and that freaked me the fuck-out. There\u0027s still blood on the floor. I\u0027ve got questions. Are we still applicants for a job on Mars? Have we failed the test screen? Something wrong with my application? Is the chip in my forehead not going to work?\u0027\u0027 as the silhouette pulls and swings the door.\n\nThe white-panel door shuts. \n\n\u0027\u0027What an asshole.\u0027\u0027 \n\nDarkness spreads. \n\n\u0027\u0027Where\u0027re the lights?\u0027\u0027\n\nRed balls of light glow above the twelve bodyboxes and around the ten headspheres. \n\n\u0027\u0027Why am I red?\u0027\u0027\n\nA thump sucks the door and sucks the sand and air from the container to the desert. \n\n\u0027\u0027Are we going too die?\u0027\u0027\n\nTen red balls of light around heads and clear headspheres glow green. \n\n\u0027\u0027What about the two empty spaceseats?\u0027\u0027\n\nTwo red balls of light glow over the two empty bodyboxes.\n\nJay thinks as his stem chip grows and the Life agent records, \u003cCan they hear me?\u003e",
  "wordCount": 1014,
  "paragraphStates": [
    {
      "paragraph": ",,THEY JUST SHOT JESUS IN THE FUCKING HEAD FOR TRYING TO SAVE MARY!\u0027\u0027 whiny shouts Jay inside his clear headsphere in the white-panel container as a forklift hauls the container over a salt-flat desert.",
      "wordCount": 34,
      "order": 1,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": ",,THEY JUST SHOT JESUS IN THE FUCKING HEAD FOR TRYING TO SAVE MARY!\u0027\u0027",
          "wordCount": 13,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "\u0027\u0027THEY JUST SHOT JESUS IN THE FUCKING HEAD FOR TRYING TO SAVE MARY!\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "THEY",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "JUST",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "SHOT",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "JESUS",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "IN",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "THE",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBG",
                "text": "FUCKING",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "HEAD",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "FOR",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBG",
                "text": "TRYING",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "TO",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "SAVE",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "MARY",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "!",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, SHOT-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "SHOT"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(SHOT-4, \u0027\u0027-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "SHOT"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(SHOT-4, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "SHOT"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(SHOT-4, THEY-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "THEY",
                  "tag": "NNP",
                  "word": "THEY"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "SHOT"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(SHOT-4, JUST-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "just",
                  "tag": "RB",
                  "word": "JUST"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "SHOT"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(SHOT-4, JESUS-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "JESUS",
                  "tag": "NNP",
                  "word": "JESUS"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "SHOT"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(SHOT-4, !-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": "!",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "4",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "SHOT"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(JESUS-5, HEAD-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "9",
                  "lemma": "head",
                  "tag": "NN",
                  "word": "HEAD"
                },
                "gov": {
                  "index": "5",
                  "lemma": "JESUS",
                  "tag": "NNP",
                  "word": "JESUS"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(HEAD-9, IN-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "IN"
                },
                "gov": {
                  "index": "9",
                  "lemma": "head",
                  "tag": "NN",
                  "word": "HEAD"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(HEAD-9, THE-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "THE"
                },
                "gov": {
                  "index": "9",
                  "lemma": "head",
                  "tag": "NN",
                  "word": "HEAD"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(HEAD-9, FUCKING-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "fuck",
                  "tag": "VBG",
                  "word": "FUCKING"
                },
                "gov": {
                  "index": "9",
                  "lemma": "head",
                  "tag": "NN",
                  "word": "HEAD"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(HEAD-9, TRYING-11)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "11",
                  "lemma": "try",
                  "tag": "VBG",
                  "word": "TRYING"
                },
                "gov": {
                  "index": "9",
                  "lemma": "head",
                  "tag": "NN",
                  "word": "HEAD"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(TRYING-11, FOR-10)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "10",
                  "lemma": "for",
                  "tag": "IN",
                  "word": "FOR"
                },
                "gov": {
                  "index": "11",
                  "lemma": "try",
                  "tag": "VBG",
                  "word": "TRYING"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(TRYING-11, SAVE-13)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "13",
                  "lemma": "save",
                  "tag": "VB",
                  "word": "SAVE"
                },
                "gov": {
                  "index": "11",
                  "lemma": "try",
                  "tag": "VBG",
                  "word": "TRYING"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(SAVE-13, TO-12)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "12",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "TO"
                },
                "gov": {
                  "index": "13",
                  "lemma": "save",
                  "tag": "VB",
                  "word": "SAVE"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(SAVE-13, MARY-14)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "14",
                  "lemma": "MARY",
                  "tag": "NNP",
                  "word": "MARY"
                },
                "gov": {
                  "index": "13",
                  "lemma": "save",
                  "tag": "VB",
                  "word": "SAVE"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_1_node_0_node_1_node": {
                  "NNP": "FUCKING"
                },
                "s_node_3_node": {
                  "PERIOD": "!"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "JESUS"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_0_node": {
                  "NNP": "THEY"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "IN": "IN"
                },
                "s_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "TO": "TO"
                },
                "s_node_1_node_1_node": {
                  "NNP": "JUST"
                },
                "s_node_2_node_1_node_1_node_0_node_0_node": {
                  "DT": "THE"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_1_node_1_node_0_node": {
                  "IN": "FOR"
                },
                "s_node_2_node_1_node_1_node_0_node_2_node": {
                  "NNP": "HEAD"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_2_node": {
                  "NNP": "SHOT"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "VB": "SAVE"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBG": "TRYING"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNP": "MARY"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": ",,THEY JUST SHOT JESUS IN THE FUCKING HEAD FOR TRYING TO SAVE MARY!\u0027\u0027"
          },
          "jazzyState": {
            "text": ",,THEY JUST SHOT JESUS IN THE FUCKING HEAD FOR TRYING TO SAVE MARY!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": ",,THEY JUST SHOT JESUS IN THE FUCKING HEAD FOR TRYING TO SAVE MARY!\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "whiny shouts Jay inside his clear headsphere in the white-panel container as a forklift hauls the container over a salt-flat desert.",
          "wordCount": 21,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "whiny shouts Jay inside his clear headsphere in the white-panel container as a forklift hauls the container over a salt-flat desert.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "whiny",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "shouts",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "inside",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "PRP$",
                "text": "his",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "clear",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "headsphere",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "white-panel",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "container",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "forklift",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "hauls",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "container",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "salt-flat",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "desert",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hauls-15)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "15",
                  "lemma": "haul",
                  "tag": "VBZ",
                  "word": "hauls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shouts-2, whiny-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "whiny",
                  "tag": "JJ",
                  "word": "whiny"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shout",
                  "tag": "NNS",
                  "word": "shouts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Jay-3, shouts-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shout",
                  "tag": "NNS",
                  "word": "shouts"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:inside(Jay-3, headsphere-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:inside"
                },
                "dep": {
                  "index": "7",
                  "lemma": "headsphere",
                  "tag": "NN",
                  "word": "headsphere"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(headsphere-7, inside-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "inside",
                  "tag": "IN",
                  "word": "inside"
                },
                "gov": {
                  "index": "7",
                  "lemma": "headsphere",
                  "tag": "NN",
                  "word": "headsphere"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(headsphere-7, his-5)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "5",
                  "lemma": "he",
                  "tag": "PRP$",
                  "word": "his"
                },
                "gov": {
                  "index": "7",
                  "lemma": "headsphere",
                  "tag": "NN",
                  "word": "headsphere"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(headsphere-7, clear-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "clear",
                  "tag": "JJ",
                  "word": "clear"
                },
                "gov": {
                  "index": "7",
                  "lemma": "headsphere",
                  "tag": "NN",
                  "word": "headsphere"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(headsphere-7, container-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "11",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                },
                "gov": {
                  "index": "7",
                  "lemma": "headsphere",
                  "tag": "NN",
                  "word": "headsphere"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(container-11, in-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "11",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(container-11, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "11",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(container-11, white-panel-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "white-panel",
                  "tag": "JJ",
                  "word": "white-panel"
                },
                "gov": {
                  "index": "11",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:as(container-11, forklift-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:as"
                },
                "dep": {
                  "index": "14",
                  "lemma": "forklift",
                  "tag": "NN",
                  "word": "forklift"
                },
                "gov": {
                  "index": "11",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(forklift-14, as-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "14",
                  "lemma": "forklift",
                  "tag": "NN",
                  "word": "forklift"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(forklift-14, a-13)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "13",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "14",
                  "lemma": "forklift",
                  "tag": "NN",
                  "word": "forklift"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hauls-15, container-17)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "17",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                },
                "gov": {
                  "index": "15",
                  "lemma": "haul",
                  "tag": "VBZ",
                  "word": "hauls"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hauls-15, Jay-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "15",
                  "lemma": "haul",
                  "tag": "VBZ",
                  "word": "hauls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hauls-15, .-22)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "22",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "15",
                  "lemma": "haul",
                  "tag": "VBZ",
                  "word": "hauls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(container-17, the-16)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "16",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "17",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(container-17, desert-21)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "21",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                },
                "gov": {
                  "index": "17",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(desert-21, over-18)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "18",
                  "lemma": "over",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "21",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(desert-21, a-19)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "19",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "21",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(desert-21, salt-flat-20)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "20",
                  "lemma": "salt-flat",
                  "tag": "JJ",
                  "word": "salt-flat"
                },
                "gov": {
                  "index": "21",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "JJ": "salt-flat"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "JJ": "white-panel"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "NN": "forklift"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node_0_node": {
                  "PRP$": "his"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "inside"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJ": "clear"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "shouts"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node_2_node": {
                  "NN": "headsphere"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_2_node": {
                  "NN": "container"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "as"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "container"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_2_node": {
                  "NN": "desert"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "VBZ": "hauls"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_0_node": {
                  "NN": "whiny"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "desert."
                ]
              }
            },
            "sentence": "whiny shouts Jay inside his clear headsphere in the white-panel container as a forklift hauls the container over a salt-flat desert."
          },
          "jazzyState": {
            "text": "whiny shouts Jay inside his clear headsphere in the white-panel container as a forklift hauls the container over a salt-flat desert.",
            "misspelledWords": {
              "headsphere": [],
              "forklift": [],
              "whiny": [
                "whine",
                "shiny"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Jesus\u0027s bloody skull bits spread over the white-panel bodyboxes in the container as naked Jesus falls dead from the container\u0027s open doorway onto the salt-flat desert.",
      "wordCount": 26,
      "order": 2,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Jesus\u0027s bloody skull bits spread over the white-panel bodyboxes in the container as naked Jesus falls dead from the container\u0027s open doorway onto the salt-flat desert.",
          "wordCount": 26,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Jesus\u0027s bloody skull bits spread over the white-panel bodyboxes in the container as naked Jesus falls dead from the container\u0027s open doorway onto the salt-flat desert.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jesus",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "bloody",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "skull",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "bits",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBN",
                "text": "spread",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "white-panel",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "bodyboxes",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "container",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "naked",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jesus",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "falls",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "dead",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "container",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "open",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "doorway",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "onto",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "salt-flat",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "desert",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, falls-17)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "17",
                  "lemma": "fall",
                  "tag": "VBZ",
                  "word": "falls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Jesus-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Jesus",
                  "tag": "NNP",
                  "word": "Jesus"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(bits-5, Jesus-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Jesus",
                  "tag": "NNP",
                  "word": "Jesus"
                },
                "gov": {
                  "index": "5",
                  "lemma": "bit",
                  "tag": "NNS",
                  "word": "bits"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(bits-5, bloody-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "bloody",
                  "tag": "JJ",
                  "word": "bloody"
                },
                "gov": {
                  "index": "5",
                  "lemma": "bit",
                  "tag": "NNS",
                  "word": "bits"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(bits-5, skull-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "skull",
                  "tag": "NN",
                  "word": "skull"
                },
                "gov": {
                  "index": "5",
                  "lemma": "bit",
                  "tag": "NNS",
                  "word": "bits"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(bits-5, spread-6)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "6",
                  "lemma": "spread",
                  "tag": "VBN",
                  "word": "spread"
                },
                "gov": {
                  "index": "5",
                  "lemma": "bit",
                  "tag": "NNS",
                  "word": "bits"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(spread-6, bodyboxes-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                },
                "gov": {
                  "index": "6",
                  "lemma": "spread",
                  "tag": "VBN",
                  "word": "spread"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(bodyboxes-10, over-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "over",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(bodyboxes-10, the-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(bodyboxes-10, white-panel-9)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "9",
                  "lemma": "white-panel",
                  "tag": "NN",
                  "word": "white-panel"
                },
                "gov": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(bodyboxes-10, container-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "13",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                },
                "gov": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:as(container-13, Jesus-16)",
                  "name": "nmod_preposition",
                  "tag": "nmod:as"
                },
                "dep": {
                  "index": "16",
                  "lemma": "Jesus",
                  "tag": "NNP",
                  "word": "Jesus"
                },
                "gov": {
                  "index": "13",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(container-13, in-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "13",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(container-13, the-12)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "12",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "13",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Jesus-16, as-14)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "14",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "16",
                  "lemma": "Jesus",
                  "tag": "NNP",
                  "word": "Jesus"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Jesus-16, naked-15)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "15",
                  "lemma": "naked",
                  "tag": "JJ",
                  "word": "naked"
                },
                "gov": {
                  "index": "16",
                  "lemma": "Jesus",
                  "tag": "NNP",
                  "word": "Jesus"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(falls-17, dead-18)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "18",
                  "lemma": "dead",
                  "tag": "JJ",
                  "word": "dead"
                },
                "gov": {
                  "index": "17",
                  "lemma": "fall",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(falls-17, bits-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "bit",
                  "tag": "NNS",
                  "word": "bits"
                },
                "gov": {
                  "index": "17",
                  "lemma": "fall",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:onto(falls-17, desert-28)",
                  "name": "nmod_preposition",
                  "tag": "nmod:onto"
                },
                "dep": {
                  "index": "28",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                },
                "gov": {
                  "index": "17",
                  "lemma": "fall",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(falls-17, .-29)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "29",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "17",
                  "lemma": "fall",
                  "tag": "VBZ",
                  "word": "falls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(dead-18, doorway-24)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "24",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                },
                "gov": {
                  "index": "18",
                  "lemma": "dead",
                  "tag": "JJ",
                  "word": "dead"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(container-21, the-20)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "20",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "21",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(container-21, \u0027s-22)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "22",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "21",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(doorway-24, from-19)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "19",
                  "lemma": "from",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "24",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(doorway-24, container-21)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "21",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                },
                "gov": {
                  "index": "24",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(doorway-24, open-23)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "23",
                  "lemma": "open",
                  "tag": "JJ",
                  "word": "open"
                },
                "gov": {
                  "index": "24",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(desert-28, onto-25)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "25",
                  "lemma": "onto",
                  "tag": "IN",
                  "word": "onto"
                },
                "gov": {
                  "index": "28",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(desert-28, the-26)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "26",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "28",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(desert-28, salt-flat-27)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "27",
                  "lemma": "salt-flat",
                  "tag": "NN",
                  "word": "salt-flat"
                },
                "gov": {
                  "index": "28",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "container"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "JJ": "open"
                },
                "s_node_0_node_3_node": {
                  "NNS": "bits"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_1_node_2_node": {
                  "NN": "desert"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_0_node": {
                  "IN": "onto"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "JJ": "dead"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "NNP": "Jesus"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "container"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_0_node_2_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Jesus"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_0_node": {
                  "VBD": "spread"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "as"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "bloody"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_0_node_2_node": {
                  "NNS": "bodyboxes"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_1_node_1_node": {
                  "JJ": "salt-flat"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_2_node": {
                  "NN": "doorway"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "skull"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "VBZ": "falls"
                },
                "s_node_1_node_2_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "NNP": "naked"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJ": "white-panel"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "desert."
                ]
              }
            },
            "sentence": "Jesus\u0027s bloody skull bits spread over the white-panel bodyboxes in the container as naked Jesus falls dead from the container\u0027s open doorway onto the salt-flat desert."
          },
          "jazzyState": {
            "text": "Jesus\u0027s bloody skull bits spread over the white-panel bodyboxes in the container as naked Jesus falls dead from the container\u0027s open doorway onto the salt-flat desert.",
            "misspelledWords": {
              "Jesus\u0027s": [],
              "bodyboxes": [],
              "Jesus": [
                "jests"
              ],
              "container\u0027s": [
                "containers"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u003c...Jesus didn\u0027t bigger dick...\u003e mentally mumbles Jay as he squints against the bright dawn glowing through doorway. He pushes arms through nano sand and against his bodybox. \u0027\u0027Is Mary dead?\u0027\u0027 \u003c|...Made dick hard...\u003e",
      "wordCount": 33,
      "order": 3,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "\u003c...Jesus didn\u0027t bigger dick...\u003e",
          "wordCount": 4,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "\u0027\u0027...Jesus didn\u0027t bigger dick...\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Jesus",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "did",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJR",
                "text": "bigger",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "dick",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, did-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(did-4, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(did-4, ...-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "...",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "4",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(did-4, Jesus-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Jesus",
                  "tag": "NNP",
                  "word": "Jesus"
                },
                "gov": {
                  "index": "4",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(did-4, dick-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "dick",
                  "tag": "NN",
                  "word": "dick"
                },
                "gov": {
                  "index": "4",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(did-4, \u0027\u0027-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "discourse(dick-7, n\u0027t-5)",
                  "name": "discourse element",
                  "tag": "discourse"
                },
                "dep": {
                  "index": "5",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "7",
                  "lemma": "dick",
                  "tag": "NN",
                  "word": "dick"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(dick-7, bigger-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "bigger",
                  "tag": "JJR",
                  "word": "bigger"
                },
                "gov": {
                  "index": "7",
                  "lemma": "dick",
                  "tag": "NN",
                  "word": "dick"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(dick-7, ...-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "...",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "7",
                  "lemma": "dick",
                  "tag": "NN",
                  "word": "dick"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_2_node_0_node": {
                  "JJR": "bigger"
                },
                "s_node_3_node": {
                  "PERIOD": "..."
                },
                "s_node_2_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Jesus"
                },
                "s_node_2_node_0_node": {
                  "VBD": "did"
                },
                "s_node_2_node_2_node_1_node": {
                  "NN": "dick"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "NNP": "..."
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c...Jesus",
                  "dick...\u003e"
                ]
              }
            },
            "sentence": "\u003c...Jesus didn\u0027t bigger dick...\u003e"
          },
          "jazzyState": {
            "text": "\u003c...Jesus didn\u0027t bigger dick...\u003e",
            "misspelledWords": {
              "dick": [
                "dicky",
                "deck",
                "dock",
                "duck",
                "tick",
                "pick",
                "sick",
                "disk",
                "lick",
                "Rick",
                "kick",
                "nick",
                "wick"
              ],
              "Jesus": [
                "jests"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c...Jesus didn\u0027t bigger dick...\u003e",
            "dialogMark": [
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "mentally mumbles Jay as he squints against the bright dawn glowing through doorway.",
          "wordCount": 13,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "mentally mumbles Jay as he squints against the bright dawn glowing through doorway.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "RB",
                "text": "mentally",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "mumbles",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "PRP",
                "text": "he",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "squints",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "against",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "bright",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "dawn",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "glowing",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "doorway",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, squints-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "squint",
                  "tag": "VBZ",
                  "word": "squints"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(mumbles-2, mentally-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "mentally",
                  "tag": "RB",
                  "word": "mentally"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumbles",
                  "tag": "JJ",
                  "word": "mumbles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Jay-3, mumbles-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "mumbles",
                  "tag": "JJ",
                  "word": "mumbles"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:as(Jay-3, he-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:as"
                },
                "dep": {
                  "index": "5",
                  "lemma": "he",
                  "tag": "PRP",
                  "word": "he"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(he-5, as-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "5",
                  "lemma": "he",
                  "tag": "PRP",
                  "word": "he"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(squints-6, Jay-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "6",
                  "lemma": "squint",
                  "tag": "VBZ",
                  "word": "squints"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:against(squints-6, dawn-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:against"
                },
                "dep": {
                  "index": "10",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                },
                "gov": {
                  "index": "6",
                  "lemma": "squint",
                  "tag": "VBZ",
                  "word": "squints"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(squints-6, .-14)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "14",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "squint",
                  "tag": "VBZ",
                  "word": "squints"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(dawn-10, against-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "against",
                  "tag": "IN",
                  "word": "against"
                },
                "gov": {
                  "index": "10",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(dawn-10, the-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "10",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(dawn-10, bright-9)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "bright",
                  "tag": "JJ",
                  "word": "bright"
                },
                "gov": {
                  "index": "10",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(dawn-10, glowing-11)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "glowing",
                  "tag": "JJ",
                  "word": "glowing"
                },
                "gov": {
                  "index": "10",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(dawn-10, through-12)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "12",
                  "lemma": "through",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "10",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "string": "dep(dawn-10, doorway-13)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "13",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                },
                "gov": {
                  "index": "10",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_0_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "doorway"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "squints"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "against"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "as"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node_0_node_0_node": {
                  "RB": "mentally"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBG": "glowing"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_2_node": {
                  "NN": "dawn"
                },
                "s_node_0_node_0_node_1_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_0_node_1_node": {
                  "JJ": "mumbles"
                },
                "s_node_0_node_1_node_1_node": {
                  "PRP": "he"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJ": "bright"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "doorway."
                ]
              }
            },
            "sentence": "mentally mumbles Jay as he squints against the bright dawn glowing through doorway."
          },
          "jazzyState": {
            "text": "mentally mumbles Jay as he squints against the bright dawn glowing through doorway.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "He pushes arms through nano sand and against his bodybox.",
          "wordCount": 10,
          "orderParagraph": 3,
          "nlpState": {
            "sentence": "He pushes arms through nano sand and against his bodybox.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "PRP",
                "text": "He",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "pushes",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "arms",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "nano",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "sand",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "against",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "PRP$",
                "text": "his",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "bodybox",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pushes-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "push",
                  "tag": "VBZ",
                  "word": "pushes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pushes-2, He-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "he",
                  "tag": "PRP",
                  "word": "He"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(pushes-2, pushes-2\u0027)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "2",
                  "lemma": "push",
                  "tag": "VBZ",
                  "word": "pushes"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pushes-2, arms-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "arm",
                  "tag": "NNS",
                  "word": "arms"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(pushes-2, sand-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "6",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(pushes-2, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pushes-2, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pushes-2\u0027, He-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "he",
                  "tag": "PRP",
                  "word": "He"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:against(pushes-2\u0027, bodybox-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:against"
                },
                "dep": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                },
                "gov": {
                  "index": "2",
                  "lemma": "push",
                  "tag": "VBZ",
                  "word": "pushes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sand-6, through-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "through",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "6",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(sand-6, nano-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "nano",
                  "tag": "NN",
                  "word": "nano"
                },
                "gov": {
                  "index": "6",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(bodybox-10, against-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "against",
                  "tag": "IN",
                  "word": "against"
                },
                "gov": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(bodybox-10, his-9)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "9",
                  "lemma": "he",
                  "tag": "PRP$",
                  "word": "his"
                },
                "gov": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NNS": "arms"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "IN": "against"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_0_node_1_node_1_node": {
                  "NN": "sand"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_0_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node": {
                  "NN": "bodybox"
                },
                "s_node_1_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "He"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "pushes"
                },
                "s_node_1_node_2_node_0_node_1_node_0_node": {
                  "NN": "nano"
                },
                "s_node_1_node_2_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node": {
                  "PRP$": "his"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "bodybox."
                ]
              }
            },
            "sentence": "He pushes arms through nano sand and against his bodybox."
          },
          "jazzyState": {
            "text": "He pushes arms through nano sand and against his bodybox.",
            "misspelledWords": {
              "nano": [
                "non"
              ],
              "bodybox": [
                "bedbugs"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Is Mary dead?\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 4,
          "nlpState": {
            "sentence": "\u0027\u0027Is Mary dead?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "Is",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Mary",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "dead",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, dead-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dead",
                  "tag": "JJ",
                  "word": "dead"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(dead-4, \u0027\u0027-1)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dead",
                  "tag": "JJ",
                  "word": "dead"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(dead-4, Is-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dead",
                  "tag": "JJ",
                  "word": "dead"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(dead-4, Mary-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dead",
                  "tag": "JJ",
                  "word": "dead"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(dead-4, ?-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dead",
                  "tag": "JJ",
                  "word": "dead"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(dead-4, \u0027\u0027-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "dead",
                  "tag": "JJ",
                  "word": "dead"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Mary"
                },
                "s_node_2_node": {
                  "VBZ": "dead"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Is"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Is Mary dead?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Is Mary dead?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Is Mary dead?\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|...Made dick hard...\u003e",
          "wordCount": 3,
          "orderParagraph": 5,
          "nlpState": {
            "sentence": "\u0027\u0027...Made dick hard...\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBN",
                "text": "Made",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "dick",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "hard",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ":",
                "text": "...",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Made-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "make",
                  "tag": "VBN",
                  "word": "Made"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Made-3, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "3",
                  "lemma": "make",
                  "tag": "VBN",
                  "word": "Made"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Made-3, ...-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "...",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "3",
                  "lemma": "make",
                  "tag": "VBN",
                  "word": "Made"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Made-3, dick-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "dick",
                  "tag": "NN",
                  "word": "dick"
                },
                "gov": {
                  "index": "3",
                  "lemma": "make",
                  "tag": "VBN",
                  "word": "Made"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(Made-3, hard-5)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "hard",
                  "tag": "RB",
                  "word": "hard"
                },
                "gov": {
                  "index": "3",
                  "lemma": "make",
                  "tag": "VBN",
                  "word": "Made"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Made-3, ...-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "...",
                  "tag": ":",
                  "word": "..."
                },
                "gov": {
                  "index": "3",
                  "lemma": "make",
                  "tag": "VBN",
                  "word": "Made"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Made-3, \u0027\u0027-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "3",
                  "lemma": "make",
                  "tag": "VBN",
                  "word": "Made"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_3_node": {
                  "PERIOD": "..."
                },
                "s_node_2_node_1_node": {
                  "JJ": "hard"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Made"
                },
                "s_node_2_node_0_node": {
                  "VBP": "dick"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "NNP": "..."
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "\u003c|...Made",
                  "hard...\u003e"
                ]
              }
            },
            "sentence": "\u003c|...Made dick hard...\u003e"
          },
          "jazzyState": {
            "text": "\u003c|...Made dick hard...\u003e",
            "misspelledWords": {
              "dick": [
                "dicky",
                "deck",
                "dock",
                "duck",
                "tick",
                "pick",
                "sick",
                "disk",
                "lick",
                "Rick",
                "kick",
                "nick",
                "wick"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|...Made dick hard...\u003e",
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Mary\u0027s naked body burns in a big truck cab exploded near the bodybox container as soldiers with machine guns surround the big truck.",
      "wordCount": 23,
      "order": 4,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Mary\u0027s naked body burns in a big truck cab exploded near the bodybox container as soldiers with machine guns surround the big truck.",
          "wordCount": 23,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Mary\u0027s naked body burns in a big truck cab exploded near the bodybox container as soldiers with machine guns surround the big truck.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Mary",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "naked",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "burns",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "big",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "truck",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "cab",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBD",
                "text": "exploded",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "near",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "bodybox",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "container",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "soldiers",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "machine",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "guns",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBP",
                "text": "surround",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "big",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "truck",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, exploded-11)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "11",
                  "lemma": "explode",
                  "tag": "VBD",
                  "word": "exploded"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Mary-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(burns-5, Mary-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                },
                "gov": {
                  "index": "5",
                  "lemma": "burn",
                  "tag": "NNS",
                  "word": "burns"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(burns-5, naked-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "naked",
                  "tag": "JJ",
                  "word": "naked"
                },
                "gov": {
                  "index": "5",
                  "lemma": "burn",
                  "tag": "NNS",
                  "word": "burns"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(burns-5, body-4)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "4",
                  "lemma": "body",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "5",
                  "lemma": "burn",
                  "tag": "NNS",
                  "word": "burns"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(burns-5, cab-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "10",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                },
                "gov": {
                  "index": "5",
                  "lemma": "burn",
                  "tag": "NNS",
                  "word": "burns"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cab-10, in-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "10",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(cab-10, a-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "10",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(cab-10, big-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "big",
                  "tag": "JJ",
                  "word": "big"
                },
                "gov": {
                  "index": "10",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(cab-10, truck-9)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "9",
                  "lemma": "truck",
                  "tag": "NN",
                  "word": "truck"
                },
                "gov": {
                  "index": "10",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(exploded-11, burns-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "burn",
                  "tag": "NNS",
                  "word": "burns"
                },
                "gov": {
                  "index": "11",
                  "lemma": "explode",
                  "tag": "VBD",
                  "word": "exploded"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(exploded-11, surround-21)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "21",
                  "lemma": "surround",
                  "tag": "VBP",
                  "word": "surround"
                },
                "gov": {
                  "index": "11",
                  "lemma": "explode",
                  "tag": "VBD",
                  "word": "exploded"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(exploded-11, .-25)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "25",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "11",
                  "lemma": "explode",
                  "tag": "VBD",
                  "word": "exploded"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:near(exploded-11, container-15)",
                  "name": "nmod_preposition",
                  "tag": "nmod:near"
                },
                "dep": {
                  "index": "15",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                },
                "gov": {
                  "index": "11",
                  "lemma": "explode",
                  "tag": "VBD",
                  "word": "exploded"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(container-15, near-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "near",
                  "tag": "IN",
                  "word": "near"
                },
                "gov": {
                  "index": "15",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(container-15, the-13)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "13",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "15",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(container-15, bodybox-14)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "14",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                },
                "gov": {
                  "index": "15",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(soldiers-17, guns-20)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "20",
                  "lemma": "gun",
                  "tag": "NNS",
                  "word": "guns"
                },
                "gov": {
                  "index": "17",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(guns-20, with-18)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "18",
                  "lemma": "with",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "20",
                  "lemma": "gun",
                  "tag": "NNS",
                  "word": "guns"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(guns-20, machine-19)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "19",
                  "lemma": "machine",
                  "tag": "NN",
                  "word": "machine"
                },
                "gov": {
                  "index": "20",
                  "lemma": "gun",
                  "tag": "NNS",
                  "word": "guns"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(surround-21, as-16)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "16",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "21",
                  "lemma": "surround",
                  "tag": "VBP",
                  "word": "surround"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(surround-21, soldiers-17)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "17",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                },
                "gov": {
                  "index": "21",
                  "lemma": "surround",
                  "tag": "VBP",
                  "word": "surround"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(surround-21, truck-24)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "24",
                  "lemma": "truck",
                  "tag": "NN",
                  "word": "truck"
                },
                "gov": {
                  "index": "21",
                  "lemma": "surround",
                  "tag": "VBP",
                  "word": "surround"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(truck-24, the-22)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "22",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "24",
                  "lemma": "truck",
                  "tag": "NN",
                  "word": "truck"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(truck-24, big-23)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "23",
                  "lemma": "big",
                  "tag": "JJ",
                  "word": "big"
                },
                "gov": {
                  "index": "24",
                  "lemma": "truck",
                  "tag": "NN",
                  "word": "truck"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_0_node_2_node": {
                  "NN": "body"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node_1_node_0_node": {
                  "NN": "machine"
                },
                "s_node_0_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "JJ": "big"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_2_node": {
                  "NN": "truck"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node": {
                  "JJ": "big"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "bodybox"
                },
                "s_node_1_node_0_node": {
                  "VBD": "exploded"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "near"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node_1_node_1_node": {
                  "NNS": "guns"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "as"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_2_node": {
                  "NN": "truck"
                },
                "s_node_0_node_0_node_0_node_0_node": {
                  "NNP": "Mary"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_3_node": {
                  "NN": "cab"
                },
                "s_node_0_node_0_node_3_node": {
                  "NNS": "burns"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "container"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "JJ": "naked"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "VBP": "surround"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "NNS": "soldiers"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "truck."
                ]
              }
            },
            "sentence": "Mary\u0027s naked body burns in a big truck cab exploded near the bodybox container as soldiers with machine guns surround the big truck."
          },
          "jazzyState": {
            "text": "Mary\u0027s naked body burns in a big truck cab exploded near the bodybox container as soldiers with machine guns surround the big truck.",
            "misspelledWords": {
              "bodybox": [
                "bedbugs"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Jay talks in his own mind in a deeper whiny voice, \u003c|Her ass sphincter licking good.\u003e He mumbles with mouth, \u0027\u0027Where did they come from?,\u0027\u0027 then says, \u0027\u0027What\u0027s going to happen to us now? Is Life program able to process with the door open? Will it corrupt the agent? I have a contract. I don\u0027t trust a fucking program name Life.\u0027\u0027",
      "wordCount": 61,
      "order": 5,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Jay talks in his own mind in a deeper whiny voice,",
          "wordCount": 11,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Jay talks in his own mind in a deeper whiny voice,",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "talks",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "PRP$",
                "text": "his",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "own",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "mind",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJR",
                "text": "deeper",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "whiny",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "voice",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Jay-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Jay-1, talks-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "talk",
                  "tag": "NNS",
                  "word": "talks"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(talks-2, mind-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "6",
                  "lemma": "mind",
                  "tag": "NN",
                  "word": "mind"
                },
                "gov": {
                  "index": "2",
                  "lemma": "talk",
                  "tag": "NNS",
                  "word": "talks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(mind-6, in-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "6",
                  "lemma": "mind",
                  "tag": "NN",
                  "word": "mind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(mind-6, his-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "he",
                  "tag": "PRP$",
                  "word": "his"
                },
                "gov": {
                  "index": "6",
                  "lemma": "mind",
                  "tag": "NN",
                  "word": "mind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(mind-6, own-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "own",
                  "tag": "JJ",
                  "word": "own"
                },
                "gov": {
                  "index": "6",
                  "lemma": "mind",
                  "tag": "NN",
                  "word": "mind"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(mind-6, voice-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "11",
                  "lemma": "voice",
                  "tag": "NN",
                  "word": "voice"
                },
                "gov": {
                  "index": "6",
                  "lemma": "mind",
                  "tag": "NN",
                  "word": "mind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mind-6, ,-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "6",
                  "lemma": "mind",
                  "tag": "NN",
                  "word": "mind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(voice-11, in-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "11",
                  "lemma": "voice",
                  "tag": "NN",
                  "word": "voice"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(voice-11, a-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "11",
                  "lemma": "voice",
                  "tag": "NN",
                  "word": "voice"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(voice-11, deeper-9)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "deeper",
                  "tag": "JJR",
                  "word": "deeper"
                },
                "gov": {
                  "index": "11",
                  "lemma": "voice",
                  "tag": "NN",
                  "word": "voice"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(voice-11, whiny-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "whiny",
                  "tag": "JJ",
                  "word": "whiny"
                },
                "gov": {
                  "index": "11",
                  "lemma": "voice",
                  "tag": "NN",
                  "word": "voice"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "PRP$": "his"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_3_node": {
                  "NN": "voice"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node_2_node": {
                  "NN": "mind"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "JJR": "deeper"
                },
                "s_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "talks"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJ": "own"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node": {
                  "NN": "whiny"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Jay talks in his own mind in a deeper whiny voice,"
          },
          "jazzyState": {
            "text": "Jay talks in his own mind in a deeper whiny voice,",
            "misspelledWords": {
              "whiny": [
                "whine",
                "shiny"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|Her ass sphincter licking good.\u003e",
          "wordCount": 5,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "\u0027\u0027Her ass sphincter licking good.\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP$",
                "text": "Her",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "ass",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "sphincter",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBG",
                "text": "licking",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "good",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, licking-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "lick",
                  "tag": "VBG",
                  "word": "licking"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(ass-3, Her-2)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "2",
                  "lemma": "she",
                  "tag": "PRP$",
                  "word": "Her"
                },
                "gov": {
                  "index": "3",
                  "lemma": "ass",
                  "tag": "NN",
                  "word": "ass"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(licking-5, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lick",
                  "tag": "VBG",
                  "word": "licking"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(licking-5, ass-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "ass",
                  "tag": "NN",
                  "word": "ass"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lick",
                  "tag": "VBG",
                  "word": "licking"
                }
              },
              {
                "reln": {
                  "string": "dep(licking-5, sphincter-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "sphincter",
                  "tag": "NN",
                  "word": "sphincter"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lick",
                  "tag": "VBG",
                  "word": "licking"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(licking-5, good-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "good",
                  "tag": "JJ",
                  "word": "good"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lick",
                  "tag": "VBG",
                  "word": "licking"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(licking-5, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "lick",
                  "tag": "VBG",
                  "word": "licking"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(licking-5, \u0027\u0027-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "5",
                  "lemma": "lick",
                  "tag": "VBG",
                  "word": "licking"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_0_node": {
                  "VBG": "licking"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node_1_node": {
                  "JJ": "good"
                },
                "s_node_1_node_1_node": {
                  "NN": "ass"
                },
                "s_node_2_node_0_node": {
                  "VBP": "sphincter"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "PRP$": "Her"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "good.\u003e"
                ]
              }
            },
            "sentence": "\u003c|Her ass sphincter licking good.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|Her ass sphincter licking good.\u003e",
            "misspelledWords": {
              "sphincter": []
            }
          },
          "dialogState": {
            "sentence": "\u003c|Her ass sphincter licking good.\u003e",
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "He mumbles with mouth,",
          "wordCount": 4,
          "orderParagraph": 3,
          "nlpState": {
            "sentence": "He mumbles with mouth,",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "PRP",
                "text": "He",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "mumbles",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "mouth",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, mumbles-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "mumble",
                  "tag": "VBZ",
                  "word": "mumbles"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(mumbles-2, He-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "he",
                  "tag": "PRP",
                  "word": "He"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "tag": "VBZ",
                  "word": "mumbles"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(mumbles-2, mouth-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "4",
                  "lemma": "mouth",
                  "tag": "NN",
                  "word": "mouth"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "tag": "VBZ",
                  "word": "mumbles"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mumbles-2, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "tag": "VBZ",
                  "word": "mumbles"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(mouth-4, with-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "with",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "4",
                  "lemma": "mouth",
                  "tag": "NN",
                  "word": "mouth"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "mouth"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "PRP": "He"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "mumbles"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "He mumbles with mouth,"
          },
          "jazzyState": {
            "text": "He mumbles with mouth,",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Where did they come from?,\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 4,
          "nlpState": {
            "sentence": "\u0027\u0027Where did they come from?,\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WRB",
                "text": "Where",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "did",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "they",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "come",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, come-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "come",
                  "tag": "VBP",
                  "word": "come"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(come-5, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "5",
                  "lemma": "come",
                  "tag": "VBP",
                  "word": "come"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(come-5, Where-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "where",
                  "tag": "WRB",
                  "word": "Where"
                },
                "gov": {
                  "index": "5",
                  "lemma": "come",
                  "tag": "VBP",
                  "word": "come"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(come-5, did-3)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "3",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                },
                "gov": {
                  "index": "5",
                  "lemma": "come",
                  "tag": "VBP",
                  "word": "come"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(come-5, they-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "they",
                  "tag": "PRP",
                  "word": "they"
                },
                "gov": {
                  "index": "5",
                  "lemma": "come",
                  "tag": "VBP",
                  "word": "come"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod(come-5, from-6)",
                  "name": "nominal modifier",
                  "tag": "nmod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "from",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "5",
                  "lemma": "come",
                  "tag": "VBP",
                  "word": "come"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(come-5, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "5",
                  "lemma": "come",
                  "tag": "VBP",
                  "word": "come"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(come-5, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "come",
                  "tag": "VBP",
                  "word": "come"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(come-5, \u0027\u0027-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "5",
                  "lemma": "come",
                  "tag": "VBP",
                  "word": "come"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "SQ"
                },
                "s_node_1_leaf": {
                  "phrase": "SBARQ"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_1_node": {
                  "PRP": "they"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "VB": "come"
                },
                "s_node_1_node_1_node_2_node_1_node": {
                  "IN": "from"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBD": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "WRB": "Where"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBD": "did"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Where did they come from?,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Where did they come from?,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Where did they come from?,\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "then says,",
          "wordCount": 2,
          "orderParagraph": 5,
          "nlpState": {
            "sentence": "then says,",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "RB",
                "text": "then",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-2, then-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "then",
                  "tag": "RB",
                  "word": "then"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "says"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "RB": "then"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "then says,"
          },
          "jazzyState": {
            "text": "then says,",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027What\u0027s going to happen to us now?",
          "wordCount": 7,
          "orderParagraph": 6,
          "nlpState": {
            "sentence": "\u0027\u0027What\u0027s going to happen to us now?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WP",
                "text": "What",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBG",
                "text": "going",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "happen",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "us",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "now",
                "net": "DATE"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, going-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(going-4, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(going-4, What-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "what",
                  "tag": "WP",
                  "word": "What"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(going-4, \u0027s-3)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(going-4, happen-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "happen",
                  "tag": "VB",
                  "word": "happen"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(going-4, ?-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(happen-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "happen",
                  "tag": "VB",
                  "word": "happen"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(happen-6, us-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "8",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "us"
                },
                "gov": {
                  "index": "6",
                  "lemma": "happen",
                  "tag": "VB",
                  "word": "happen"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(happen-6, now-9)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "now",
                  "tag": "RB",
                  "word": "now"
                },
                "gov": {
                  "index": "6",
                  "lemma": "happen",
                  "tag": "VB",
                  "word": "happen"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(us-8, to-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "8",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "us"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_0_node": {
                  "VBG": "going"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "\u0027s"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_2_node_1_node_1_node_1_node_0_node": {
                  "VB": "happen"
                },
                "s_node_2_node_1_node_1_node_1_node_2_node": {
                  "RB": "now"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "WP": "What"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node": {
                  "PRP": "us"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027What\u0027s going to happen to us now?"
          },
          "jazzyState": {
            "text": "\u0027\u0027What\u0027s going to happen to us now?",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027What\u0027s going to happen to us now?",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Is Life program able to process with the door open?",
          "wordCount": 10,
          "orderParagraph": 7,
          "nlpState": {
            "sentence": "Is Life program able to process with the door open?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "Is",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Life",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "program",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "able",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "process",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "open",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, able-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "able",
                  "tag": "JJ",
                  "word": "able"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(program-3, Life-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Life",
                  "tag": "NNP",
                  "word": "Life"
                },
                "gov": {
                  "index": "3",
                  "lemma": "program",
                  "tag": "NN",
                  "word": "program"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(able-4, Is-1)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "able",
                  "tag": "JJ",
                  "word": "able"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(able-4, program-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "program",
                  "tag": "NN",
                  "word": "program"
                },
                "gov": {
                  "index": "4",
                  "lemma": "able",
                  "tag": "JJ",
                  "word": "able"
                }
              },
              {
                "reln": {
                  "string": "dep(able-4, process-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "process",
                  "tag": "VB",
                  "word": "process"
                },
                "gov": {
                  "index": "4",
                  "lemma": "able",
                  "tag": "JJ",
                  "word": "able"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(able-4, ?-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "able",
                  "tag": "JJ",
                  "word": "able"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(process-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "process",
                  "tag": "VB",
                  "word": "process"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(process-6, door-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "9",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "6",
                  "lemma": "process",
                  "tag": "VB",
                  "word": "process"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(process-6, open-10)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "10",
                  "lemma": "open",
                  "tag": "VB",
                  "word": "open"
                },
                "gov": {
                  "index": "6",
                  "lemma": "process",
                  "tag": "VB",
                  "word": "process"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-9, with-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "with",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "9",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-9, the-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_1_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_0_node": {
                  "VB": "process"
                },
                "s_node_1_node_1_node": {
                  "NN": "program"
                },
                "s_node_2_node": {
                  "JJ": "able"
                },
                "s_node_3_node_0_node": {
                  "TO": "to"
                },
                "s_node_3_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_3_node_1_node_1_node_1_node_2_node": {
                  "NN": "open"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "PERIOD": "?"
                },
                "s_node_3_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_2_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_3_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "VBZ": "Is"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Life"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Is Life program able to process with the door open?"
          },
          "jazzyState": {
            "text": "Is Life program able to process with the door open?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Will it corrupt the agent?",
          "wordCount": 5,
          "orderParagraph": 8,
          "nlpState": {
            "sentence": "Will it corrupt the agent?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "MD",
                "text": "Will",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "it",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "corrupt",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "agent",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, it-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "it",
                  "tag": "PRP",
                  "word": "it"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(it-2, Will-1)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "1",
                  "lemma": "will",
                  "tag": "MD",
                  "word": "Will"
                },
                "gov": {
                  "index": "2",
                  "lemma": "it",
                  "tag": "PRP",
                  "word": "it"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(it-2, corrupt-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "corrupt",
                  "tag": "JJ",
                  "word": "corrupt"
                },
                "gov": {
                  "index": "2",
                  "lemma": "it",
                  "tag": "PRP",
                  "word": "it"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(it-2, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "it",
                  "tag": "PRP",
                  "word": "it"
                }
              },
              {
                "reln": {
                  "string": "dep(corrupt-3, agent-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                },
                "gov": {
                  "index": "3",
                  "lemma": "corrupt",
                  "tag": "JJ",
                  "word": "corrupt"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(agent-5, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node": {
                  "PRP": "it"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "agent"
                },
                "s_node_2_node_0_node": {
                  "VB": "corrupt"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "MD": "Will"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Will it corrupt the agent?"
          },
          "jazzyState": {
            "text": "Will it corrupt the agent?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I have a contract.",
          "wordCount": 4,
          "orderParagraph": 9,
          "nlpState": {
            "sentence": "I have a contract.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "have",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "contract",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, have-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "have",
                  "tag": "VBP",
                  "word": "have"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(have-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "have",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(have-2, contract-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "contract",
                  "tag": "NN",
                  "word": "contract"
                },
                "gov": {
                  "index": "2",
                  "lemma": "have",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(have-2, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "have",
                  "tag": "VBP",
                  "word": "have"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(contract-4, a-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "4",
                  "lemma": "contract",
                  "tag": "NN",
                  "word": "contract"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "contract"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "have"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "contract."
                ]
              }
            },
            "sentence": "I have a contract."
          },
          "jazzyState": {
            "text": "I have a contract.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I don\u0027t trust a fucking program name Life.\u0027\u0027",
          "wordCount": 8,
          "orderParagraph": 10,
          "nlpState": {
            "sentence": "I don\u0027t trust a fucking program name Life.\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "do",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "trust",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "fucking",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "program",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "name",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Life",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, trust-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "trust",
                  "tag": "VB",
                  "word": "trust"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(trust-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "trust",
                  "tag": "VB",
                  "word": "trust"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(trust-4, do-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "tag": "VBP",
                  "word": "do"
                },
                "gov": {
                  "index": "4",
                  "lemma": "trust",
                  "tag": "VB",
                  "word": "trust"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(trust-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "trust",
                  "tag": "VB",
                  "word": "trust"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(trust-4, Life-9)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Life",
                  "tag": "NNP",
                  "word": "Life"
                },
                "gov": {
                  "index": "4",
                  "lemma": "trust",
                  "tag": "VB",
                  "word": "trust"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(trust-4, .-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "trust",
                  "tag": "VB",
                  "word": "trust"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(trust-4, \u0027\u0027-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "trust",
                  "tag": "VB",
                  "word": "trust"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(name-8, a-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "8",
                  "lemma": "name",
                  "tag": "NN",
                  "word": "name"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(name-8, fucking-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "fucking",
                  "tag": "JJ",
                  "word": "fucking"
                },
                "gov": {
                  "index": "8",
                  "lemma": "name",
                  "tag": "NN",
                  "word": "name"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(name-8, program-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "program",
                  "tag": "NN",
                  "word": "program"
                },
                "gov": {
                  "index": "8",
                  "lemma": "name",
                  "tag": "NN",
                  "word": "name"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Life-9, name-8)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "name",
                  "tag": "NN",
                  "word": "name"
                },
                "gov": {
                  "index": "9",
                  "lemma": "Life",
                  "tag": "NNP",
                  "word": "Life"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "trust"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "NN": "program"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_3_node": {
                  "NN": "name"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "VBG": "fucking"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "do"
                },
                "s_node_1_node_2_node_1_node_4_node": {
                  "NN": "Life"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "Life.\u0027\u0027"
                ]
              }
            },
            "sentence": "I don\u0027t trust a fucking program name Life.\u0027\u0027"
          },
          "jazzyState": {
            "text": "I don\u0027t trust a fucking program name Life.\u0027\u0027",
            "misspelledWords": {
              "fucking": [
                "mucking",
                "bucking",
                "sucking",
                "ducking",
                "tucking"
              ]
            }
          },
          "dialogState": {
            "sentence": "I don\u0027t trust a fucking program name Life.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A Life agent processes Jay through the bodybox, nano sand, headspheres and the stem-chip growing in Jay\u0027s forehead. The agent transmits Jay\u0027s talk and Jay\u0027s thought into a database called Jay.",
      "wordCount": 31,
      "order": 6,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A Life agent processes Jay through the bodybox, nano sand, headspheres and the stem-chip growing in Jay\u0027s forehead.",
          "wordCount": 18,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "A Life agent processes Jay through the bodybox, nano sand, headspheres and the stem-chip growing in Jay\u0027s forehead.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Life",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "agent",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "processes",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "bodybox",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "nano",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "sand",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "headspheres",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "stem-chip",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBG",
                "text": "growing",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "forehead",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, processes-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(agent-3, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "3",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(agent-3, Life-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Life",
                  "tag": "NNP",
                  "word": "Life"
                },
                "gov": {
                  "index": "3",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(processes-4, stem-chip-16)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "16",
                  "lemma": "stem-chip",
                  "tag": "NN",
                  "word": "stem-chip"
                },
                "gov": {
                  "index": "4",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                }
              },
              {
                "reln": {
                  "string": "dep(processes-4, growing-17)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "17",
                  "lemma": "grow",
                  "tag": "VBG",
                  "word": "growing"
                },
                "gov": {
                  "index": "4",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(processes-4, agent-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                },
                "gov": {
                  "index": "4",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(processes-4, Jay-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "4",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(processes-4, .-22)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "22",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(processes-4, bodybox-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "8",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                },
                "gov": {
                  "index": "4",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(processes-4, sand-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "11",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                },
                "gov": {
                  "index": "4",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(processes-4, headspheres-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "13",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                },
                "gov": {
                  "index": "4",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(bodybox-8, stem-chip-16)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "16",
                  "lemma": "stem-chip",
                  "tag": "NN",
                  "word": "stem-chip"
                },
                "gov": {
                  "index": "8",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(bodybox-8, through-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "through",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "8",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(bodybox-8, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "8",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(bodybox-8, ,-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(bodybox-8, sand-11)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "11",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                },
                "gov": {
                  "index": "8",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(bodybox-8, ,-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(bodybox-8, headspheres-13)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "13",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                },
                "gov": {
                  "index": "8",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(bodybox-8, and-14)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "14",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "8",
                  "lemma": "bodybox",
                  "tag": "NN",
                  "word": "bodybox"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(sand-11, nano-10)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "10",
                  "lemma": "nano",
                  "tag": "NN",
                  "word": "nano"
                },
                "gov": {
                  "index": "11",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(stem-chip-16, the-15)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "15",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "16",
                  "lemma": "stem-chip",
                  "tag": "NN",
                  "word": "stem-chip"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(growing-17, forehead-21)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "21",
                  "lemma": "forehead",
                  "tag": "NN",
                  "word": "forehead"
                },
                "gov": {
                  "index": "17",
                  "lemma": "grow",
                  "tag": "VBG",
                  "word": "growing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Jay-19, \u0027s-20)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "20",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "19",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(forehead-21, in-18)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "18",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "21",
                  "lemma": "forehead",
                  "tag": "NN",
                  "word": "forehead"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(forehead-21, Jay-19)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "19",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "21",
                  "lemma": "forehead",
                  "tag": "NN",
                  "word": "forehead"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_6_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_6_node_1_node_1_node_1_node": {
                  "NN": "forehead"
                },
                "s_node_1_node_2_node_1_node_6_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_2_node_1_node_6_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_6_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "NN": "bodybox"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_6_node_1_node_1_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node": {
                  "NN": "sand"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_2_node_1_node_6_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "processes"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_node_2_node_1_node_4_node": {
                  "NNS": "headspheres"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "through"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_5_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_2_node_1_node_6_node_0_node_1_node": {
                  "JJ": "stem-chip"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Life"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_6_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_4_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_6_node_0_node_2_node": {
                  "VBG": "growing"
                },
                "s_node_0_node_2_node": {
                  "NN": "agent"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_2_node_0_node": {
                  "NN": "nano"
                },
                "s_node_1_node_2_node_1_node_6_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_6_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Jay"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "forehead."
                ]
              }
            },
            "sentence": "A Life agent processes Jay through the bodybox, nano sand, headspheres and the stem-chip growing in Jay\u0027s forehead."
          },
          "jazzyState": {
            "text": "A Life agent processes Jay through the bodybox, nano sand, headspheres and the stem-chip growing in Jay\u0027s forehead.",
            "misspelledWords": {
              "nano": [
                "non"
              ],
              "headspheres": [],
              "Jay\u0027s": [
                "jaw\u0027s",
                "joy\u0027s",
                "ray\u0027s",
                "day\u0027s",
                "way\u0027s",
                "jab\u0027s",
                "jar\u0027s"
              ],
              "bodybox": [
                "bedbugs"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The agent transmits Jay\u0027s talk and Jay\u0027s thought into a database called Jay.",
          "wordCount": 13,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "The agent transmits Jay\u0027s talk and Jay\u0027s thought into a database called Jay.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "agent",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "transmits",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "talk",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBN",
                "text": "thought",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "database",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBN",
                "text": "called",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, transmits-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "transmit",
                  "tag": "VBZ",
                  "word": "transmits"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(agent-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(transmits-3, .-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "transmit",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(transmits-3, agent-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                },
                "gov": {
                  "index": "3",
                  "lemma": "transmit",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(transmits-3, talk-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "talk",
                  "tag": "NN",
                  "word": "talk"
                },
                "gov": {
                  "index": "3",
                  "lemma": "transmit",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(transmits-3, and-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "transmit",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(transmits-3, thought-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "think",
                  "tag": "VBN",
                  "word": "thought"
                },
                "gov": {
                  "index": "3",
                  "lemma": "transmit",
                  "tag": "VBZ",
                  "word": "transmits"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Jay-4, \u0027s-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(talk-6, Jay-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "6",
                  "lemma": "talk",
                  "tag": "NN",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Jay-8, \u0027s-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(thought-10, Jay-8)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "10",
                  "lemma": "think",
                  "tag": "VBN",
                  "word": "thought"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:into(thought-10, database-13)",
                  "name": "nmod_preposition",
                  "tag": "nmod:into"
                },
                "dep": {
                  "index": "13",
                  "lemma": "database",
                  "tag": "NN",
                  "word": "database"
                },
                "gov": {
                  "index": "10",
                  "lemma": "think",
                  "tag": "VBN",
                  "word": "thought"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(database-13, into-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "into",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "13",
                  "lemma": "database",
                  "tag": "NN",
                  "word": "database"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(database-13, a-12)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "12",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "13",
                  "lemma": "database",
                  "tag": "NN",
                  "word": "database"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(database-13, called-14)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "14",
                  "lemma": "call",
                  "tag": "VBN",
                  "word": "called"
                },
                "gov": {
                  "index": "13",
                  "lemma": "database",
                  "tag": "NN",
                  "word": "database"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(called-14, Jay-15)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "15",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "14",
                  "lemma": "call",
                  "tag": "VBN",
                  "word": "called"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "NN": "database"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node": {
                  "NN": "thought"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "transmits"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NN": "talk"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "into"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_0_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "agent"
                },
                "s_node_1_node_1_node_2_node_0_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "VBN": "called"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Jay."
                ]
              }
            },
            "sentence": "The agent transmits Jay\u0027s talk and Jay\u0027s thought into a database called Jay."
          },
          "jazzyState": {
            "text": "The agent transmits Jay\u0027s talk and Jay\u0027s thought into a database called Jay.",
            "misspelledWords": {
              "Jay\u0027s": [
                "jaw\u0027s",
                "joy\u0027s",
                "ray\u0027s",
                "day\u0027s",
                "way\u0027s",
                "jab\u0027s",
                "jar\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Whiny Jay mumbles. \u0027\u0027Did Jesus ruin our trip to Mars? Do we still get to work on Mars? Is the chip in my forehead connecting to Life? Why can\u0027t I read minds?\u0027\u0027",
      "wordCount": 32,
      "order": 7,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Whiny Jay mumbles.",
          "wordCount": 3,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Whiny Jay mumbles.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Whiny",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "mumbles",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Jay-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Jay-2, Whiny-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Whiny",
                  "tag": "NNP",
                  "word": "Whiny"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "string": "dep(Jay-2, mumbles-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "mumble",
                  "tag": "NNS",
                  "word": "mumbles"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Jay-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "mumbles"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Jay"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Whiny"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "mumbles."
                ]
              }
            },
            "sentence": "Whiny Jay mumbles."
          },
          "jazzyState": {
            "text": "Whiny Jay mumbles.",
            "misspelledWords": {
              "Whiny": [
                "whine",
                "shiny"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Did Jesus ruin our trip to Mars?",
          "wordCount": 7,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "\u0027\u0027Did Jesus ruin our trip to Mars?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "Did",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Jesus",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "ruin",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP$",
                "text": "our",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "trip",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Mars",
                "net": "LOCATION"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, ruin-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "ruin",
                  "tag": "VB",
                  "word": "ruin"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(ruin-4, \u0027\u0027-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "ruin",
                  "tag": "VB",
                  "word": "ruin"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(ruin-4, Did-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "Did"
                },
                "gov": {
                  "index": "4",
                  "lemma": "ruin",
                  "tag": "VB",
                  "word": "ruin"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(ruin-4, Jesus-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Jesus",
                  "tag": "NNP",
                  "word": "Jesus"
                },
                "gov": {
                  "index": "4",
                  "lemma": "ruin",
                  "tag": "VB",
                  "word": "ruin"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(ruin-4, trip-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "trip",
                  "tag": "NN",
                  "word": "trip"
                },
                "gov": {
                  "index": "4",
                  "lemma": "ruin",
                  "tag": "VB",
                  "word": "ruin"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(ruin-4, Mars-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                },
                "gov": {
                  "index": "4",
                  "lemma": "ruin",
                  "tag": "VB",
                  "word": "ruin"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ruin-4, ?-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "ruin",
                  "tag": "VB",
                  "word": "ruin"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(trip-6, our-5)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "5",
                  "lemma": "we",
                  "tag": "PRP$",
                  "word": "our"
                },
                "gov": {
                  "index": "6",
                  "lemma": "trip",
                  "tag": "NN",
                  "word": "trip"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Mars-8, to-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "PRP$": "our"
                },
                "s_node_2_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Jesus"
                },
                "s_node_2_node_0_node": {
                  "VBP": "ruin"
                },
                "s_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "trip"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_2_node_1_node": {
                  "NNP": "Mars"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Did"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Did Jesus ruin our trip to Mars?"
          },
          "jazzyState": {
            "text": "\u0027\u0027Did Jesus ruin our trip to Mars?",
            "misspelledWords": {
              "Jesus": [
                "jests"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Did Jesus ruin our trip to Mars?",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Do we still get to work on Mars?",
          "wordCount": 8,
          "orderParagraph": 3,
          "nlpState": {
            "sentence": "Do we still get to work on Mars?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "VB",
                "text": "Do",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "we",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "still",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "get",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "work",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Mars",
                "net": "LOCATION"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Do-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "do",
                  "tag": "VB",
                  "word": "Do"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(Do-1, get-4)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "4",
                  "lemma": "get",
                  "tag": "VB",
                  "word": "get"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "tag": "VB",
                  "word": "Do"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Do-1, ?-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "do",
                  "tag": "VB",
                  "word": "Do"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(get-4, we-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "we"
                },
                "gov": {
                  "index": "4",
                  "lemma": "get",
                  "tag": "VB",
                  "word": "get"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(get-4, still-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "still",
                  "tag": "RB",
                  "word": "still"
                },
                "gov": {
                  "index": "4",
                  "lemma": "get",
                  "tag": "VB",
                  "word": "get"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(get-4, work-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "work",
                  "tag": "VB",
                  "word": "work"
                },
                "gov": {
                  "index": "4",
                  "lemma": "get",
                  "tag": "VB",
                  "word": "get"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(work-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "work",
                  "tag": "VB",
                  "word": "work"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(work-6, Mars-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                },
                "gov": {
                  "index": "6",
                  "lemma": "work",
                  "tag": "VB",
                  "word": "work"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Mars-8, on-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "on",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Mars"
                },
                "s_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_3_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "RB": "still"
                },
                "s_node_3_node_0_node": {
                  "VB": "get"
                },
                "s_node_3_node_1_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_3_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node": {
                  "PRP": "we"
                },
                "s_node_3_node_1_node_1_node_0_node": {
                  "VB": "work"
                },
                "s_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "VBP": "Do"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Do we still get to work on Mars?"
          },
          "jazzyState": {
            "text": "Do we still get to work on Mars?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Is the chip in my forehead connecting to Life?",
          "wordCount": 9,
          "orderParagraph": 4,
          "nlpState": {
            "sentence": "Is the chip in my forehead connecting to Life?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "Is",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "chip",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "forehead",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBG",
                "text": "connecting",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Life",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, connecting-7)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "7",
                  "lemma": "connect",
                  "tag": "VBG",
                  "word": "connecting"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(chip-3, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "3",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(chip-3, forehead-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "6",
                  "lemma": "forehead",
                  "tag": "NN",
                  "word": "forehead"
                },
                "gov": {
                  "index": "3",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(forehead-6, in-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "6",
                  "lemma": "forehead",
                  "tag": "NN",
                  "word": "forehead"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(forehead-6, my-5)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "5",
                  "lemma": "my",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "6",
                  "lemma": "forehead",
                  "tag": "NN",
                  "word": "forehead"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(connecting-7, Is-1)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                },
                "gov": {
                  "index": "7",
                  "lemma": "connect",
                  "tag": "VBG",
                  "word": "connecting"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(connecting-7, chip-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                },
                "gov": {
                  "index": "7",
                  "lemma": "connect",
                  "tag": "VBG",
                  "word": "connecting"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(connecting-7, Life-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Life",
                  "tag": "NNP",
                  "word": "Life"
                },
                "gov": {
                  "index": "7",
                  "lemma": "connect",
                  "tag": "VBG",
                  "word": "connecting"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(connecting-7, ?-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "7",
                  "lemma": "connect",
                  "tag": "VBG",
                  "word": "connecting"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Life-9, to-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "9",
                  "lemma": "Life",
                  "tag": "NNP",
                  "word": "Life"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_0_node": {
                  "VBG": "connecting"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_1_node_0_node_1_node": {
                  "NN": "chip"
                },
                "s_node_2_node_1_node_1_node": {
                  "NNP": "Life"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "forehead"
                },
                "s_node_0_node": {
                  "VBZ": "Is"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "in"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Is the chip in my forehead connecting to Life?"
          },
          "jazzyState": {
            "text": "Is the chip in my forehead connecting to Life?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Why can\u0027t I read minds?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 5,
          "nlpState": {
            "sentence": "Why can\u0027t I read minds?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "MD",
                "text": "ca",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "read",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "minds",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, read-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "read",
                  "tag": "VBP",
                  "word": "read"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(ca-2, Why-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "why",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "2",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "ca"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(ca-2, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "2",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "ca"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(read-5, ca-2)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "ca"
                },
                "gov": {
                  "index": "5",
                  "lemma": "read",
                  "tag": "VBP",
                  "word": "read"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(read-5, I-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "5",
                  "lemma": "read",
                  "tag": "VBP",
                  "word": "read"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(read-5, minds-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "mind",
                  "tag": "NNS",
                  "word": "minds"
                },
                "gov": {
                  "index": "5",
                  "lemma": "read",
                  "tag": "VBP",
                  "word": "read"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(read-5, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "5",
                  "lemma": "read",
                  "tag": "VBP",
                  "word": "read"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(read-5, \u0027\u0027-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "5",
                  "lemma": "read",
                  "tag": "VBP",
                  "word": "read"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_0_node": {
                  "VB": "read"
                },
                "s_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_3_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_leaf": {
                  "phrase": "SQ"
                },
                "s_node_1_node_2_node": {
                  "PRP": "I"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_3_node_1_node": {
                  "NNS": "minds"
                },
                "s_node_0_node": {
                  "WRB": "Why"
                },
                "s_node_1_node_0_node": {
                  "MD": "ca"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Why can\u0027t I read minds?\u0027\u0027"
          },
          "jazzyState": {
            "text": "Why can\u0027t I read minds?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Why can\u0027t I read minds?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Jay\u0027s Life agent orchestrates and processes Jay\u0027s whiny shout and Jay\u0027s whiny talk from his headsphere to the other nine people\u0027s headspheres.",
      "wordCount": 22,
      "order": 8,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Jay\u0027s Life agent orchestrates and processes Jay\u0027s whiny shout and Jay\u0027s whiny talk from his headsphere to the other nine people\u0027s headspheres.",
          "wordCount": 22,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Jay\u0027s Life agent orchestrates and processes Jay\u0027s whiny shout and Jay\u0027s whiny talk from his headsphere to the other nine people\u0027s headspheres.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Life",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "agent",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "orchestrates",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "processes",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "whiny",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "shout",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "whiny",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "talk",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "PRP$",
                "text": "his",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "headsphere",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "other",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CD",
                "text": "nine",
                "net": "NUMBER"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "people",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "headspheres",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, orchestrates-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "orchestrate",
                  "tag": "VBZ",
                  "word": "orchestrates"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Jay-1, \u0027s-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(agent-4, Jay-1)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "4",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(agent-4, Life-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Life",
                  "tag": "NNP",
                  "word": "Life"
                },
                "gov": {
                  "index": "4",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(orchestrates-5, agent-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                },
                "gov": {
                  "index": "5",
                  "lemma": "orchestrate",
                  "tag": "VBZ",
                  "word": "orchestrates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(orchestrates-5, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "orchestrate",
                  "tag": "VBZ",
                  "word": "orchestrates"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(orchestrates-5, processes-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                },
                "gov": {
                  "index": "5",
                  "lemma": "orchestrate",
                  "tag": "VBZ",
                  "word": "orchestrates"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(orchestrates-5, .-27)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "27",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "orchestrate",
                  "tag": "VBZ",
                  "word": "orchestrates"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(processes-7, talk-16)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "16",
                  "lemma": "talk",
                  "tag": "NN",
                  "word": "talk"
                },
                "gov": {
                  "index": "7",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(processes-7, agent-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                },
                "gov": {
                  "index": "7",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(processes-7, headspheres-26)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "26",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                },
                "gov": {
                  "index": "7",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(processes-7, shout-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "shout",
                  "tag": "NN",
                  "word": "shout"
                },
                "gov": {
                  "index": "7",
                  "lemma": "process",
                  "tag": "VBZ",
                  "word": "processes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Jay-8, \u0027s-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "8",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(shout-11, talk-16)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "16",
                  "lemma": "talk",
                  "tag": "NN",
                  "word": "talk"
                },
                "gov": {
                  "index": "11",
                  "lemma": "shout",
                  "tag": "NN",
                  "word": "shout"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(shout-11, Jay-8)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "8",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "11",
                  "lemma": "shout",
                  "tag": "NN",
                  "word": "shout"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(shout-11, whiny-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "whiny",
                  "tag": "JJ",
                  "word": "whiny"
                },
                "gov": {
                  "index": "11",
                  "lemma": "shout",
                  "tag": "NN",
                  "word": "shout"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(shout-11, and-12)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "12",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "11",
                  "lemma": "shout",
                  "tag": "NN",
                  "word": "shout"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Jay-13, \u0027s-14)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "14",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "13",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(talk-16, headsphere-19)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "19",
                  "lemma": "headsphere",
                  "tag": "NN",
                  "word": "headsphere"
                },
                "gov": {
                  "index": "16",
                  "lemma": "talk",
                  "tag": "NN",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(talk-16, Jay-13)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "13",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "16",
                  "lemma": "talk",
                  "tag": "NN",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(talk-16, whiny-15)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "15",
                  "lemma": "whiny",
                  "tag": "JJ",
                  "word": "whiny"
                },
                "gov": {
                  "index": "16",
                  "lemma": "talk",
                  "tag": "NN",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(headsphere-19, from-17)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "17",
                  "lemma": "from",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "19",
                  "lemma": "headsphere",
                  "tag": "NN",
                  "word": "headsphere"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(headsphere-19, his-18)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "18",
                  "lemma": "he",
                  "tag": "PRP$",
                  "word": "his"
                },
                "gov": {
                  "index": "19",
                  "lemma": "headsphere",
                  "tag": "NN",
                  "word": "headsphere"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(people-24, the-21)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "21",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "24",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(people-24, other-22)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "22",
                  "lemma": "other",
                  "tag": "JJ",
                  "word": "other"
                },
                "gov": {
                  "index": "24",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(people-24, nine-23)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "23",
                  "lemma": "nine",
                  "tag": "CD",
                  "word": "nine"
                },
                "gov": {
                  "index": "24",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(people-24, \u0027s-25)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "25",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "24",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(headspheres-26, to-20)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "20",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "26",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(headspheres-26, people-24)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "24",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                },
                "gov": {
                  "index": "26",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "JJ": "whiny"
                },
                "s_node_1_node_2_node_1_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_2_node_1_node_2_node_0_node_1_node": {
                  "JJ": "whiny"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node": {
                  "NNS": "headspheres"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node_3_node": {
                  "NNS": "people"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_0_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "orchestrates"
                },
                "s_node_1_node_2_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node_0_node_0_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_2_node_0_node": {
                  "VBZ": "processes"
                },
                "s_node_1_node_2_node_1_node_0_node_2_node": {
                  "NN": "shout"
                },
                "s_node_1_node_2_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node_0_node_2_node": {
                  "NN": "talk"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node_1_node": {
                  "JJ": "other"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "Life"
                },
                "s_node_1_node_2_node_1_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_1_node_0_node": {
                  "PRP$": "his"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node_4_node": {
                  "POS": "\u0027s"
                },
                "s_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node_2_node": {
                  "CD": "nine"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "agent"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_2_node_0_node_0_node_1_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_2_node_1_node_2_node_1_node_1_node_1_node": {
                  "NN": "headsphere"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "headspheres."
                ]
              }
            },
            "sentence": "Jay\u0027s Life agent orchestrates and processes Jay\u0027s whiny shout and Jay\u0027s whiny talk from his headsphere to the other nine people\u0027s headspheres."
          },
          "jazzyState": {
            "text": "Jay\u0027s Life agent orchestrates and processes Jay\u0027s whiny shout and Jay\u0027s whiny talk from his headsphere to the other nine people\u0027s headspheres.",
            "misspelledWords": {
              "headsphere": [],
              "headspheres": [],
              "Jay\u0027s": [
                "jaw\u0027s",
                "joy\u0027s",
                "ray\u0027s",
                "day\u0027s",
                "way\u0027s",
                "jab\u0027s",
                "jar\u0027s"
              ],
              "orchestrates": [],
              "whiny": [
                "whine",
                "shiny"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Jay looks at the other nine heads inside headspheres sticking from tops of white panel bodyboxes. \u0027\u0027John, can you hear me?  Sue? Achea, Jobin, Barack? Some one. What about you, Oprah? Ruth? Come on Judith and Leah? I saw you get injected with a nano chip, stem chip, whatever the fuck they called it. I didn\u0027t see them. Maybe they didn\u0027t? Can you read my mind?\u0027\u0027 \u003c|If you can then fuck you.\u003e",
      "wordCount": 72,
      "order": 9,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Jay looks at the other nine heads inside headspheres sticking from tops of white panel bodyboxes.",
          "wordCount": 16,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Jay looks at the other nine heads inside headspheres sticking from tops of white panel bodyboxes.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "looks",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "other",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CD",
                "text": "nine",
                "net": "NUMBER"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "heads",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "inside",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "headspheres",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBG",
                "text": "sticking",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "tops",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "white",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "panel",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "bodyboxes",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, looks-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "tag": "VBZ",
                  "word": "looks"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(looks-2, Jay-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(looks-2, .-17)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "17",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(looks-2, heads-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "7",
                  "lemma": "head",
                  "tag": "NNS",
                  "word": "heads"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:inside(looks-2, headspheres-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:inside"
                },
                "dep": {
                  "index": "9",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "tag": "VBZ",
                  "word": "looks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(heads-7, at-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "at",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "7",
                  "lemma": "head",
                  "tag": "NNS",
                  "word": "heads"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(heads-7, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "head",
                  "tag": "NNS",
                  "word": "heads"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(heads-7, other-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "other",
                  "tag": "JJ",
                  "word": "other"
                },
                "gov": {
                  "index": "7",
                  "lemma": "head",
                  "tag": "NNS",
                  "word": "heads"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(heads-7, nine-6)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "nine",
                  "tag": "CD",
                  "word": "nine"
                },
                "gov": {
                  "index": "7",
                  "lemma": "head",
                  "tag": "NNS",
                  "word": "heads"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(headspheres-9, inside-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "inside",
                  "tag": "IN",
                  "word": "inside"
                },
                "gov": {
                  "index": "9",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(headspheres-9, sticking-10)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "10",
                  "lemma": "stick",
                  "tag": "VBG",
                  "word": "sticking"
                },
                "gov": {
                  "index": "9",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(sticking-10, tops-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "12",
                  "lemma": "top",
                  "tag": "NNS",
                  "word": "tops"
                },
                "gov": {
                  "index": "10",
                  "lemma": "stick",
                  "tag": "VBG",
                  "word": "sticking"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(tops-12, bodyboxes-16)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "16",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                },
                "gov": {
                  "index": "12",
                  "lemma": "top",
                  "tag": "NNS",
                  "word": "tops"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(tops-12, from-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "from",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "12",
                  "lemma": "top",
                  "tag": "NNS",
                  "word": "tops"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(bodyboxes-16, of-13)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "13",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "16",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(bodyboxes-16, white-14)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "14",
                  "lemma": "white",
                  "tag": "JJ",
                  "word": "white"
                },
                "gov": {
                  "index": "16",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(bodyboxes-16, panel-15)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "15",
                  "lemma": "panel",
                  "tag": "NN",
                  "word": "panel"
                },
                "gov": {
                  "index": "16",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "panel"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "NNS": "headspheres"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node_2_node": {
                  "NNS": "bodyboxes"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "JJ": "other"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_0_node": {
                  "NNS": "tops"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "looks"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "inside"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "CD": "nine"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_3_node": {
                  "NNS": "heads"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "JJ": "white"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "VBG": "sticking"
                },
                "s_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "bodyboxes."
                ]
              }
            },
            "sentence": "Jay looks at the other nine heads inside headspheres sticking from tops of white panel bodyboxes."
          },
          "jazzyState": {
            "text": "Jay looks at the other nine heads inside headspheres sticking from tops of white panel bodyboxes.",
            "misspelledWords": {
              "bodyboxes": [],
              "headspheres": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027John, can you hear me?",
          "wordCount": 5,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "\u0027\u0027John, can you hear me?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "John",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "MD",
                "text": "can",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "hear",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "me",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, can-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "can"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(John-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(can-4, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "can"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(can-4, John-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                },
                "gov": {
                  "index": "4",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "can"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(can-4, you-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "4",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "can"
                }
              },
              {
                "reln": {
                  "string": "dep(can-4, hear-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "hear",
                  "tag": "VB",
                  "word": "hear"
                },
                "gov": {
                  "index": "4",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "can"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(can-4, ?-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "can"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hear-6, me-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "6",
                  "lemma": "hear",
                  "tag": "VB",
                  "word": "hear"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_2_node_0_node": {
                  "VB": "hear"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "PRP": "you"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node_0_node": {
                  "MD": "can"
                },
                "s_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_2_node_1_node": {
                  "PRP": "me"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "NNP": "John"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027John, can you hear me?"
          },
          "jazzyState": {
            "text": "\u0027\u0027John, can you hear me?",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027John, can you hear me?",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Sue?",
          "wordCount": 1,
          "orderParagraph": 3,
          "nlpState": {
            "sentence": "Sue?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "VB",
                "text": "Sue",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Sue-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "sue",
                  "tag": "VB",
                  "word": "Sue"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Sue-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "sue",
                  "tag": "VB",
                  "word": "Sue"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VB": "Sue"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Sue?"
          },
          "jazzyState": {
            "text": "Sue?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Achea, Jobin, Barack?",
          "wordCount": 3,
          "orderParagraph": 4,
          "nlpState": {
            "sentence": "Achea, Jobin, Barack?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Achea",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Jobin",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Barack",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Jobin-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Jobin",
                  "tag": "NNP",
                  "word": "Jobin"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(Jobin-3, Achea-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Achea",
                  "tag": "NNP",
                  "word": "Achea"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Jobin",
                  "tag": "NNP",
                  "word": "Jobin"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Jobin-3, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "Jobin",
                  "tag": "NNP",
                  "word": "Jobin"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Jobin-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "Jobin",
                  "tag": "NNP",
                  "word": "Jobin"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(Jobin-3, Barack-5)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Barack",
                  "tag": "NNP",
                  "word": "Barack"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Jobin",
                  "tag": "NNP",
                  "word": "Jobin"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Jobin-3, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Jobin",
                  "tag": "NNP",
                  "word": "Jobin"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node_0_node": {
                  "NNP": "Jobin"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Achea"
                },
                "s_node_2_node_2_node": {
                  "NNP": "Barack"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Achea, Jobin, Barack?"
          },
          "jazzyState": {
            "text": "Achea, Jobin, Barack?",
            "misspelledWords": {
              "Achea": [
                "ache",
                "ached",
                "aches"
              ],
              "Jobin": [
                "robin",
                "join"
              ],
              "Barack": [
                "barrack"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Some one.",
          "wordCount": 2,
          "orderParagraph": 5,
          "nlpState": {
            "sentence": "Some one.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "DT",
                "text": "Some",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CD",
                "text": "one",
                "net": "NUMBER"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Some-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "some",
                  "tag": "DT",
                  "word": "Some"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Some-1, one-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "one",
                  "tag": "CD",
                  "word": "one"
                },
                "gov": {
                  "index": "1",
                  "lemma": "some",
                  "tag": "DT",
                  "word": "Some"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Some-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "some",
                  "tag": "DT",
                  "word": "Some"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "one"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "DT": "Some"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "one."
                ]
              }
            },
            "sentence": "Some one."
          },
          "jazzyState": {
            "text": "Some one.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "What about you, Oprah?",
          "wordCount": 4,
          "orderParagraph": 6,
          "nlpState": {
            "sentence": "What about you, Oprah?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "WP",
                "text": "What",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "about",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Oprah",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, What-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "what",
                  "tag": "WP",
                  "word": "What"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:about(What-1, you-3)",
                  "name": "nmod_preposition",
                  "tag": "nmod:about"
                },
                "dep": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "1",
                  "lemma": "what",
                  "tag": "WP",
                  "word": "What"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(What-1, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "what",
                  "tag": "WP",
                  "word": "What"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(you-3, about-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "about",
                  "tag": "IN",
                  "word": "about"
                },
                "gov": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(you-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(you-3, Oprah-5)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Oprah",
                  "tag": "NNP",
                  "word": "Oprah"
                },
                "gov": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_2_node": {
                  "NNP": "Oprah"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "WDT": "What"
                },
                "s_node_1_node_0_node": {
                  "IN": "about"
                },
                "s_node_1_node_1_node_0_node": {
                  "PRP": "you"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "What about you, Oprah?"
          },
          "jazzyState": {
            "text": "What about you, Oprah?",
            "misspelledWords": {
              "Oprah": [
                "opera"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Ruth?",
          "wordCount": 1,
          "orderParagraph": 7,
          "nlpState": {
            "sentence": "Ruth?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Ruth",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Ruth-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Ruth",
                  "tag": "NNP",
                  "word": "Ruth"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Ruth-1, ?-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Ruth",
                  "tag": "NNP",
                  "word": "Ruth"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNP": "Ruth"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Ruth?"
          },
          "jazzyState": {
            "text": "Ruth?",
            "misspelledWords": {
              "Ruth": [
                "truth",
                "rut",
                "ruts",
                "rush"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Come on Judith and Leah?",
          "wordCount": 5,
          "orderParagraph": 8,
          "nlpState": {
            "sentence": "Come on Judith and Leah?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "VB",
                "text": "Come",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Judith",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Leah",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Come-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "come",
                  "tag": "VB",
                  "word": "Come"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(Come-1, Judith-3)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Judith",
                  "tag": "NNP",
                  "word": "Judith"
                },
                "gov": {
                  "index": "1",
                  "lemma": "come",
                  "tag": "VB",
                  "word": "Come"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(Come-1, Leah-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Leah",
                  "tag": "NNP",
                  "word": "Leah"
                },
                "gov": {
                  "index": "1",
                  "lemma": "come",
                  "tag": "VB",
                  "word": "Come"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Come-1, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "come",
                  "tag": "VB",
                  "word": "Come"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Judith-3, on-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "on",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Judith",
                  "tag": "NNP",
                  "word": "Judith"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Judith-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Judith",
                  "tag": "NNP",
                  "word": "Judith"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(Judith-3, Leah-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Leah",
                  "tag": "NNP",
                  "word": "Leah"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Judith",
                  "tag": "NNP",
                  "word": "Judith"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_0_node": {
                  "NNP": "Judith"
                },
                "s_node_1_node": {
                  "PERIOD": "?"
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_2_node": {
                  "NNP": "Leah"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "VB": "Come"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "on"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Come on Judith and Leah?"
          },
          "jazzyState": {
            "text": "Come on Judith and Leah?",
            "misspelledWords": {
              "Judith": [],
              "Leah": [
                "yeah",
                "leash",
                "lead",
                "leap",
                "lean",
                "leak",
                "leaf"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I saw you get injected with a nano chip, stem chip, whatever the fuck they called it.",
          "wordCount": 17,
          "orderParagraph": 9,
          "nlpState": {
            "sentence": "I saw you get injected with a nano chip, stem chip, whatever the fuck they called it.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "saw",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "get",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBN",
                "text": "injected",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "nano",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "chip",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "stem",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "chip",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WDT",
                "text": "whatever",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "fuck",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "they",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "called",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "it",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stem-11)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "11",
                  "lemma": "stem",
                  "tag": "VBP",
                  "word": "stem"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(saw-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "see",
                  "tag": "VBD",
                  "word": "saw"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(saw-2, injected-5)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "inject",
                  "tag": "VBN",
                  "word": "injected"
                },
                "gov": {
                  "index": "2",
                  "lemma": "see",
                  "tag": "VBD",
                  "word": "saw"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(injected-5, you-3)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "5",
                  "lemma": "inject",
                  "tag": "VBN",
                  "word": "injected"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(injected-5, get-4)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "4",
                  "lemma": "get",
                  "tag": "VB",
                  "word": "get"
                },
                "gov": {
                  "index": "5",
                  "lemma": "inject",
                  "tag": "VBN",
                  "word": "injected"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(injected-5, chip-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "9",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                },
                "gov": {
                  "index": "5",
                  "lemma": "inject",
                  "tag": "VBN",
                  "word": "injected"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(chip-9, with-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "with",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "9",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(chip-9, a-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "9",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(chip-9, nano-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "nano",
                  "tag": "JJ",
                  "word": "nano"
                },
                "gov": {
                  "index": "9",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(stem-11, saw-2)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "2",
                  "lemma": "see",
                  "tag": "VBD",
                  "word": "saw"
                },
                "gov": {
                  "index": "11",
                  "lemma": "stem",
                  "tag": "VBP",
                  "word": "stem"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stem-11, .-20)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "20",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "11",
                  "lemma": "stem",
                  "tag": "VBP",
                  "word": "stem"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stem-11, ,-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "11",
                  "lemma": "stem",
                  "tag": "VBP",
                  "word": "stem"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stem-11, chip-12)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "12",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                },
                "gov": {
                  "index": "11",
                  "lemma": "stem",
                  "tag": "VBP",
                  "word": "stem"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(chip-12, called-18)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "18",
                  "lemma": "call",
                  "tag": "VBD",
                  "word": "called"
                },
                "gov": {
                  "index": "12",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(chip-12, ,-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "12",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                }
              },
              {
                "reln": {
                  "string": "dep(fuck-16, they-17)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "17",
                  "lemma": "they",
                  "tag": "PRP",
                  "word": "they"
                },
                "gov": {
                  "index": "16",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(fuck-16, the-15)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "15",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "16",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(called-18, fuck-16)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "16",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                },
                "gov": {
                  "index": "18",
                  "lemma": "call",
                  "tag": "VBD",
                  "word": "called"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(called-18, it-19)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "19",
                  "lemma": "it",
                  "tag": "PRP",
                  "word": "it"
                },
                "gov": {
                  "index": "18",
                  "lemma": "call",
                  "tag": "VBD",
                  "word": "called"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(called-18, whatever-14)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "14",
                  "lemma": "whatever",
                  "tag": "WDT",
                  "word": "whatever"
                },
                "gov": {
                  "index": "18",
                  "lemma": "call",
                  "tag": "VBD",
                  "word": "called"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node": {
                  "NN": "chip"
                },
                "s_node_1_node_1_node_1_node_4_node_1_node_1_node_1_node_0_node": {
                  "VBD": "called"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_4_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_4_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_0_node": {
                  "VBN": "injected"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBD": "saw"
                },
                "s_node_1_node_1_node_0_node": {
                  "PRP": "you"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_4_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_4_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "VB": "get"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_4_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_4_node_1_node_1_node_1_node_1_node": {
                  "PRP": "it"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_node_1_node": {
                  "NN": "nano"
                },
                "s_node_1_node_1_node_1_node_4_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node": {
                  "VB": "stem"
                },
                "s_node_1_node_1_node_1_node_4_node_1_node_1_node_0_node": {
                  "PRP": "they"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_4_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_4_node_0_node": {
                  "VB": "whatever"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node_1_node_1_node_2_node": {
                  "NN": "chip"
                },
                "s_node_1_node_1_node_1_node_4_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_1_node_1_node_4_node_1_node_0_node_1_node": {
                  "NN": "fuck"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "it."
                ]
              }
            },
            "sentence": "I saw you get injected with a nano chip, stem chip, whatever the fuck they called it."
          },
          "jazzyState": {
            "text": "I saw you get injected with a nano chip, stem chip, whatever the fuck they called it.",
            "misspelledWords": {
              "nano": [
                "non"
              ],
              "fuck": [
                "muck",
                "buck",
                "suck",
                "luck",
                "duck",
                "tuck",
                "yuck"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I didn\u0027t see them.",
          "wordCount": 4,
          "orderParagraph": 10,
          "nlpState": {
            "sentence": "I didn\u0027t see them.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "did",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "see",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "them",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, see-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(see-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(see-4, did-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(see-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(see-4, them-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "they",
                  "tag": "PRP",
                  "word": "them"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(see-4, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "see"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "PRP": "them"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBD": "did"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "them."
                ]
              }
            },
            "sentence": "I didn\u0027t see them."
          },
          "jazzyState": {
            "text": "I didn\u0027t see them.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Maybe they didn\u0027t?",
          "wordCount": 3,
          "orderParagraph": 11,
          "nlpState": {
            "sentence": "Maybe they didn\u0027t?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "RB",
                "text": "Maybe",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "they",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "did",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, did-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(did-3, Maybe-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "maybe",
                  "tag": "RB",
                  "word": "Maybe"
                },
                "gov": {
                  "index": "3",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(did-3, they-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "they",
                  "tag": "PRP",
                  "word": "they"
                },
                "gov": {
                  "index": "3",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(did-3, n\u0027t-4)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "4",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "3",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(did-3, ?-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PRP": "they"
                },
                "s_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node_0_node": {
                  "VBD": "did"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "RB": "Maybe"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Maybe they didn\u0027t?"
          },
          "jazzyState": {
            "text": "Maybe they didn\u0027t?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Can you read my mind?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 12,
          "nlpState": {
            "sentence": "Can you read my mind?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "MD",
                "text": "Can",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "read",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "mind",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Can-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "Can"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Can-1, you-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "1",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "Can"
                }
              },
              {
                "reln": {
                  "string": "dep(Can-1, read-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "read",
                  "tag": "VB",
                  "word": "read"
                },
                "gov": {
                  "index": "1",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "Can"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Can-1, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "Can"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Can-1, \u0027\u0027-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "1",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "Can"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(read-3, mind-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "mind",
                  "tag": "NN",
                  "word": "mind"
                },
                "gov": {
                  "index": "3",
                  "lemma": "read",
                  "tag": "VB",
                  "word": "read"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(mind-5, my-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "my",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "5",
                  "lemma": "mind",
                  "tag": "NN",
                  "word": "mind"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_1_node": {
                  "PRP": "you"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "mind"
                },
                "s_node_2_node_0_node": {
                  "VBD": "read"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "MD": "Can"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Can you read my mind?\u0027\u0027"
          },
          "jazzyState": {
            "text": "Can you read my mind?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Can you read my mind?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003c|If you can then fuck you.\u003e",
          "wordCount": 6,
          "orderParagraph": 13,
          "nlpState": {
            "sentence": "\u0027\u0027If you can then fuck you.\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "If",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "MD",
                "text": "can",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "then",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "fuck",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, fuck-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "fuck",
                  "tag": "VB",
                  "word": "fuck"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(you-3, If-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "if",
                  "tag": "IN",
                  "word": "If"
                },
                "gov": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(fuck-6, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "6",
                  "lemma": "fuck",
                  "tag": "VB",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(fuck-6, you-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "6",
                  "lemma": "fuck",
                  "tag": "VB",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(fuck-6, can-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "can"
                },
                "gov": {
                  "index": "6",
                  "lemma": "fuck",
                  "tag": "VB",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(fuck-6, then-5)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "then",
                  "tag": "RB",
                  "word": "then"
                },
                "gov": {
                  "index": "6",
                  "lemma": "fuck",
                  "tag": "VB",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(fuck-6, you-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "6",
                  "lemma": "fuck",
                  "tag": "VB",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(fuck-6, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "fuck",
                  "tag": "VB",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(fuck-6, \u0027\u0027-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "6",
                  "lemma": "fuck",
                  "tag": "VB",
                  "word": "fuck"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_2_node_0_node": {
                  "VB": "fuck"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "RB": "then"
                },
                "s_node_1_node_1_node": {
                  "PRP": "you"
                },
                "s_node_2_node_0_node": {
                  "MD": "can"
                },
                "s_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_2_node_1_node": {
                  "PRP": "you"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "NNP": "If"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "you.\u003e"
                ]
              }
            },
            "sentence": "\u003c|If you can then fuck you.\u003e"
          },
          "jazzyState": {
            "text": "\u003c|If you can then fuck you.\u003e",
            "misspelledWords": {
              "fuck": [
                "muck",
                "buck",
                "suck",
                "luck",
                "duck",
                "tuck",
                "yuck"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u003c|If you can then fuck you.\u003e",
            "dialogMark": [
              "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The ten people sit, stand or crouch inside ten of the twelve nano-filled white-panel bodyboxes. They look through the open doorway.",
      "wordCount": 21,
      "order": 10,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The ten people sit, stand or crouch inside ten of the twelve nano-filled white-panel bodyboxes.",
          "wordCount": 15,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "The ten people sit, stand or crouch inside ten of the twelve nano-filled white-panel bodyboxes.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CD",
                "text": "ten",
                "net": "NUMBER"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "people",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBP",
                "text": "sit",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBP",
                "text": "stand",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "or",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "crouch",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "inside",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CD",
                "text": "ten",
                "net": "NUMBER"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CD",
                "text": "twelve",
                "net": "NUMBER"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "nano-filled",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "white-panel",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "bodyboxes",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sit-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBP",
                  "word": "sit"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(people-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(people-3, ten-2)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "ten",
                  "tag": "CD",
                  "word": "ten"
                },
                "gov": {
                  "index": "3",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(sit-4, bodyboxes-16)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "16",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBP",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sit-4, .-17)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "17",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBP",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sit-4, people-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBP",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sit-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBP",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "string": "dep(sit-4, stand-6)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "6",
                  "lemma": "stand",
                  "tag": "VBP",
                  "word": "stand"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBP",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(sit-4, crouch-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "crouch",
                  "tag": "NN",
                  "word": "crouch"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBP",
                  "word": "sit"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(crouch-8, or-7)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "7",
                  "lemma": "or",
                  "tag": "CC",
                  "word": "or"
                },
                "gov": {
                  "index": "8",
                  "lemma": "crouch",
                  "tag": "NN",
                  "word": "crouch"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:inside(crouch-8, ten-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:inside"
                },
                "dep": {
                  "index": "10",
                  "lemma": "ten",
                  "tag": "CD",
                  "word": "ten"
                },
                "gov": {
                  "index": "8",
                  "lemma": "crouch",
                  "tag": "NN",
                  "word": "crouch"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(ten-10, inside-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "inside",
                  "tag": "IN",
                  "word": "inside"
                },
                "gov": {
                  "index": "10",
                  "lemma": "ten",
                  "tag": "CD",
                  "word": "ten"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(bodyboxes-16, of-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "16",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(bodyboxes-16, the-12)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "12",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "16",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(bodyboxes-16, twelve-13)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "13",
                  "lemma": "twelve",
                  "tag": "CD",
                  "word": "twelve"
                },
                "gov": {
                  "index": "16",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(bodyboxes-16, nano-filled-14)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "14",
                  "lemma": "nano-filled",
                  "tag": "JJ",
                  "word": "nano-filled"
                },
                "gov": {
                  "index": "16",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(bodyboxes-16, white-panel-15)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "15",
                  "lemma": "white-panel",
                  "tag": "NN",
                  "word": "white-panel"
                },
                "gov": {
                  "index": "16",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_6_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_6_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "CD": "ten"
                },
                "s_node_1_node_6_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_6_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_4_node": {
                  "VBP": "crouch"
                },
                "s_node_1_node_5_node_0_node": {
                  "IN": "inside"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_6_node_1_node_3_node": {
                  "JJ": "white-panel"
                },
                "s_node_1_node_2_node": {
                  "VBP": "stand"
                },
                "s_node_0_node_2_node": {
                  "NNS": "people"
                },
                "s_node_1_node_6_node_1_node_1_node": {
                  "CD": "twelve"
                },
                "s_node_1_node_5_node_1_node": {
                  "CD": "ten"
                },
                "s_node_1_node_6_node_1_node_2_node": {
                  "JJ": "nano-filled"
                },
                "s_node_1_node_6_node_1_node_4_node": {
                  "NNS": "bodyboxes"
                },
                "s_node_1_node_0_node": {
                  "VBP": "sit"
                },
                "s_node_1_node_5_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_3_node": {
                  "CC": "or"
                },
                "s_node_1_node_5_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "bodyboxes."
                ]
              }
            },
            "sentence": "The ten people sit, stand or crouch inside ten of the twelve nano-filled white-panel bodyboxes."
          },
          "jazzyState": {
            "text": "The ten people sit, stand or crouch inside ten of the twelve nano-filled white-panel bodyboxes.",
            "misspelledWords": {
              "bodyboxes": [],
              "nano": [
                "non"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "They look through the open doorway.",
          "wordCount": 6,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "They look through the open doorway.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBP",
                "text": "look",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "open",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "doorway",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, look-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "look",
                  "tag": "VBP",
                  "word": "look"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(look-2, They-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(look-2, doorway-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "6",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(look-2, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "look",
                  "tag": "VBP",
                  "word": "look"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(doorway-6, through-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "through",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "6",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(doorway-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(doorway-6, open-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "open",
                  "tag": "JJ",
                  "word": "open"
                },
                "gov": {
                  "index": "6",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "doorway"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "JJ": "open"
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_node_0_node": {
                  "VBP": "look"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "doorway."
                ]
              }
            },
            "sentence": "They look through the open doorway."
          },
          "jazzyState": {
            "text": "They look through the open doorway.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "And Jay whines, \u0027\u0027We\u0027ve sat in these space seats for over two hours. We\u0027ve trained in that stinky isolation room for three weeks. Or three months! Who knows? We. Were. In. Isolation. I shaved my balls! I didn\u0027t talk until Jesus brains blew - ALL OVER THE FUCKING CONTAINER. AND YOU BRING,\u0027\u0027 coughs, \u0027\u0027And you,\u0027\u0027 clears throat and says, \u0027\u0027And you bring us to the desert. The desert? This ain\u0027t Mars. The door was supposed to open when we were on Mars. I don\u0027t see Mars through the doorway. I see desert and soldiers. And those soldiers are not wearing spacesuits.\u0027\u0027",
      "wordCount": 101,
      "order": 11,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "And Jay whines,",
          "wordCount": 3,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "And Jay whines,",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "CC",
                "text": "And",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "whines",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, And-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "And"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod(And-1, whines-3)",
                  "name": "nominal modifier",
                  "tag": "nmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "whine",
                  "tag": "NNS",
                  "word": "whines"
                },
                "gov": {
                  "index": "1",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "And"
                }
              },
              {
                "reln": {
                  "string": "dep(whines-3, Jay-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "3",
                  "lemma": "whine",
                  "tag": "NNS",
                  "word": "whines"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(whines-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "whine",
                  "tag": "NNS",
                  "word": "whines"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "RB": "Jay"
                },
                "s_node_3_node": {
                  "COMMA": ","
                },
                "s_node_2_node": {
                  "VBZ": "whines"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "CC": "And"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "And Jay whines,"
          },
          "jazzyState": {
            "text": "And Jay whines,",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027We\u0027ve sat in these space seats for over two hours.",
          "wordCount": 10,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "\u0027\u0027We\u0027ve sat in these space seats for over two hours.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "We",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "\u0027ve",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBN",
                "text": "sat",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "these",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "space",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "seats",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CD",
                "text": "two",
                "net": "DURATION"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "hours",
                "net": "DURATION"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sat-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBN",
                  "word": "sat"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sat-4, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBN",
                  "word": "sat"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sat-4, We-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "We"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBN",
                  "word": "sat"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(sat-4, \u0027ve-3)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "3",
                  "lemma": "have",
                  "tag": "VBP",
                  "word": "\u0027ve"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBN",
                  "word": "sat"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(sat-4, seats-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "8",
                  "lemma": "seat",
                  "tag": "NNS",
                  "word": "seats"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBN",
                  "word": "sat"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sat-4, .-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "sit",
                  "tag": "VBN",
                  "word": "sat"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(seats-8, in-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "8",
                  "lemma": "seat",
                  "tag": "NNS",
                  "word": "seats"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(seats-8, these-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "these",
                  "tag": "DT",
                  "word": "these"
                },
                "gov": {
                  "index": "8",
                  "lemma": "seat",
                  "tag": "NNS",
                  "word": "seats"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(seats-8, space-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "space",
                  "tag": "NN",
                  "word": "space"
                },
                "gov": {
                  "index": "8",
                  "lemma": "seat",
                  "tag": "NNS",
                  "word": "seats"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(seats-8, hours-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "12",
                  "lemma": "hour",
                  "tag": "NNS",
                  "word": "hours"
                },
                "gov": {
                  "index": "8",
                  "lemma": "seat",
                  "tag": "NNS",
                  "word": "seats"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hours-12, for-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "for",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "12",
                  "lemma": "hour",
                  "tag": "NNS",
                  "word": "hours"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(hours-12, over-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "over",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "12",
                  "lemma": "hour",
                  "tag": "NNS",
                  "word": "hours"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(hours-12, two-11)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "two",
                  "tag": "CD",
                  "word": "two"
                },
                "gov": {
                  "index": "12",
                  "lemma": "hour",
                  "tag": "NNS",
                  "word": "hours"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_node_1_node_1_node_0_node_2_node": {
                  "NNS": "seats"
                },
                "s_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_0_node": {
                  "VBN": "sat"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_0_node": {
                  "VBP": "\u0027ve"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "these"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "PRP": "We"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_2_node": {
                  "NNS": "hours"
                },
                "s_node_2_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "space"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "for"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "CD": "two"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "hours."
                ]
              }
            },
            "sentence": "\u0027\u0027We\u0027ve sat in these space seats for over two hours."
          },
          "jazzyState": {
            "text": "\u0027\u0027We\u0027ve sat in these space seats for over two hours.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027We\u0027ve sat in these space seats for over two hours.",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "We\u0027ve trained in that stinky isolation room for three weeks.",
          "wordCount": 10,
          "orderParagraph": 3,
          "nlpState": {
            "sentence": "We\u0027ve trained in that stinky isolation room for three weeks.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "We",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "\u0027ve",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBN",
                "text": "trained",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "that",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "stinky",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "isolation",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "room",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CD",
                "text": "three",
                "net": "DURATION"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "weeks",
                "net": "DURATION"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, trained-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "train",
                  "tag": "VBN",
                  "word": "trained"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(trained-3, We-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "We"
                },
                "gov": {
                  "index": "3",
                  "lemma": "train",
                  "tag": "VBN",
                  "word": "trained"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(trained-3, \u0027ve-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "have",
                  "tag": "VBP",
                  "word": "\u0027ve"
                },
                "gov": {
                  "index": "3",
                  "lemma": "train",
                  "tag": "VBN",
                  "word": "trained"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(trained-3, room-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "8",
                  "lemma": "room",
                  "tag": "NN",
                  "word": "room"
                },
                "gov": {
                  "index": "3",
                  "lemma": "train",
                  "tag": "VBN",
                  "word": "trained"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(trained-3, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "train",
                  "tag": "VBN",
                  "word": "trained"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(room-8, in-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "8",
                  "lemma": "room",
                  "tag": "NN",
                  "word": "room"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(room-8, that-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "that",
                  "tag": "DT",
                  "word": "that"
                },
                "gov": {
                  "index": "8",
                  "lemma": "room",
                  "tag": "NN",
                  "word": "room"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(room-8, stinky-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "stinky",
                  "tag": "JJ",
                  "word": "stinky"
                },
                "gov": {
                  "index": "8",
                  "lemma": "room",
                  "tag": "NN",
                  "word": "room"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(room-8, isolation-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "isolation",
                  "tag": "NN",
                  "word": "isolation"
                },
                "gov": {
                  "index": "8",
                  "lemma": "room",
                  "tag": "NN",
                  "word": "room"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(room-8, weeks-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "11",
                  "lemma": "week",
                  "tag": "NNS",
                  "word": "weeks"
                },
                "gov": {
                  "index": "8",
                  "lemma": "room",
                  "tag": "NN",
                  "word": "room"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(weeks-11, for-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "for",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "11",
                  "lemma": "week",
                  "tag": "NNS",
                  "word": "weeks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(weeks-11, three-10)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "three",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "11",
                  "lemma": "week",
                  "tag": "NNS",
                  "word": "weeks"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_1_node_0_node_2_node": {
                  "NN": "isolation"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "for"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node_3_node": {
                  "NN": "room"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNS": "weeks"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "that"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJ": "stinky"
                },
                "s_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "CD": "three"
                },
                "s_node_0_node": {
                  "PRP": "We"
                },
                "s_node_1_node_0_node": {
                  "VBP": "\u0027ve"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBN": "trained"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "weeks."
                ]
              }
            },
            "sentence": "We\u0027ve trained in that stinky isolation room for three weeks."
          },
          "jazzyState": {
            "text": "We\u0027ve trained in that stinky isolation room for three weeks.",
            "misspelledWords": {
              "stinky": [
                "stink",
                "sticky",
                "stinks"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Or three months!",
          "wordCount": 3,
          "orderParagraph": 4,
          "nlpState": {
            "sentence": "Or three months!",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "CC",
                "text": "Or",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CD",
                "text": "three",
                "net": "DURATION"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "months",
                "net": "DURATION"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, three-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "three",
                  "tag": "CD",
                  "word": "three"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(three-2, Or-1)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "1",
                  "lemma": "or",
                  "tag": "CC",
                  "word": "Or"
                },
                "gov": {
                  "index": "2",
                  "lemma": "three",
                  "tag": "CD",
                  "word": "three"
                }
              },
              {
                "reln": {
                  "string": "dep(three-2, months-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "month",
                  "tag": "NNS",
                  "word": "months"
                },
                "gov": {
                  "index": "2",
                  "lemma": "three",
                  "tag": "CD",
                  "word": "three"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(three-2, !-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": "!",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "three",
                  "tag": "CD",
                  "word": "three"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node": {
                  "NNS": "months"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "CC": "Or"
                },
                "s_node_1_node_0_node": {
                  "CD": "three"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Or three months!"
          },
          "jazzyState": {
            "text": "Or three months!",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Who knows?",
          "wordCount": 2,
          "orderParagraph": 5,
          "nlpState": {
            "sentence": "Who knows?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "WP",
                "text": "Who",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "knows",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, knows-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "know",
                  "tag": "VBZ",
                  "word": "knows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(knows-2, Who-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "who",
                  "tag": "WP",
                  "word": "Who"
                },
                "gov": {
                  "index": "2",
                  "lemma": "know",
                  "tag": "VBZ",
                  "word": "knows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(knows-2, ?-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "know",
                  "tag": "VBZ",
                  "word": "knows"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "knows"
                },
                "s_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "WP": "Who"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Who knows?"
          },
          "jazzyState": {
            "text": "Who knows?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "We.",
          "wordCount": 1,
          "orderParagraph": 6,
          "nlpState": {
            "sentence": "We.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "We",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, We-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "We"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(We-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "We"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "PRP": "We"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "We."
                ]
              }
            },
            "sentence": "We."
          },
          "jazzyState": {
            "text": "We.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Were.",
          "wordCount": 1,
          "orderParagraph": 7,
          "nlpState": {
            "sentence": "Were.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "Were",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Were-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBD",
                  "word": "Were"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Were-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBD",
                  "word": "Were"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "FW": "Were"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Were."
                ]
              }
            },
            "sentence": "Were."
          },
          "jazzyState": {
            "text": "Were.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "In.",
          "wordCount": 1,
          "orderParagraph": 8,
          "nlpState": {
            "sentence": "In.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "IN",
                "text": "In",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, In-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "In"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(In-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "In"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "In"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "In."
                ]
              }
            },
            "sentence": "In."
          },
          "jazzyState": {
            "text": "In.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Isolation.",
          "wordCount": 1,
          "orderParagraph": 9,
          "nlpState": {
            "sentence": "Isolation.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "NN",
                "text": "Isolation",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Isolation-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "isolation",
                  "tag": "NN",
                  "word": "Isolation"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Isolation-1, .-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "isolation",
                  "tag": "NN",
                  "word": "Isolation"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBN": "Isolation"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Isolation."
                ]
              }
            },
            "sentence": "Isolation."
          },
          "jazzyState": {
            "text": "Isolation.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I shaved my balls!",
          "wordCount": 4,
          "orderParagraph": 10,
          "nlpState": {
            "sentence": "I shaved my balls!",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "shaved",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "balls",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shaved-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shave",
                  "tag": "VBD",
                  "word": "shaved"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shaved-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shave",
                  "tag": "VBD",
                  "word": "shaved"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(shaved-2, balls-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shave",
                  "tag": "VBD",
                  "word": "shaved"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shaved-2, !-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "!",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shave",
                  "tag": "VBD",
                  "word": "shaved"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(balls-4, my-3)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "3",
                  "lemma": "my",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "4",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "balls"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBD": "shaved"
                },
                "s_node_1_node_1_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "I shaved my balls!"
          },
          "jazzyState": {
            "text": "I shaved my balls!",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I didn\u0027t talk until Jesus brains blew - ALL OVER THE FUCKING CONTAINER.",
          "wordCount": 13,
          "orderParagraph": 11,
          "nlpState": {
            "sentence": "I didn\u0027t talk until Jesus brains blew - ALL OVER THE FUCKING CONTAINER.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "did",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "talk",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "until",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Jesus",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "brains",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "blew",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ":",
                "text": "-",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "ALL",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "OVER",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "THE",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "FUCKING",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "CONTAINER",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, talk-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "talk",
                  "tag": "VB",
                  "word": "talk"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(talk-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "talk",
                  "tag": "VB",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(talk-4, did-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                },
                "gov": {
                  "index": "4",
                  "lemma": "talk",
                  "tag": "VB",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(talk-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "talk",
                  "tag": "VB",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(talk-4, blew-8)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "8",
                  "lemma": "blow",
                  "tag": "VBD",
                  "word": "blew"
                },
                "gov": {
                  "index": "4",
                  "lemma": "talk",
                  "tag": "VB",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(talk-4, --9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "-",
                  "tag": ":",
                  "word": "-"
                },
                "gov": {
                  "index": "4",
                  "lemma": "talk",
                  "tag": "VB",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "parataxis(talk-4, ALL-10)",
                  "name": "parataxis",
                  "tag": "parataxis"
                },
                "dep": {
                  "index": "10",
                  "lemma": "all",
                  "tag": "NN",
                  "word": "ALL"
                },
                "gov": {
                  "index": "4",
                  "lemma": "talk",
                  "tag": "VB",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(talk-4, .-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "talk",
                  "tag": "VB",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(brains-7, Jesus-6)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Jesus",
                  "tag": "NNP",
                  "word": "Jesus"
                },
                "gov": {
                  "index": "7",
                  "lemma": "brain",
                  "tag": "NNS",
                  "word": "brains"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(blew-8, until-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "until",
                  "tag": "IN",
                  "word": "until"
                },
                "gov": {
                  "index": "8",
                  "lemma": "blow",
                  "tag": "VBD",
                  "word": "blew"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(blew-8, brains-7)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "brain",
                  "tag": "NNS",
                  "word": "brains"
                },
                "gov": {
                  "index": "8",
                  "lemma": "blow",
                  "tag": "VBD",
                  "word": "blew"
                }
              },
              {
                "reln": {
                  "string": "dep(ALL-10, CONTAINER-14)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "14",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "CONTAINER"
                },
                "gov": {
                  "index": "10",
                  "lemma": "all",
                  "tag": "NN",
                  "word": "ALL"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(CONTAINER-14, OVER-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "over",
                  "tag": "IN",
                  "word": "OVER"
                },
                "gov": {
                  "index": "14",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "CONTAINER"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(CONTAINER-14, THE-12)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "12",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "THE"
                },
                "gov": {
                  "index": "14",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "CONTAINER"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(CONTAINER-14, FUCKING-13)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "13",
                  "lemma": "fucking",
                  "tag": "JJ",
                  "word": "FUCKING"
                },
                "gov": {
                  "index": "14",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "CONTAINER"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_2_node_1_node_1_node_1_node": {
                  "VBD": "blew"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node_2_node_1_node_1_node_0_node_0_node": {
                  "NNP": "Jesus"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_0_node_1_node": {
                  "NNP": "OVER"
                },
                "s_node_1_node": {
                  "COLON": "-"
                },
                "s_node_0_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node_0_node": {
                  "NNP": "ALL"
                },
                "s_node_0_node_0_node": {
                  "PRP": "I"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBD": "did"
                },
                "s_node_0_node_1_node_2_node_1_node_1_node_0_node_1_node": {
                  "NNS": "brains"
                },
                "s_node_0_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_0_node": {
                  "DT": "THE"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_2_node_1_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_0_node_1_node_2_node_1_node_0_node": {
                  "IN": "until"
                },
                "s_node_0_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node_1_node_1_node": {
                  "NNP": "FUCKING"
                },
                "s_node_2_node_1_node_2_node": {
                  "NNP": "CONTAINER"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_2_node_0_node": {
                  "VB": "talk"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "CONTAINER."
                ]
              }
            },
            "sentence": "I didn\u0027t talk until Jesus brains blew - ALL OVER THE FUCKING CONTAINER."
          },
          "jazzyState": {
            "text": "I didn\u0027t talk until Jesus brains blew - ALL OVER THE FUCKING CONTAINER.",
            "misspelledWords": {
              "Jesus": [
                "jests"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "AND YOU BRING,\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 12,
          "nlpState": {
            "sentence": "AND YOU BRING,\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "CC",
                "text": "AND",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "YOU",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "BRING",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, AND-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "AND"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(AND-1, BRING-3)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "3",
                  "lemma": "bring",
                  "tag": "VBP",
                  "word": "BRING"
                },
                "gov": {
                  "index": "1",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "AND"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(BRING-3, YOU-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "YOU"
                },
                "gov": {
                  "index": "3",
                  "lemma": "bring",
                  "tag": "VBP",
                  "word": "BRING"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(BRING-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "bring",
                  "tag": "VBP",
                  "word": "BRING"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(BRING-3, \u0027\u0027-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "3",
                  "lemma": "bring",
                  "tag": "VBP",
                  "word": "BRING"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "X"
                },
                "s_node_1_node_1_node": {
                  "NN": "BRING"
                },
                "s_node_0_node": {
                  "SYM": "AND"
                },
                "s_node_1_node_0_node": {
                  "JJ": "YOU"
                },
                "s_node_1_node_3_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "AND YOU BRING,\u0027\u0027"
          },
          "jazzyState": {
            "text": "AND YOU BRING,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "AND YOU BRING,\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "coughs,",
          "wordCount": 1,
          "orderParagraph": 13,
          "nlpState": {
            "sentence": "coughs,",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "coughs",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, coughs-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "cough",
                  "tag": "NNS",
                  "word": "coughs"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(coughs-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "cough",
                  "tag": "NNS",
                  "word": "coughs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "IN": "coughs"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "coughs,"
          },
          "jazzyState": {
            "text": "coughs,",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027And you,\u0027\u0027",
          "wordCount": 2,
          "orderParagraph": 14,
          "nlpState": {
            "sentence": "\u0027\u0027And you,\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CC",
                "text": "And",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, you-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(you-3, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(you-3, And-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "And"
                },
                "gov": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(you-3, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(you-3, \u0027\u0027-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "PRP": "you"
                },
                "s_node_0_node": {
                  "NNP": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "VBD": "And"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027And you,\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027And you,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027And you,\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "clears throat and says,",
          "wordCount": 4,
          "orderParagraph": 15,
          "nlpState": {
            "sentence": "clears throat and says,",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "clears",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "throat",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, clears-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "clear",
                  "tag": "VBZ",
                  "word": "clears"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(clears-1, throat-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "throat",
                  "tag": "NN",
                  "word": "throat"
                },
                "gov": {
                  "index": "1",
                  "lemma": "clear",
                  "tag": "VBZ",
                  "word": "clears"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(throat-2, says-4)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "say",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "2",
                  "lemma": "throat",
                  "tag": "NN",
                  "word": "throat"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(says-4, and-3)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "3",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-4, ,-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "say",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBZ": "says"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "NNP": "clears"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "throat"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "clears throat and says,"
          },
          "jazzyState": {
            "text": "clears throat and says,",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027And you bring us to the desert.",
          "wordCount": 7,
          "orderParagraph": 16,
          "nlpState": {
            "sentence": "\u0027\u0027And you bring us to the desert.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CC",
                "text": "And",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "you",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "bring",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "us",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "desert",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, you-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(you-3, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(you-3, And-2)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "2",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "And"
                },
                "gov": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(you-3, bring-4)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "4",
                  "lemma": "bring",
                  "tag": "VBP",
                  "word": "bring"
                },
                "gov": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(you-3, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "you",
                  "tag": "PRP",
                  "word": "you"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(bring-4, us-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "us"
                },
                "gov": {
                  "index": "4",
                  "lemma": "bring",
                  "tag": "VBP",
                  "word": "bring"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(bring-4, desert-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "8",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                },
                "gov": {
                  "index": "4",
                  "lemma": "bring",
                  "tag": "VBP",
                  "word": "bring"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(desert-8, to-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "8",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(desert-8, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "8",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_0_node": {
                  "VBP": "bring"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_2_node_0_node": {
                  "PRP": "you"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node": {
                  "CC": "And"
                },
                "s_node_2_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_1_node": {
                  "PRP": "us"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_2_node_1_node_2_node_1_node_1_node": {
                  "NN": "desert"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "desert."
                ]
              }
            },
            "sentence": "\u0027\u0027And you bring us to the desert."
          },
          "jazzyState": {
            "text": "\u0027\u0027And you bring us to the desert.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027And you bring us to the desert.",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "The desert?",
          "wordCount": 2,
          "orderParagraph": 17,
          "nlpState": {
            "sentence": "The desert?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "desert",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, desert-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(desert-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(desert-2, ?-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NN": "desert"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_0_node": {
                  "DT": "The"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "The desert?"
          },
          "jazzyState": {
            "text": "The desert?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "This ain\u0027t Mars.",
          "wordCount": 3,
          "orderParagraph": 18,
          "nlpState": {
            "sentence": "This ain\u0027t Mars.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "DT",
                "text": "This",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "ai",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Mars",
                "net": "LOCATION"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Mars-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Mars-4, This-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "this",
                  "tag": "DT",
                  "word": "This"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(Mars-4, ai-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "ai"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(Mars-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Mars-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "JJ": "Mars"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "DT": "This"
                },
                "s_node_1_node_0_node": {
                  "VBP": "ai"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Mars."
                ]
              }
            },
            "sentence": "This ain\u0027t Mars."
          },
          "jazzyState": {
            "text": "This ain\u0027t Mars.",
            "misspelledWords": {
              "ain\u0027t": [
                "ant"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "The door was supposed to open when we were on Mars.",
          "wordCount": 11,
          "orderParagraph": 19,
          "nlpState": {
            "sentence": "The door was supposed to open when we were on Mars.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "was",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBN",
                "text": "supposed",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "open",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WRB",
                "text": "when",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "we",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "were",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Mars",
                "net": "LOCATION"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, supposed-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "suppose",
                  "tag": "VBN",
                  "word": "supposed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(supposed-4, door-2)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "2",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "suppose",
                  "tag": "VBN",
                  "word": "supposed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(supposed-4, was-3)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "tag": "VBD",
                  "word": "was"
                },
                "gov": {
                  "index": "4",
                  "lemma": "suppose",
                  "tag": "VBN",
                  "word": "supposed"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(supposed-4, open-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "open",
                  "tag": "VB",
                  "word": "open"
                },
                "gov": {
                  "index": "4",
                  "lemma": "suppose",
                  "tag": "VBN",
                  "word": "supposed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(supposed-4, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "suppose",
                  "tag": "VBN",
                  "word": "supposed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(open-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "open",
                  "tag": "VB",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "advcl",
                  "string": "advcl:on(open-6, Mars-11)",
                  "name": "advcl_preposition",
                  "tag": "advcl:on"
                },
                "dep": {
                  "index": "11",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                },
                "gov": {
                  "index": "6",
                  "lemma": "open",
                  "tag": "VB",
                  "word": "open"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(Mars-11, when-7)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "when",
                  "tag": "WRB",
                  "word": "when"
                },
                "gov": {
                  "index": "11",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Mars-11, we-8)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "we"
                },
                "gov": {
                  "index": "11",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(Mars-11, were-9)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "9",
                  "lemma": "be",
                  "tag": "VBD",
                  "word": "were"
                },
                "gov": {
                  "index": "11",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Mars-11, on-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "on",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "11",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBD": "were"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "VB": "open"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "WRB": "when"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NNP": "Mars"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "PRP": "we"
                },
                "s_node_1_node_0_node": {
                  "VBD": "was"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBN": "supposed"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "on"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Mars."
                ]
              }
            },
            "sentence": "The door was supposed to open when we were on Mars."
          },
          "jazzyState": {
            "text": "The door was supposed to open when we were on Mars.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I don\u0027t see Mars through the doorway.",
          "wordCount": 7,
          "orderParagraph": 20,
          "nlpState": {
            "sentence": "I don\u0027t see Mars through the doorway.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "do",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "see",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Mars",
                "net": "LOCATION"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "doorway",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, see-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(see-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(see-4, do-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "tag": "VBP",
                  "word": "do"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(see-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(see-4, Mars-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(see-4, doorway-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "8",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(see-4, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "see",
                  "tag": "VB",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(doorway-8, through-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "through",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "8",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(doorway-8, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "8",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "see"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node": {
                  "NN": "doorway"
                },
                "s_node_1_node_2_node_1_node": {
                  "NNP": "Mars"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "do"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "doorway."
                ]
              }
            },
            "sentence": "I don\u0027t see Mars through the doorway."
          },
          "jazzyState": {
            "text": "I don\u0027t see Mars through the doorway.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I see desert and soldiers.",
          "wordCount": 5,
          "orderParagraph": 21,
          "nlpState": {
            "sentence": "I see desert and soldiers.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "see",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "desert",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "soldiers",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, see-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "see",
                  "tag": "VBP",
                  "word": "see"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(see-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "see",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(see-2, desert-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                },
                "gov": {
                  "index": "2",
                  "lemma": "see",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(see-2, soldiers-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                },
                "gov": {
                  "index": "2",
                  "lemma": "see",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(see-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "see",
                  "tag": "VBP",
                  "word": "see"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(desert-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(desert-3, soldiers-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                },
                "gov": {
                  "index": "3",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NNS": "soldiers"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "see"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "desert"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "soldiers."
                ]
              }
            },
            "sentence": "I see desert and soldiers."
          },
          "jazzyState": {
            "text": "I see desert and soldiers.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "And those soldiers are not wearing spacesuits.\u0027\u0027",
          "wordCount": 7,
          "orderParagraph": 22,
          "nlpState": {
            "sentence": "And those soldiers are not wearing spacesuits.\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "CC",
                "text": "And",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "those",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "soldiers",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "are",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBG",
                "text": "wearing",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "spacesuits",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wearing-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "wear",
                  "tag": "VBG",
                  "word": "wearing"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(soldiers-3, those-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "those",
                  "tag": "DT",
                  "word": "those"
                },
                "gov": {
                  "index": "3",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(wearing-6, And-1)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "1",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "And"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wear",
                  "tag": "VBG",
                  "word": "wearing"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wearing-6, soldiers-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wear",
                  "tag": "VBG",
                  "word": "wearing"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(wearing-6, are-4)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "are"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wear",
                  "tag": "VBG",
                  "word": "wearing"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(wearing-6, not-5)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "5",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wear",
                  "tag": "VBG",
                  "word": "wearing"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wearing-6, spacesuits-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "spacesuit",
                  "tag": "NNS",
                  "word": "spacesuits"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wear",
                  "tag": "VBG",
                  "word": "wearing"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wearing-6, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "wear",
                  "tag": "VBG",
                  "word": "wearing"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wearing-6, \u0027\u0027-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "6",
                  "lemma": "wear",
                  "tag": "VBG",
                  "word": "wearing"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_2_node_0_node": {
                  "VBG": "wearing"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "RB": "not"
                },
                "s_node_1_node_1_node": {
                  "NNS": "soldiers"
                },
                "s_node_2_node_0_node": {
                  "VBP": "are"
                },
                "s_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_2_node_1_node": {
                  "NNS": "spacesuits"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "CC": "And"
                },
                "s_node_1_node_0_node": {
                  "DT": "those"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "spacesuits.\u0027\u0027"
                ]
              }
            },
            "sentence": "And those soldiers are not wearing spacesuits.\u0027\u0027"
          },
          "jazzyState": {
            "text": "And those soldiers are not wearing spacesuits.\u0027\u0027",
            "misspelledWords": {
              "spacesuits": [
                "subsists"
              ]
            }
          },
          "dialogState": {
            "sentence": "And those soldiers are not wearing spacesuits.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The open doorway leads from their white-panel container into the bright salt-flat desert dawn and to Mary burning inside the big flat-bed truck near the concrete hanger.",
      "wordCount": 27,
      "order": 12,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The open doorway leads from their white-panel container into the bright salt-flat desert dawn and to Mary burning inside the big flat-bed truck near the concrete hanger.",
          "wordCount": 27,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "The open doorway leads from their white-panel container into the bright salt-flat desert dawn and to Mary burning inside the big flat-bed truck near the concrete hanger.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "open",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "doorway",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "leads",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "PRP$",
                "text": "their",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "white-panel",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "container",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "into",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "bright",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "salt-flat",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "desert",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "dawn",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Mary",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "VBG",
                "text": "burning",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "inside",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "big",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "flat-bed",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "truck",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "near",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "concrete",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "hanger",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, leads-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "lead",
                  "tag": "VBZ",
                  "word": "leads"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(doorway-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(doorway-3, open-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "open",
                  "tag": "JJ",
                  "word": "open"
                },
                "gov": {
                  "index": "3",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(leads-4, doorway-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lead",
                  "tag": "VBZ",
                  "word": "leads"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(leads-4, leads-4\u0027)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "4",
                  "lemma": "lead",
                  "tag": "VBZ",
                  "word": "leads"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lead",
                  "tag": "VBZ",
                  "word": "leads"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(leads-4, container-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "8",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lead",
                  "tag": "VBZ",
                  "word": "leads"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(leads-4, .-28)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "28",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "lead",
                  "tag": "VBZ",
                  "word": "leads"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:into(leads-4, dawn-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:into"
                },
                "dep": {
                  "index": "14",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lead",
                  "tag": "VBZ",
                  "word": "leads"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(leads-4, and-15)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "15",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lead",
                  "tag": "VBZ",
                  "word": "leads"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(leads-4\u0027, Mary-17)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "17",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lead",
                  "tag": "VBZ",
                  "word": "leads"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(leads-4\u0027, doorway-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                },
                "gov": {
                  "index": "4",
                  "lemma": "lead",
                  "tag": "VBZ",
                  "word": "leads"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(container-8, from-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "from",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "8",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(container-8, their-6)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "6",
                  "lemma": "they",
                  "tag": "PRP$",
                  "word": "their"
                },
                "gov": {
                  "index": "8",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(container-8, white-panel-7)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "white-panel",
                  "tag": "JJ",
                  "word": "white-panel"
                },
                "gov": {
                  "index": "8",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(dawn-14, into-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "into",
                  "tag": "IN",
                  "word": "into"
                },
                "gov": {
                  "index": "14",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(dawn-14, the-10)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "10",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "14",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(dawn-14, bright-11)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "bright",
                  "tag": "JJ",
                  "word": "bright"
                },
                "gov": {
                  "index": "14",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(dawn-14, salt-flat-12)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "12",
                  "lemma": "salt-flat",
                  "tag": "NN",
                  "word": "salt-flat"
                },
                "gov": {
                  "index": "14",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(dawn-14, desert-13)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "13",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                },
                "gov": {
                  "index": "14",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Mary-17, to-16)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "16",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "17",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(Mary-17, burning-18)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "18",
                  "lemma": "burn",
                  "tag": "VBG",
                  "word": "burning"
                },
                "gov": {
                  "index": "17",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:inside(burning-18, truck-23)",
                  "name": "nmod_preposition",
                  "tag": "nmod:inside"
                },
                "dep": {
                  "index": "23",
                  "lemma": "truck",
                  "tag": "NN",
                  "word": "truck"
                },
                "gov": {
                  "index": "18",
                  "lemma": "burn",
                  "tag": "VBG",
                  "word": "burning"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(truck-23, inside-19)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "19",
                  "lemma": "inside",
                  "tag": "IN",
                  "word": "inside"
                },
                "gov": {
                  "index": "23",
                  "lemma": "truck",
                  "tag": "NN",
                  "word": "truck"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(truck-23, the-20)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "20",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "23",
                  "lemma": "truck",
                  "tag": "NN",
                  "word": "truck"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(truck-23, big-21)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "21",
                  "lemma": "big",
                  "tag": "JJ",
                  "word": "big"
                },
                "gov": {
                  "index": "23",
                  "lemma": "truck",
                  "tag": "NN",
                  "word": "truck"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(truck-23, flat-bed-22)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "22",
                  "lemma": "flat-bed",
                  "tag": "JJ",
                  "word": "flat-bed"
                },
                "gov": {
                  "index": "23",
                  "lemma": "truck",
                  "tag": "NN",
                  "word": "truck"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:near(truck-23, hanger-27)",
                  "name": "nmod_preposition",
                  "tag": "nmod:near"
                },
                "dep": {
                  "index": "27",
                  "lemma": "hanger",
                  "tag": "NN",
                  "word": "hanger"
                },
                "gov": {
                  "index": "23",
                  "lemma": "truck",
                  "tag": "NN",
                  "word": "truck"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hanger-27, near-24)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "24",
                  "lemma": "near",
                  "tag": "IN",
                  "word": "near"
                },
                "gov": {
                  "index": "27",
                  "lemma": "hanger",
                  "tag": "NN",
                  "word": "hanger"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(hanger-27, the-25)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "25",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "27",
                  "lemma": "hanger",
                  "tag": "NN",
                  "word": "hanger"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(hanger-27, concrete-26)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "26",
                  "lemma": "concrete",
                  "tag": "JJ",
                  "word": "concrete"
                },
                "gov": {
                  "index": "27",
                  "lemma": "hanger",
                  "tag": "NN",
                  "word": "hanger"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "JJ": "concrete"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_2_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_0_node_1_node_1_node": {
                  "JJ": "bright"
                },
                "s_node_1_node_2_node_0_node_1_node_4_node": {
                  "NN": "dawn"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "PRP$": "their"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_0_node": {
                  "VBG": "burning"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_0_node": {
                  "IN": "inside"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "JJ": "white-panel"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "leads"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "near"
                },
                "s_node_1_node_2_node_0_node_1_node_2_node": {
                  "JJ": "salt-flat"
                },
                "s_node_1_node_2_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_1_node_0_node_3_node": {
                  "NN": "truck"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "NN": "container"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "open"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJ": "big"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node_2_node": {
                  "NN": "hanger"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_0_node_0_node": {
                  "IN": "into"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_2_node": {
                  "NN": "doorway"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_0_node_1_node_3_node": {
                  "NN": "desert"
                },
                "s_node_1_node_2_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node_1_node_1_node_0_node_2_node": {
                  "JJ": "flat-bed"
                },
                "s_node_1_node_2_node_0_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node": {
                  "NNP": "Mary"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "hanger."
                ]
              }
            },
            "sentence": "The open doorway leads from their white-panel container into the bright salt-flat desert dawn and to Mary burning inside the big flat-bed truck near the concrete hanger."
          },
          "jazzyState": {
            "text": "The open doorway leads from their white-panel container into the bright salt-flat desert dawn and to Mary burning inside the big flat-bed truck near the concrete hanger.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Jay mumbles, \u0027\u0027Where\u0027s the missile launcher that blew up Mary?\u0027\u0027",
      "wordCount": 10,
      "order": 13,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Jay mumbles,",
          "wordCount": 2,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Jay mumbles,",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "mumbles",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, mumbles-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "mumble",
                  "tag": "NNS",
                  "word": "mumbles"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(mumbles-2, Jay-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(mumbles-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "mumble",
                  "tag": "NNS",
                  "word": "mumbles"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "mumbles"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Jay mumbles,"
          },
          "jazzyState": {
            "text": "Jay mumbles,",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Where\u0027s the missile launcher that blew up Mary?\u0027\u0027",
          "wordCount": 8,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "\u0027\u0027Where\u0027s the missile launcher that blew up Mary?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WRB",
                "text": "Where",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "missile",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "launcher",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WDT",
                "text": "that",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "blew",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RP",
                "text": "up",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Mary",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, \u0027s-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(\u0027s-3, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(\u0027s-3, Where-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "where",
                  "tag": "WRB",
                  "word": "Where"
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(\u0027s-3, launcher-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "launcher",
                  "tag": "NN",
                  "word": "launcher"
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(\u0027s-3, ?-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(\u0027s-3, \u0027\u0027-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "3",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(launcher-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "launcher",
                  "tag": "NN",
                  "word": "launcher"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(launcher-6, missile-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "missile",
                  "tag": "NN",
                  "word": "missile"
                },
                "gov": {
                  "index": "6",
                  "lemma": "launcher",
                  "tag": "NN",
                  "word": "launcher"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl:relcl(launcher-6, blew-8)",
                  "name": "relative clause modifier",
                  "tag": "acl:relcl"
                },
                "dep": {
                  "index": "8",
                  "lemma": "blow",
                  "tag": "VBD",
                  "word": "blew"
                },
                "gov": {
                  "index": "6",
                  "lemma": "launcher",
                  "tag": "NN",
                  "word": "launcher"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(blew-8, that-7)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "that",
                  "tag": "WDT",
                  "word": "that"
                },
                "gov": {
                  "index": "8",
                  "lemma": "blow",
                  "tag": "VBD",
                  "word": "blew"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound:prt(blew-8, up-9)",
                  "name": "phrasal verb particle",
                  "tag": "compound:prt"
                },
                "dep": {
                  "index": "9",
                  "lemma": "up",
                  "tag": "RP",
                  "word": "up"
                },
                "gov": {
                  "index": "8",
                  "lemma": "blow",
                  "tag": "VBD",
                  "word": "blew"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(blew-8, Mary-10)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                },
                "gov": {
                  "index": "8",
                  "lemma": "blow",
                  "tag": "VBD",
                  "word": "blew"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "WDT": "that"
                },
                "s_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_0_leaf": {
                  "phrase": "INTJ"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "\u0027s"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_2_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_0_node": {
                  "VBD": "blew"
                },
                "s_node_2_node_1_node_1_node_1_node_2_node": {
                  "NNP": "Mary"
                },
                "s_node_2_node_1_node_0_node_1_node": {
                  "NN": "missile"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "WHADVP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node": {
                  "WRB": "Where"
                },
                "s_node_2_node_1_node_0_node_2_node": {
                  "NN": "launcher"
                },
                "s_node_2_leaf": {
                  "phrase": "SQ"
                },
                "s_node_0_node": {
                  "UH": "\u0027\u0027"
                },
                "s_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node": {
                  "RP": "up"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Where\u0027s the missile launcher that blew up Mary?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Where\u0027s the missile launcher that blew up Mary?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Where\u0027s the missile launcher that blew up Mary?\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Soldiers wearing body armor and black glasses aim rifles at the burning truck cab. Two soldiers crouch behind towershields and walk to the burning truck cab as drones zoom around the sky.",
      "wordCount": 32,
      "order": 14,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Soldiers wearing body armor and black glasses aim rifles at the burning truck cab.",
          "wordCount": 14,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Soldiers wearing body armor and black glasses aim rifles at the burning truck cab.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "Soldiers",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBG",
                "text": "wearing",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "body",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "armor",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "black",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "glasses",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBP",
                "text": "aim",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "rifles",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "burning",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "truck",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "cab",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, aim-8)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "8",
                  "lemma": "aim",
                  "tag": "VBP",
                  "word": "aim"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(Soldiers-1, wearing-2)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wear",
                  "tag": "VBG",
                  "word": "wearing"
                },
                "gov": {
                  "index": "1",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "Soldiers"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wearing-2, armor-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "armor",
                  "tag": "NN",
                  "word": "armor"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wear",
                  "tag": "VBG",
                  "word": "wearing"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wearing-2, glasses-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "glass",
                  "tag": "NNS",
                  "word": "glasses"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wear",
                  "tag": "VBG",
                  "word": "wearing"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(armor-4, body-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "body",
                  "tag": "NN",
                  "word": "body"
                },
                "gov": {
                  "index": "4",
                  "lemma": "armor",
                  "tag": "NN",
                  "word": "armor"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(armor-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "armor",
                  "tag": "NN",
                  "word": "armor"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(armor-4, glasses-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "glass",
                  "tag": "NNS",
                  "word": "glasses"
                },
                "gov": {
                  "index": "4",
                  "lemma": "armor",
                  "tag": "NN",
                  "word": "armor"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(glasses-7, black-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "black",
                  "tag": "JJ",
                  "word": "black"
                },
                "gov": {
                  "index": "7",
                  "lemma": "glass",
                  "tag": "NNS",
                  "word": "glasses"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(aim-8, Soldiers-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "Soldiers"
                },
                "gov": {
                  "index": "8",
                  "lemma": "aim",
                  "tag": "VBP",
                  "word": "aim"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(aim-8, rifles-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "rifle",
                  "tag": "NNS",
                  "word": "rifles"
                },
                "gov": {
                  "index": "8",
                  "lemma": "aim",
                  "tag": "VBP",
                  "word": "aim"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(aim-8, cab-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "14",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                },
                "gov": {
                  "index": "8",
                  "lemma": "aim",
                  "tag": "VBP",
                  "word": "aim"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(aim-8, .-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "8",
                  "lemma": "aim",
                  "tag": "VBP",
                  "word": "aim"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cab-14, at-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "at",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "14",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(cab-14, the-11)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "11",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "14",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(cab-14, burning-12)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "12",
                  "lemma": "burning",
                  "tag": "NN",
                  "word": "burning"
                },
                "gov": {
                  "index": "14",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(cab-14, truck-13)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "13",
                  "lemma": "truck",
                  "tag": "NN",
                  "word": "truck"
                },
                "gov": {
                  "index": "14",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_1_node_1_node_2_node_1_node": {
                  "NNS": "glasses"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node": {
                  "NN": "truck"
                },
                "s_node_1_node_1_node_1_node_1_node_3_node": {
                  "NN": "cab"
                },
                "s_node_1_node_0_node": {
                  "VBP": "aim"
                },
                "s_node_1_node_1_node_0_node": {
                  "NNS": "rifles"
                },
                "s_node_0_node_0_node": {
                  "NNS": "Soldiers"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBG": "wearing"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_0_node_0_node": {
                  "NN": "body"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_1_node_1_node_2_node_0_node": {
                  "JJ": "black"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_0_node_1_node": {
                  "NN": "armor"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "VBG": "burning"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "cab."
                ]
              }
            },
            "sentence": "Soldiers wearing body armor and black glasses aim rifles at the burning truck cab."
          },
          "jazzyState": {
            "text": "Soldiers wearing body armor and black glasses aim rifles at the burning truck cab.",
            "misspelledWords": {
              "armor": [
                "armer",
                "Armour"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Two soldiers crouch behind towershields and walk to the burning truck cab as drones zoom around the sky.",
          "wordCount": 18,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "Two soldiers crouch behind towershields and walk to the burning truck cab as drones zoom around the sky.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "CD",
                "text": "Two",
                "net": "NUMBER"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "soldiers",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "crouch",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "behind",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "towershields",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VB",
                "text": "walk",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "burning",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "truck",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "cab",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "drones",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBP",
                "text": "zoom",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "around",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "sky",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, zoom-15)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "15",
                  "lemma": "zoom",
                  "tag": "VBP",
                  "word": "zoom"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(soldiers-2, Two-1)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "two",
                  "tag": "CD",
                  "word": "Two"
                },
                "gov": {
                  "index": "2",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(crouch-3, soldiers-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                },
                "gov": {
                  "index": "3",
                  "lemma": "crouch",
                  "tag": "NN",
                  "word": "crouch"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:behind(crouch-3, towershields-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:behind"
                },
                "dep": {
                  "index": "5",
                  "lemma": "towershield",
                  "tag": "NNS",
                  "word": "towershields"
                },
                "gov": {
                  "index": "3",
                  "lemma": "crouch",
                  "tag": "NN",
                  "word": "crouch"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(crouch-3, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "crouch",
                  "tag": "NN",
                  "word": "crouch"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(crouch-3, walk-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "walk",
                  "tag": "VB",
                  "word": "walk"
                },
                "gov": {
                  "index": "3",
                  "lemma": "crouch",
                  "tag": "NN",
                  "word": "crouch"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(towershields-5, behind-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "behind",
                  "tag": "IN",
                  "word": "behind"
                },
                "gov": {
                  "index": "5",
                  "lemma": "towershield",
                  "tag": "NNS",
                  "word": "towershields"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(walk-7, cab-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "12",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                },
                "gov": {
                  "index": "7",
                  "lemma": "walk",
                  "tag": "VB",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:as(walk-7, drones-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:as"
                },
                "dep": {
                  "index": "14",
                  "lemma": "drone",
                  "tag": "NNS",
                  "word": "drones"
                },
                "gov": {
                  "index": "7",
                  "lemma": "walk",
                  "tag": "VB",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(cab-12, to-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "12",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(cab-12, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "12",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(cab-12, burning-10)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "10",
                  "lemma": "burning",
                  "tag": "NN",
                  "word": "burning"
                },
                "gov": {
                  "index": "12",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(cab-12, truck-11)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "11",
                  "lemma": "truck",
                  "tag": "NN",
                  "word": "truck"
                },
                "gov": {
                  "index": "12",
                  "lemma": "cab",
                  "tag": "NN",
                  "word": "cab"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(drones-14, as-13)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "13",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "14",
                  "lemma": "drone",
                  "tag": "NNS",
                  "word": "drones"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:around(zoom-15, sky-18)",
                  "name": "nmod_preposition",
                  "tag": "nmod:around"
                },
                "dep": {
                  "index": "18",
                  "lemma": "sky",
                  "tag": "NN",
                  "word": "sky"
                },
                "gov": {
                  "index": "15",
                  "lemma": "zoom",
                  "tag": "VBP",
                  "word": "zoom"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(zoom-15, crouch-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "crouch",
                  "tag": "NN",
                  "word": "crouch"
                },
                "gov": {
                  "index": "15",
                  "lemma": "zoom",
                  "tag": "VBP",
                  "word": "zoom"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(zoom-15, .-19)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "19",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "15",
                  "lemma": "zoom",
                  "tag": "VBP",
                  "word": "zoom"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(zoom-15, walk-7)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "walk",
                  "tag": "VB",
                  "word": "walk"
                },
                "gov": {
                  "index": "15",
                  "lemma": "zoom",
                  "tag": "VBP",
                  "word": "zoom"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sky-18, around-16)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "16",
                  "lemma": "around",
                  "tag": "IN",
                  "word": "around"
                },
                "gov": {
                  "index": "18",
                  "lemma": "sky",
                  "tag": "NN",
                  "word": "sky"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sky-18, the-17)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "17",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "18",
                  "lemma": "sky",
                  "tag": "NN",
                  "word": "sky"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_3_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_2_node_1_node_1_node_3_node": {
                  "NN": "cab"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "towershields"
                },
                "s_node_2_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_2_node_3_node_1_node_1_node_0_node": {
                  "VB": "zoom"
                },
                "s_node_2_node_2_node_1_node_1_node_1_node": {
                  "NN": "burning"
                },
                "s_node_1_node": {
                  "RB": "behind"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_3_node_1_node_0_node": {
                  "NNS": "drones"
                },
                "s_node_2_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node_0_node": {
                  "CD": "Two"
                },
                "s_node_2_node_2_node_0_node": {
                  "NN": "walk"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_3_node_1_node_1_node_1_node": {
                  "RP": "around"
                },
                "s_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node_3_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_2_node_1_node_1_node_2_node": {
                  "NN": "truck"
                },
                "s_node_2_node_3_node_0_node": {
                  "IN": "as"
                },
                "s_node_2_node_3_node_1_node_1_node_2_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_1_node": {
                  "NNS": "soldiers"
                },
                "s_node_2_node_3_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_3_node_1_node_1_node_2_node_1_node": {
                  "NN": "sky"
                },
                "s_node_0_node_2_node": {
                  "NN": "crouch"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_2_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_3_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_2_node_3_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_3_node_1_node_1_node_1_leaf": {
                  "phrase": "PRT"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "sky."
                ]
              }
            },
            "sentence": "Two soldiers crouch behind towershields and walk to the burning truck cab as drones zoom around the sky."
          },
          "jazzyState": {
            "text": "Two soldiers crouch behind towershields and walk to the burning truck cab as drones zoom around the sky.",
            "misspelledWords": {
              "towershields": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Who the fuck was Mary?\u0027\u0027 says Jay. \u0027\u0027Was Mary some sort of Savior or what the fuck? Was she one of those illegal aliens? She killed like twenty soldiers. She about got away. Damn devil of a missile. Burns like the sun.\u0027\u0027",
      "wordCount": 42,
      "order": 15,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "\u0027\u0027Who the fuck was Mary?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "\u0027\u0027Who the fuck was Mary?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WP",
                "text": "Who",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "fuck",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "was",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Mary",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, fuck-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(fuck-4, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(fuck-4, Who-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "who",
                  "tag": "WP",
                  "word": "Who"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(fuck-4, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(fuck-4, was-5)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "5",
                  "lemma": "be",
                  "tag": "VBD",
                  "word": "was"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(fuck-4, Mary-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(fuck-4, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(fuck-4, \u0027\u0027-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "NN": "fuck"
                },
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "NNP": "Mary"
                },
                "s_node_1_node_1_node": {
                  "DT": "the"
                },
                "s_node_2_node_0_node": {
                  "VBD": "was"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "JJ": "Who"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Who the fuck was Mary?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Who the fuck was Mary?\u0027\u0027",
            "misspelledWords": {
              "fuck": [
                "muck",
                "buck",
                "suck",
                "luck",
                "duck",
                "tuck",
                "yuck"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Who the fuck was Mary?\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "says Jay.",
          "wordCount": 2,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "says Jay.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "say",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(says-1, Jay-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-1, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "say",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "PERIOD": "."
                },
                "s_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node": {
                  "NNP": "Jay"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "VBZ": "says"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Jay."
                ]
              }
            },
            "sentence": "says Jay."
          },
          "jazzyState": {
            "text": "says Jay.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Was Mary some sort of Savior or what the fuck?",
          "wordCount": 10,
          "orderParagraph": 3,
          "nlpState": {
            "sentence": "\u0027\u0027Was Mary some sort of Savior or what the fuck?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "Was",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Mary",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "some",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "sort",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Savior",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CC",
                "text": "or",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WP",
                "text": "what",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "fuck",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sort-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "sort",
                  "tag": "NN",
                  "word": "sort"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(sort-5, \u0027\u0027-1)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sort",
                  "tag": "NN",
                  "word": "sort"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(sort-5, Was-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBD",
                  "word": "Was"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sort",
                  "tag": "NN",
                  "word": "sort"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sort-5, Mary-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sort",
                  "tag": "NN",
                  "word": "sort"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sort-5, some-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "some",
                  "tag": "DT",
                  "word": "some"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sort",
                  "tag": "NN",
                  "word": "sort"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(sort-5, Savior-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "7",
                  "lemma": "Savior",
                  "tag": "NNP",
                  "word": "Savior"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sort",
                  "tag": "NN",
                  "word": "sort"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(sort-5, what-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "9",
                  "lemma": "what",
                  "tag": "WP",
                  "word": "what"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sort",
                  "tag": "NN",
                  "word": "sort"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sort-5, ?-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "5",
                  "lemma": "sort",
                  "tag": "NN",
                  "word": "sort"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Savior-7, of-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Savior",
                  "tag": "NNP",
                  "word": "Savior"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(Savior-7, or-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "or",
                  "tag": "CC",
                  "word": "or"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Savior",
                  "tag": "NNP",
                  "word": "Savior"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:or(Savior-7, what-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:or"
                },
                "dep": {
                  "index": "9",
                  "lemma": "what",
                  "tag": "WP",
                  "word": "what"
                },
                "gov": {
                  "index": "7",
                  "lemma": "Savior",
                  "tag": "NNP",
                  "word": "Savior"
                }
              },
              {
                "reln": {
                  "string": "dep(what-9, fuck-11)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "11",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                },
                "gov": {
                  "index": "9",
                  "lemma": "what",
                  "tag": "WP",
                  "word": "what"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(fuck-11, the-10)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "10",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "11",
                  "lemma": "fuck",
                  "tag": "NN",
                  "word": "fuck"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "NNP": "Savior"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Mary"
                },
                "s_node_2_node_1_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node": {
                  "CC": "or"
                },
                "s_node_2_node_0_node_1_node": {
                  "NN": "sort"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_2_node_0_node": {
                  "WP": "what"
                },
                "s_node_2_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_2_node_1_node_1_node": {
                  "NN": "fuck"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Was"
                },
                "s_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node_0_node": {
                  "DT": "some"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Was Mary some sort of Savior or what the fuck?"
          },
          "jazzyState": {
            "text": "\u0027\u0027Was Mary some sort of Savior or what the fuck?",
            "misspelledWords": {
              "Savior": [
                "saver"
              ],
              "fuck": [
                "muck",
                "buck",
                "suck",
                "luck",
                "duck",
                "tuck",
                "yuck"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Was Mary some sort of Savior or what the fuck?",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Was she one of those illegal aliens?",
          "wordCount": 7,
          "orderParagraph": 4,
          "nlpState": {
            "sentence": "Was she one of those illegal aliens?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "Was",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "she",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CD",
                "text": "one",
                "net": "NUMBER"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "those",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "illegal",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "aliens",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Was-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBD",
                  "word": "Was"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Was-1, she-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "she",
                  "tag": "PRP",
                  "word": "she"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBD",
                  "word": "Was"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod(Was-1, one-3)",
                  "name": "nominal modifier",
                  "tag": "nmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "one",
                  "tag": "CD",
                  "word": "one"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBD",
                  "word": "Was"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Was-1, ?-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBD",
                  "word": "Was"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(one-3, aliens-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "7",
                  "lemma": "alien",
                  "tag": "NNS",
                  "word": "aliens"
                },
                "gov": {
                  "index": "3",
                  "lemma": "one",
                  "tag": "CD",
                  "word": "one"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(aliens-7, of-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "7",
                  "lemma": "alien",
                  "tag": "NNS",
                  "word": "aliens"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(aliens-7, those-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "those",
                  "tag": "DT",
                  "word": "those"
                },
                "gov": {
                  "index": "7",
                  "lemma": "alien",
                  "tag": "NNS",
                  "word": "aliens"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(aliens-7, illegal-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "illegal",
                  "tag": "JJ",
                  "word": "illegal"
                },
                "gov": {
                  "index": "7",
                  "lemma": "alien",
                  "tag": "NNS",
                  "word": "aliens"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "DT": "those"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_0_node": {
                  "CD": "one"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node": {
                  "JJ": "illegal"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "PRP": "she"
                },
                "s_node_2_node_1_node_1_node_2_node": {
                  "NNS": "aliens"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "VBD": "Was"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Was she one of those illegal aliens?"
          },
          "jazzyState": {
            "text": "Was she one of those illegal aliens?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "She killed like twenty soldiers.",
          "wordCount": 5,
          "orderParagraph": 5,
          "nlpState": {
            "sentence": "She killed like twenty soldiers.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "She",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "killed",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "like",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CD",
                "text": "twenty",
                "net": "NUMBER"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "soldiers",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, killed-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "kill",
                  "tag": "VBD",
                  "word": "killed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(killed-2, She-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "she",
                  "tag": "PRP",
                  "word": "She"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:like(killed-2, soldiers-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:like"
                },
                "dep": {
                  "index": "5",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(killed-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "kill",
                  "tag": "VBD",
                  "word": "killed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(soldiers-5, like-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "like",
                  "tag": "IN",
                  "word": "like"
                },
                "gov": {
                  "index": "5",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(soldiers-5, twenty-4)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "twenty",
                  "tag": "CD",
                  "word": "twenty"
                },
                "gov": {
                  "index": "5",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNS": "soldiers"
                },
                "s_node_0_node": {
                  "PRP": "She"
                },
                "s_node_1_node_0_node": {
                  "VBD": "killed"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "like"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "CD": "twenty"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "soldiers."
                ]
              }
            },
            "sentence": "She killed like twenty soldiers."
          },
          "jazzyState": {
            "text": "She killed like twenty soldiers.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "She about got away.",
          "wordCount": 4,
          "orderParagraph": 6,
          "nlpState": {
            "sentence": "She about got away.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "She",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "about",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "got",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "away",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, got-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "get",
                  "tag": "VBD",
                  "word": "got"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(got-3, She-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "she",
                  "tag": "PRP",
                  "word": "She"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "tag": "VBD",
                  "word": "got"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(got-3, about-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "about",
                  "tag": "RB",
                  "word": "about"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "tag": "VBD",
                  "word": "got"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(got-3, away-4)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "away",
                  "tag": "RB",
                  "word": "away"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "tag": "VBD",
                  "word": "got"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(got-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "tag": "VBD",
                  "word": "got"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "PRT"
                },
                "s_node_1_node": {
                  "RB": "about"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "RP": "away"
                },
                "s_node_2_node_0_node": {
                  "VBD": "got"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "PRP": "She"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "away."
                ]
              }
            },
            "sentence": "She about got away."
          },
          "jazzyState": {
            "text": "She about got away.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Damn devil of a missile.",
          "wordCount": 5,
          "orderParagraph": 7,
          "nlpState": {
            "sentence": "Damn devil of a missile.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "Damn",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "devil",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "missile",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, devil-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "devil",
                  "tag": "NNP",
                  "word": "devil"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(devil-2, Damn-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "damn",
                  "tag": "JJ",
                  "word": "Damn"
                },
                "gov": {
                  "index": "2",
                  "lemma": "devil",
                  "tag": "NNP",
                  "word": "devil"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(devil-2, missile-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "5",
                  "lemma": "missile",
                  "tag": "NN",
                  "word": "missile"
                },
                "gov": {
                  "index": "2",
                  "lemma": "devil",
                  "tag": "NNP",
                  "word": "devil"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(devil-2, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "devil",
                  "tag": "NNP",
                  "word": "devil"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(missile-5, of-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "5",
                  "lemma": "missile",
                  "tag": "NN",
                  "word": "missile"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(missile-5, a-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "5",
                  "lemma": "missile",
                  "tag": "NN",
                  "word": "missile"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "missile"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNP": "devil"
                },
                "s_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "NNP": "Damn"
                },
                "s_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "missile."
                ]
              }
            },
            "sentence": "Damn devil of a missile."
          },
          "jazzyState": {
            "text": "Damn devil of a missile.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Burns like the sun.\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 8,
          "nlpState": {
            "sentence": "Burns like the sun.\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Burns",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "like",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "sun",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Burns-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Burns",
                  "tag": "NNP",
                  "word": "Burns"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:like(Burns-1, sun-4)",
                  "name": "nmod_preposition",
                  "tag": "nmod:like"
                },
                "dep": {
                  "index": "4",
                  "lemma": "sun",
                  "tag": "NN",
                  "word": "sun"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Burns",
                  "tag": "NNP",
                  "word": "Burns"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Burns-1, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "Burns",
                  "tag": "NNP",
                  "word": "Burns"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Burns-1, \u0027\u0027-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "1",
                  "lemma": "Burns",
                  "tag": "NNP",
                  "word": "Burns"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sun-4, like-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "like",
                  "tag": "IN",
                  "word": "like"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sun",
                  "tag": "NN",
                  "word": "sun"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sun-4, the-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "4",
                  "lemma": "sun",
                  "tag": "NN",
                  "word": "sun"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NN": "sun"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NNP": "Burns"
                },
                "s_node_1_node_0_node": {
                  "VBP": "like"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "sun.\u0027\u0027"
                ]
              }
            },
            "sentence": "Burns like the sun.\u0027\u0027"
          },
          "jazzyState": {
            "text": "Burns like the sun.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Burns like the sun.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The dawn glows between rocky mountains over desert through the doorway as wind gusts sway the white-panel door. And the fates of ten people sway like the door sways with the desert wind, back and forth, as sand and shouts of soldiers spread through the container.",
      "wordCount": 46,
      "order": 16,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The dawn glows between rocky mountains over desert through the doorway as wind gusts sway the white-panel door.",
          "wordCount": 18,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "The dawn glows between rocky mountains over desert through the doorway as wind gusts sway the white-panel door.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "dawn",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "glows",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "between",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "rocky",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "mountains",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "desert",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "doorway",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "wind",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "gusts",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBP",
                "text": "sway",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "white-panel",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, glows-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "glow",
                  "tag": "VBZ",
                  "word": "glows"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(dawn-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(glows-3, dawn-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                },
                "gov": {
                  "index": "3",
                  "lemma": "glow",
                  "tag": "VBZ",
                  "word": "glows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(glows-3, .-19)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "19",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "glow",
                  "tag": "VBZ",
                  "word": "glows"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:between(glows-3, mountains-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:between"
                },
                "dep": {
                  "index": "6",
                  "lemma": "mountain",
                  "tag": "NNS",
                  "word": "mountains"
                },
                "gov": {
                  "index": "3",
                  "lemma": "glow",
                  "tag": "VBZ",
                  "word": "glows"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(glows-3, doorway-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "11",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                },
                "gov": {
                  "index": "3",
                  "lemma": "glow",
                  "tag": "VBZ",
                  "word": "glows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(glows-3, sway-15)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "15",
                  "lemma": "sway",
                  "tag": "VBP",
                  "word": "sway"
                },
                "gov": {
                  "index": "3",
                  "lemma": "glow",
                  "tag": "VBZ",
                  "word": "glows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(mountains-6, between-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "between",
                  "tag": "IN",
                  "word": "between"
                },
                "gov": {
                  "index": "6",
                  "lemma": "mountain",
                  "tag": "NNS",
                  "word": "mountains"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(mountains-6, rocky-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "rocky",
                  "tag": "JJ",
                  "word": "rocky"
                },
                "gov": {
                  "index": "6",
                  "lemma": "mountain",
                  "tag": "NNS",
                  "word": "mountains"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(mountains-6, desert-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "8",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                },
                "gov": {
                  "index": "6",
                  "lemma": "mountain",
                  "tag": "NNS",
                  "word": "mountains"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(desert-8, over-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "over",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "8",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(doorway-11, through-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "through",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "11",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(doorway-11, the-10)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "10",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "11",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(gusts-14, wind-13)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "13",
                  "lemma": "wind",
                  "tag": "NN",
                  "word": "wind"
                },
                "gov": {
                  "index": "14",
                  "lemma": "gust",
                  "tag": "NNS",
                  "word": "gusts"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(sway-15, door-18)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "18",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "15",
                  "lemma": "sway",
                  "tag": "VBP",
                  "word": "sway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(sway-15, as-12)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "12",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "15",
                  "lemma": "sway",
                  "tag": "VBP",
                  "word": "sway"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sway-15, gusts-14)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "14",
                  "lemma": "gust",
                  "tag": "NNS",
                  "word": "gusts"
                },
                "gov": {
                  "index": "15",
                  "lemma": "sway",
                  "tag": "VBP",
                  "word": "sway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-18, the-16)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "16",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "18",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-18, white-panel-17)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "17",
                  "lemma": "white-panel",
                  "tag": "JJ",
                  "word": "white-panel"
                },
                "gov": {
                  "index": "18",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_3_node_1_node_1_node_0_node": {
                  "VBP": "sway"
                },
                "s_node_1_node_3_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_3_node_1_node_0_node_0_node": {
                  "NN": "wind"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_3_node_1_node_1_node_1_node_1_node": {
                  "JJ": "white-panel"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "doorway"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "glows"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "between"
                },
                "s_node_1_node_3_node_1_node_0_node_1_node": {
                  "NNS": "gusts"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_3_node_0_node": {
                  "IN": "as"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "through"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_node_1_node_1_node_2_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "JJ": "rocky"
                },
                "s_node_1_node_3_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "dawn"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "over"
                },
                "s_node_1_node_3_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NNS": "mountains"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "desert"
                },
                "s_node_1_node_3_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_3_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "The dawn glows between rocky mountains over desert through the doorway as wind gusts sway the white-panel door."
          },
          "jazzyState": {
            "text": "The dawn glows between rocky mountains over desert through the doorway as wind gusts sway the white-panel door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "And the fates of ten people sway like the door sways with the desert wind, back and forth, as sand and shouts of soldiers spread through the container.",
          "wordCount": 28,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "And the fates of ten people sway like the door sways with the desert wind, back and forth, as sand and shouts of soldiers spread through the container.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "CC",
                "text": "And",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "fates",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CD",
                "text": "ten",
                "net": "NUMBER"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "people",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBP",
                "text": "sway",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "like",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "sways",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "desert",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "wind",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "RB",
                "text": "back",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "RB",
                "text": "forth",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "sand",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "shouts",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "soldiers",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBN",
                "text": "spread",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "container",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sway-7)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "7",
                  "lemma": "sway",
                  "tag": "VBP",
                  "word": "sway"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(fates-3, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fate",
                  "tag": "NNS",
                  "word": "fates"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(fates-3, people-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "6",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fate",
                  "tag": "NNS",
                  "word": "fates"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(people-6, of-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "6",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(people-6, ten-5)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "ten",
                  "tag": "CD",
                  "word": "ten"
                },
                "gov": {
                  "index": "6",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(sway-7, And-1)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "1",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "And"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sway",
                  "tag": "VBP",
                  "word": "sway"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sway-7, fates-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "fate",
                  "tag": "NNS",
                  "word": "fates"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sway",
                  "tag": "VBP",
                  "word": "sway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(sway-7, sways-11)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "11",
                  "lemma": "sway",
                  "tag": "VBZ",
                  "word": "sways"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sway",
                  "tag": "VBP",
                  "word": "sway"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sway-7, .-31)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "31",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "7",
                  "lemma": "sway",
                  "tag": "VBP",
                  "word": "sway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-10, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "10",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sways-11, ,-16)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "16",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "11",
                  "lemma": "sway",
                  "tag": "VBZ",
                  "word": "sways"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(sways-11, back-17)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "17",
                  "lemma": "back",
                  "tag": "RB",
                  "word": "back"
                },
                "gov": {
                  "index": "11",
                  "lemma": "sway",
                  "tag": "VBZ",
                  "word": "sways"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(sways-11, forth-19)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "19",
                  "lemma": "forth",
                  "tag": "RB",
                  "word": "forth"
                },
                "gov": {
                  "index": "11",
                  "lemma": "sway",
                  "tag": "VBZ",
                  "word": "sways"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sways-11, ,-20)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "20",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "11",
                  "lemma": "sway",
                  "tag": "VBZ",
                  "word": "sways"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:as(sways-11, sand-22)",
                  "name": "nmod_preposition",
                  "tag": "nmod:as"
                },
                "dep": {
                  "index": "22",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                },
                "gov": {
                  "index": "11",
                  "lemma": "sway",
                  "tag": "VBZ",
                  "word": "sways"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(sways-11, like-8)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "8",
                  "lemma": "like",
                  "tag": "IN",
                  "word": "like"
                },
                "gov": {
                  "index": "11",
                  "lemma": "sway",
                  "tag": "VBZ",
                  "word": "sways"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:as(sways-11, shouts-24)",
                  "name": "nmod_preposition",
                  "tag": "nmod:as"
                },
                "dep": {
                  "index": "24",
                  "lemma": "shout",
                  "tag": "NNS",
                  "word": "shouts"
                },
                "gov": {
                  "index": "11",
                  "lemma": "sway",
                  "tag": "VBZ",
                  "word": "sways"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sways-11, door-10)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "10",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "11",
                  "lemma": "sway",
                  "tag": "VBZ",
                  "word": "sways"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(sways-11, wind-15)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "15",
                  "lemma": "wind",
                  "tag": "NN",
                  "word": "wind"
                },
                "gov": {
                  "index": "11",
                  "lemma": "sway",
                  "tag": "VBZ",
                  "word": "sways"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(wind-15, with-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "with",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "15",
                  "lemma": "wind",
                  "tag": "NN",
                  "word": "wind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(wind-15, the-13)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "13",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "15",
                  "lemma": "wind",
                  "tag": "NN",
                  "word": "wind"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(wind-15, desert-14)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "14",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                },
                "gov": {
                  "index": "15",
                  "lemma": "wind",
                  "tag": "NN",
                  "word": "wind"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(back-17, and-18)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "18",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "17",
                  "lemma": "back",
                  "tag": "RB",
                  "word": "back"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(back-17, forth-19)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "19",
                  "lemma": "forth",
                  "tag": "RB",
                  "word": "forth"
                },
                "gov": {
                  "index": "17",
                  "lemma": "back",
                  "tag": "RB",
                  "word": "back"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(sand-22, as-21)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "21",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "22",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(sand-22, and-23)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "23",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "22",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(sand-22, shouts-24)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "24",
                  "lemma": "shout",
                  "tag": "NNS",
                  "word": "shouts"
                },
                "gov": {
                  "index": "22",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(sand-22, soldiers-26)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "26",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                },
                "gov": {
                  "index": "22",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(soldiers-26, of-25)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "25",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "26",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(soldiers-26, spread-27)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "27",
                  "lemma": "spread",
                  "tag": "VBN",
                  "word": "spread"
                },
                "gov": {
                  "index": "26",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(spread-27, container-30)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "30",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                },
                "gov": {
                  "index": "27",
                  "lemma": "spread",
                  "tag": "VBN",
                  "word": "spread"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(container-30, through-28)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "28",
                  "lemma": "through",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "30",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(container-30, the-29)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "29",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "30",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_2_node_1_node_1_node_0_node_1_node": {
                  "NN": "door"
                },
                "s_node_2_node_1_node_1_node_1_node_3_node_2_node": {
                  "RB": "forth"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_1_node_1_node_0_node": {
                  "NNS": "soldiers"
                },
                "s_node_2_node_1_node_1_node_1_node_5_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBN": "spread"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "CD": "ten"
                },
                "s_node_2_node_1_node_1_node_1_node_3_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNS": "people"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_0_node_2_node": {
                  "NNS": "shouts"
                },
                "s_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_0_node": {
                  "VBZ": "sways"
                },
                "s_node_2_node_1_node_1_node_1_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node_1_node": {
                  "NNS": "fates"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_2_node": {
                  "NN": "wind"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_0_node_0_node": {
                  "NN": "sand"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_4_node": {
                  "COMMA": ","
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_0_node": {
                  "VBP": "sway"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_0_node": {
                  "IN": "like"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "container"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_0_node": {
                  "IN": "as"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_0_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "through"
                },
                "s_node_2_node_1_node_1_node_1_node_5_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "desert"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "CC": "And"
                },
                "s_node_2_node_1_node_1_node_1_node_3_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_2_node_1_node_1_node_1_node_3_node_0_node": {
                  "RB": "back"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "container."
                ]
              }
            },
            "sentence": "And the fates of ten people sway like the door sways with the desert wind, back and forth, as sand and shouts of soldiers spread through the container."
          },
          "jazzyState": {
            "text": "And the fates of ten people sway like the door sways with the desert wind, back and forth, as sand and shouts of soldiers spread through the container.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Inside the headspheres, the people hear only the whiny Jay say, \u0027\u0027Is Jesus\u0027s death part of the test? We signed a contract for a job interview. We\u0027re going to get paid still? I don\u0027t want to work on a farm again. I don\u0027t want to do construction. I\u0027m too smart for that work. I\u0027m better than that work.\u0027\u0027  Jay shakes head and sweat sprays from face.",
      "wordCount": 66,
      "order": 17,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Inside the headspheres, the people hear only the whiny Jay say,",
          "wordCount": 11,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Inside the headspheres, the people hear only the whiny Jay say,",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "IN",
                "text": "Inside",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "headspheres",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "people",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBP",
                "text": "hear",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "RB",
                "text": "only",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "whiny",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "say",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, headspheres-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(headspheres-3, Inside-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "inside",
                  "tag": "IN",
                  "word": "Inside"
                },
                "gov": {
                  "index": "3",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(headspheres-3, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "3",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "string": "dep(headspheres-3, hear-7)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "7",
                  "lemma": "hear",
                  "tag": "VBP",
                  "word": "hear"
                },
                "gov": {
                  "index": "3",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(people-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hear-7, ,-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "7",
                  "lemma": "hear",
                  "tag": "VBP",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hear-7, people-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                },
                "gov": {
                  "index": "7",
                  "lemma": "hear",
                  "tag": "VBP",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(hear-7, only-8)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "only",
                  "tag": "RB",
                  "word": "only"
                },
                "gov": {
                  "index": "7",
                  "lemma": "hear",
                  "tag": "VBP",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hear-7, say-12)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "12",
                  "lemma": "say",
                  "tag": "NNP",
                  "word": "say"
                },
                "gov": {
                  "index": "7",
                  "lemma": "hear",
                  "tag": "VBP",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hear-7, ,-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "7",
                  "lemma": "hear",
                  "tag": "VBP",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(say-12, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "12",
                  "lemma": "say",
                  "tag": "NNP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(say-12, whiny-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "whiny",
                  "tag": "JJ",
                  "word": "whiny"
                },
                "gov": {
                  "index": "12",
                  "lemma": "say",
                  "tag": "NNP",
                  "word": "say"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(say-12, Jay-11)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "11",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "12",
                  "lemma": "say",
                  "tag": "NNP",
                  "word": "say"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_3_node_1_node_1_node_2_node": {
                  "COMMA": ","
                },
                "s_node_2_node_1_node": {
                  "NNS": "people"
                },
                "s_node_2_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node_1_node_0_node_2_node": {
                  "NN": "whiny"
                },
                "s_node_3_node_1_node_1_node_1_node": {
                  "VBP": "say"
                },
                "s_node_3_node_0_node": {
                  "VBP": "hear"
                },
                "s_node_3_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_3_node_1_node_0_node_0_node": {
                  "RB": "only"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_1_node_1_node": {
                  "NNS": "headspheres"
                },
                "s_node_3_node_1_node_1_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_0_node_1_node": {
                  "DT": "the"
                },
                "s_node_3_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node": {
                  "IN": "Inside"
                },
                "s_node_0_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Inside the headspheres, the people hear only the whiny Jay say,"
          },
          "jazzyState": {
            "text": "Inside the headspheres, the people hear only the whiny Jay say,",
            "misspelledWords": {
              "headspheres": [],
              "whiny": [
                "whine",
                "shiny"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Is Jesus\u0027s death part of the test?",
          "wordCount": 7,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "\u0027\u0027Is Jesus\u0027s death part of the test?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "Is",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Jesus",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "death",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "part",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "test",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Is-2, \u0027\u0027-1)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Is-2, part-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "part",
                  "tag": "NN",
                  "word": "part"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Is-2, ?-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Jesus-3, \u0027s-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "3",
                  "lemma": "Jesus",
                  "tag": "NNP",
                  "word": "Jesus"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(part-6, Jesus-3)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "3",
                  "lemma": "Jesus",
                  "tag": "NNP",
                  "word": "Jesus"
                },
                "gov": {
                  "index": "6",
                  "lemma": "part",
                  "tag": "NN",
                  "word": "part"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(part-6, death-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "death",
                  "tag": "NN",
                  "word": "death"
                },
                "gov": {
                  "index": "6",
                  "lemma": "part",
                  "tag": "NN",
                  "word": "part"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(part-6, test-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "9",
                  "lemma": "test",
                  "tag": "NN",
                  "word": "test"
                },
                "gov": {
                  "index": "6",
                  "lemma": "part",
                  "tag": "NN",
                  "word": "part"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(test-9, of-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "9",
                  "lemma": "test",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(test-9, the-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "test",
                  "tag": "NN",
                  "word": "test"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node_0_node": {
                  "NN": "death"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node": {
                  "NNP": "Jesus"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "\u0027s"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node_1_node_0_node_1_node": {
                  "NN": "part"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Is"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node": {
                  "NN": "test"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Is Jesus\u0027s death part of the test?"
          },
          "jazzyState": {
            "text": "\u0027\u0027Is Jesus\u0027s death part of the test?",
            "misspelledWords": {
              "Jesus\u0027s": []
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Is Jesus\u0027s death part of the test?",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "We signed a contract for a job interview.",
          "wordCount": 8,
          "orderParagraph": 3,
          "nlpState": {
            "sentence": "We signed a contract for a job interview.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "We",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "signed",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "contract",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "job",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "interview",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, signed-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "sign",
                  "tag": "VBD",
                  "word": "signed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(signed-2, We-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "We"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sign",
                  "tag": "VBD",
                  "word": "signed"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(signed-2, contract-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "contract",
                  "tag": "NN",
                  "word": "contract"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sign",
                  "tag": "VBD",
                  "word": "signed"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(signed-2, interview-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "8",
                  "lemma": "interview",
                  "tag": "NN",
                  "word": "interview"
                },
                "gov": {
                  "index": "2",
                  "lemma": "sign",
                  "tag": "VBD",
                  "word": "signed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(signed-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "sign",
                  "tag": "VBD",
                  "word": "signed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(contract-4, a-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "4",
                  "lemma": "contract",
                  "tag": "NN",
                  "word": "contract"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(interview-8, for-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "for",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "8",
                  "lemma": "interview",
                  "tag": "NN",
                  "word": "interview"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(interview-8, a-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "8",
                  "lemma": "interview",
                  "tag": "NN",
                  "word": "interview"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(interview-8, job-7)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "7",
                  "lemma": "job",
                  "tag": "NN",
                  "word": "job"
                },
                "gov": {
                  "index": "8",
                  "lemma": "interview",
                  "tag": "NN",
                  "word": "interview"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "IN": "for"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "NN": "interview"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "contract"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "NN": "job"
                },
                "s_node_0_node": {
                  "PRP": "We"
                },
                "s_node_1_node_0_node": {
                  "VBD": "signed"
                },
                "s_node_1_node_1_node_0_node": {
                  "DT": "a"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "interview."
                ]
              }
            },
            "sentence": "We signed a contract for a job interview."
          },
          "jazzyState": {
            "text": "We signed a contract for a job interview.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "We\u0027re going to get paid still?",
          "wordCount": 6,
          "orderParagraph": 4,
          "nlpState": {
            "sentence": "We\u0027re going to get paid still?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "We",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "\u0027re",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBG",
                "text": "going",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "get",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBN",
                "text": "paid",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "still",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, going-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(going-3, We-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "We"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(going-3, \u0027re-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "\u0027re"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(going-3, paid-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "pay",
                  "tag": "VBN",
                  "word": "paid"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(going-3, ?-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(paid-6, to-4)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "4",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "pay",
                  "tag": "VBN",
                  "word": "paid"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(paid-6, get-5)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "5",
                  "lemma": "get",
                  "tag": "VB",
                  "word": "get"
                },
                "gov": {
                  "index": "6",
                  "lemma": "pay",
                  "tag": "VBN",
                  "word": "paid"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(paid-6, still-7)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "7",
                  "lemma": "still",
                  "tag": "RB",
                  "word": "still"
                },
                "gov": {
                  "index": "6",
                  "lemma": "pay",
                  "tag": "VBN",
                  "word": "paid"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "VB": "get"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBN": "paid"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "RB": "still"
                },
                "s_node_0_node": {
                  "PRP": "We"
                },
                "s_node_1_node_0_node": {
                  "VBP": "\u0027re"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBG": "going"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "We\u0027re going to get paid still?"
          },
          "jazzyState": {
            "text": "We\u0027re going to get paid still?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I don\u0027t want to work on a farm again.",
          "wordCount": 9,
          "orderParagraph": 5,
          "nlpState": {
            "sentence": "I don\u0027t want to work on a farm again.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "do",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "want",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "work",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "farm",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "again",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, want-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "want",
                  "tag": "VB",
                  "word": "want"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(want-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(want-4, do-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "tag": "VBP",
                  "word": "do"
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(want-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(want-4, work-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "work",
                  "tag": "VB",
                  "word": "work"
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(want-4, .-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(work-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "work",
                  "tag": "VB",
                  "word": "work"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(work-6, farm-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "9",
                  "lemma": "farm",
                  "tag": "NN",
                  "word": "farm"
                },
                "gov": {
                  "index": "6",
                  "lemma": "work",
                  "tag": "VB",
                  "word": "work"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(work-6, again-10)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "again",
                  "tag": "RB",
                  "word": "again"
                },
                "gov": {
                  "index": "6",
                  "lemma": "work",
                  "tag": "VB",
                  "word": "work"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(farm-9, on-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "on",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "9",
                  "lemma": "farm",
                  "tag": "NN",
                  "word": "farm"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(farm-9, a-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "9",
                  "lemma": "farm",
                  "tag": "NN",
                  "word": "farm"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "want"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_2_node": {
                  "RB": "again"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "farm"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "VB": "work"
                },
                "s_node_1_node_2_node_1_node_1_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "a"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "do"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "again."
                ]
              }
            },
            "sentence": "I don\u0027t want to work on a farm again."
          },
          "jazzyState": {
            "text": "I don\u0027t want to work on a farm again.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I don\u0027t want to do construction.",
          "wordCount": 6,
          "orderParagraph": 6,
          "nlpState": {
            "sentence": "I don\u0027t want to do construction.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "do",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "want",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "do",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "construction",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, want-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "want",
                  "tag": "VB",
                  "word": "want"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(want-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(want-4, do-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "do",
                  "tag": "VBP",
                  "word": "do"
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(want-4, n\u0027t-3)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "3",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(want-4, do-6)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "do",
                  "tag": "VB",
                  "word": "do"
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(want-4, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "want",
                  "tag": "VB",
                  "word": "want"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(do-6, to-5)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "5",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "do",
                  "tag": "VB",
                  "word": "do"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(do-6, construction-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "construction",
                  "tag": "NN",
                  "word": "construction"
                },
                "gov": {
                  "index": "6",
                  "lemma": "do",
                  "tag": "VB",
                  "word": "do"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "VB": "want"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node": {
                  "NN": "construction"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "VB": "do"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "do"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "construction."
                ]
              }
            },
            "sentence": "I don\u0027t want to do construction."
          },
          "jazzyState": {
            "text": "I don\u0027t want to do construction.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I\u0027m too smart for that work.",
          "wordCount": 6,
          "orderParagraph": 7,
          "nlpState": {
            "sentence": "I\u0027m too smart for that work.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "\u0027m",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "too",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "smart",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "that",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "work",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, smart-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "smart",
                  "tag": "JJ",
                  "word": "smart"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(smart-4, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "4",
                  "lemma": "smart",
                  "tag": "JJ",
                  "word": "smart"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(smart-4, \u0027m-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "\u0027m"
                },
                "gov": {
                  "index": "4",
                  "lemma": "smart",
                  "tag": "JJ",
                  "word": "smart"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(smart-4, too-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "too",
                  "tag": "RB",
                  "word": "too"
                },
                "gov": {
                  "index": "4",
                  "lemma": "smart",
                  "tag": "JJ",
                  "word": "smart"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(smart-4, work-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "7",
                  "lemma": "work",
                  "tag": "NN",
                  "word": "work"
                },
                "gov": {
                  "index": "4",
                  "lemma": "smart",
                  "tag": "JJ",
                  "word": "smart"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(smart-4, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "smart",
                  "tag": "JJ",
                  "word": "smart"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(work-7, for-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "for",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "7",
                  "lemma": "work",
                  "tag": "NN",
                  "word": "work"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(work-7, that-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "that",
                  "tag": "DT",
                  "word": "that"
                },
                "gov": {
                  "index": "7",
                  "lemma": "work",
                  "tag": "NN",
                  "word": "work"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "NN": "work"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "DT": "that"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "JJ": "smart"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "IN": "for"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "\u0027m"
                },
                "s_node_1_node_1_node_0_node": {
                  "RB": "too"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "work."
                ]
              }
            },
            "sentence": "I\u0027m too smart for that work."
          },
          "jazzyState": {
            "text": "I\u0027m too smart for that work.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I\u0027m better than that work.\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 8,
          "nlpState": {
            "sentence": "I\u0027m better than that work.\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "\u0027m",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJR",
                "text": "better",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "than",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "that",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "work",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, better-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "better",
                  "tag": "JJR",
                  "word": "better"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(better-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "better",
                  "tag": "JJR",
                  "word": "better"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(better-3, \u0027m-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "\u0027m"
                },
                "gov": {
                  "index": "3",
                  "lemma": "better",
                  "tag": "JJR",
                  "word": "better"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:than(better-3, work-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:than"
                },
                "dep": {
                  "index": "6",
                  "lemma": "work",
                  "tag": "NN",
                  "word": "work"
                },
                "gov": {
                  "index": "3",
                  "lemma": "better",
                  "tag": "JJR",
                  "word": "better"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(better-3, .-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "better",
                  "tag": "JJR",
                  "word": "better"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(better-3, \u0027\u0027-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "3",
                  "lemma": "better",
                  "tag": "JJR",
                  "word": "better"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(work-6, than-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "than",
                  "tag": "IN",
                  "word": "than"
                },
                "gov": {
                  "index": "6",
                  "lemma": "work",
                  "tag": "NN",
                  "word": "work"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(work-6, that-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "that",
                  "tag": "DT",
                  "word": "that"
                },
                "gov": {
                  "index": "6",
                  "lemma": "work",
                  "tag": "NN",
                  "word": "work"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_3_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "that"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "IN": "than"
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "\u0027m"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJR": "better"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "work"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "work.\u0027\u0027"
                ]
              }
            },
            "sentence": "I\u0027m better than that work.\u0027\u0027"
          },
          "jazzyState": {
            "text": "I\u0027m better than that work.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "I\u0027m better than that work.\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Jay shakes head and sweat sprays from face.",
          "wordCount": 8,
          "orderParagraph": 9,
          "nlpState": {
            "sentence": "Jay shakes head and sweat sprays from face.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "shakes",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "head",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "sweat",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "sprays",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "face",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shakes-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shake",
                  "tag": "VBZ",
                  "word": "shakes"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shakes-2, Jay-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shake",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(shakes-2, sprays-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "spray",
                  "tag": "NNS",
                  "word": "sprays"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shake",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(shakes-2, face-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "8",
                  "lemma": "face",
                  "tag": "NN",
                  "word": "face"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shake",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shakes-2, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "shake",
                  "tag": "VBZ",
                  "word": "shakes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(head-3, and-4)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "4",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "head",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(head-3, sweat-5)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "5",
                  "lemma": "sweat",
                  "tag": "NN",
                  "word": "sweat"
                },
                "gov": {
                  "index": "3",
                  "lemma": "head",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(sprays-6, head-3)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "3",
                  "lemma": "head",
                  "tag": "NN",
                  "word": "head"
                },
                "gov": {
                  "index": "6",
                  "lemma": "spray",
                  "tag": "NNS",
                  "word": "sprays"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(sprays-6, sweat-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "sweat",
                  "tag": "NN",
                  "word": "sweat"
                },
                "gov": {
                  "index": "6",
                  "lemma": "spray",
                  "tag": "NNS",
                  "word": "sprays"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(face-8, from-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "from",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "8",
                  "lemma": "face",
                  "tag": "NN",
                  "word": "face"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_3_node": {
                  "NNS": "sprays"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "from"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node": {
                  "NN": "sweat"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_1_node": {
                  "NN": "face"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "shakes"
                },
                "s_node_1_node_1_node_0_node": {
                  "NN": "head"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "face."
                ]
              }
            },
            "sentence": "Jay shakes head and sweat sprays from face."
          },
          "jazzyState": {
            "text": "Jay shakes head and sweat sprays from face.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The people\u0027s bodies and faces sweat in the bodyboxes and headspheres as the people glance at Jay, and a few squint from the sun light.",
      "wordCount": 25,
      "order": 18,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The people\u0027s bodies and faces sweat in the bodyboxes and headspheres as the people glance at Jay, and a few squint from the sun light.",
          "wordCount": 25,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "The people\u0027s bodies and faces sweat in the bodyboxes and headspheres as the people glance at Jay, and a few squint from the sun light.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "people",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "bodies",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "faces",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "sweat",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "bodyboxes",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "headspheres",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "people",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "glance",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "at",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "few",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "squint",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "sun",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, faces-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "face",
                  "tag": "VBZ",
                  "word": "faces"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(people-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(people-2, \u0027s-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "2",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(bodies-4, people-2)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "2",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                },
                "gov": {
                  "index": "4",
                  "lemma": "body",
                  "tag": "NNS",
                  "word": "bodies"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(bodies-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "body",
                  "tag": "NNS",
                  "word": "bodies"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(faces-6, bodies-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "body",
                  "tag": "NNS",
                  "word": "bodies"
                },
                "gov": {
                  "index": "6",
                  "lemma": "face",
                  "tag": "VBZ",
                  "word": "faces"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(faces-6, sweat-7)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "sweat",
                  "tag": "NN",
                  "word": "sweat"
                },
                "gov": {
                  "index": "6",
                  "lemma": "face",
                  "tag": "VBZ",
                  "word": "faces"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(faces-6, squint-23)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "23",
                  "lemma": "squint",
                  "tag": "NN",
                  "word": "squint"
                },
                "gov": {
                  "index": "6",
                  "lemma": "face",
                  "tag": "VBZ",
                  "word": "faces"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(faces-6, .-28)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "28",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "6",
                  "lemma": "face",
                  "tag": "VBZ",
                  "word": "faces"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sweat-7, ,-19)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "19",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "7",
                  "lemma": "sweat",
                  "tag": "NN",
                  "word": "sweat"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(sweat-7, and-20)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "20",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sweat",
                  "tag": "NN",
                  "word": "sweat"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(sweat-7, squint-23)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "23",
                  "lemma": "squint",
                  "tag": "NN",
                  "word": "squint"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sweat",
                  "tag": "NN",
                  "word": "sweat"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(sweat-7, bodyboxes-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sweat",
                  "tag": "NN",
                  "word": "sweat"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(sweat-7, headspheres-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "12",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                },
                "gov": {
                  "index": "7",
                  "lemma": "sweat",
                  "tag": "NN",
                  "word": "sweat"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:as(bodyboxes-10, glance-16)",
                  "name": "nmod_preposition",
                  "tag": "nmod:as"
                },
                "dep": {
                  "index": "16",
                  "lemma": "glance",
                  "tag": "NN",
                  "word": "glance"
                },
                "gov": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(bodyboxes-10, in-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(bodyboxes-10, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(bodyboxes-10, and-11)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "11",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(bodyboxes-10, headspheres-12)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "12",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                },
                "gov": {
                  "index": "10",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:at(glance-16, Jay-18)",
                  "name": "nmod_preposition",
                  "tag": "nmod:at"
                },
                "dep": {
                  "index": "18",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "16",
                  "lemma": "glance",
                  "tag": "NN",
                  "word": "glance"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(glance-16, as-13)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "13",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "16",
                  "lemma": "glance",
                  "tag": "NN",
                  "word": "glance"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(glance-16, the-14)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "14",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "16",
                  "lemma": "glance",
                  "tag": "NN",
                  "word": "glance"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(glance-16, people-15)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "15",
                  "lemma": "people",
                  "tag": "NNS",
                  "word": "people"
                },
                "gov": {
                  "index": "16",
                  "lemma": "glance",
                  "tag": "NN",
                  "word": "glance"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Jay-18, at-17)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "17",
                  "lemma": "at",
                  "tag": "IN",
                  "word": "at"
                },
                "gov": {
                  "index": "18",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(squint-23, a-21)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "21",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "23",
                  "lemma": "squint",
                  "tag": "NN",
                  "word": "squint"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(squint-23, few-22)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "22",
                  "lemma": "few",
                  "tag": "JJ",
                  "word": "few"
                },
                "gov": {
                  "index": "23",
                  "lemma": "squint",
                  "tag": "NN",
                  "word": "squint"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(squint-23, light-27)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "27",
                  "lemma": "light",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "23",
                  "lemma": "squint",
                  "tag": "NN",
                  "word": "squint"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(light-27, from-24)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "24",
                  "lemma": "from",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "27",
                  "lemma": "light",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(light-27, the-25)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "25",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "27",
                  "lemma": "light",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(light-27, sun-26)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "26",
                  "lemma": "sun",
                  "tag": "NN",
                  "word": "sun"
                },
                "gov": {
                  "index": "27",
                  "lemma": "light",
                  "tag": "NN",
                  "word": "light"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_node_0_node_2_node": {
                  "POS": "\u0027s"
                },
                "s_node_0_node_3_node": {
                  "NNS": "faces"
                },
                "s_node_1_node_2_node_1_node_3_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node_0_node": {
                  "IN": "at"
                },
                "s_node_1_node_2_node_1_node_3_node_1_node_1_node_1_node": {
                  "NN": "sun"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_3_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_3_node_0_node_1_node": {
                  "JJ": "few"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node_1_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_2_node_1_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NNS": "bodyboxes"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node_1_node": {
                  "NNS": "people"
                },
                "s_node_1_node_0_node": {
                  "VBD": "sweat"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_1_node_2_node_1_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_0_node": {
                  "IN": "as"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node_2_node": {
                  "NN": "glance"
                },
                "s_node_1_node_1_node_1_node_2_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_1_node_2_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_1_node_3_node_1_node_1_node_2_node": {
                  "NN": "light"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NNS": "bodies"
                },
                "s_node_1_node_2_node_1_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NNS": "people"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_3_node": {
                  "NNS": "headspheres"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_3_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_2_node": {
                  "CC": "and"
                },
                "s_node_1_node_2_node_1_node_3_node_0_node_2_node": {
                  "NN": "squint"
                },
                "s_node_1_node_2_node_1_node_3_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_3_node_1_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "light."
                ]
              }
            },
            "sentence": "The people\u0027s bodies and faces sweat in the bodyboxes and headspheres as the people glance at Jay, and a few squint from the sun light."
          },
          "jazzyState": {
            "text": "The people\u0027s bodies and faces sweat in the bodyboxes and headspheres as the people glance at Jay, and a few squint from the sun light.",
            "misspelledWords": {
              "bodyboxes": [],
              "headspheres": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Is this part of the test? The bright light is annoying. Is the bright light part of the test?\u0027\u0027 whines Jay to the clear headspheres of John, Sue, Achea, Jobin, Barack, Oprah, Ruth, Judith and Leah. \u0027\u0027Should we close the door? Or should we stay in our spaceseats with spacehelmets? They\u0027re call spaceseats and spacehelmets, like fucking fishbowls, right? That\u0027s what they called them, right?\u0027\u0027",
      "wordCount": 65,
      "order": 19,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "\u0027\u0027Is this part of the test?",
          "wordCount": 6,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "\u0027\u0027Is this part of the test?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "Is",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "this",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "part",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "test",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Is-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Is-2, \u0027\u0027-1)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Is-2, part-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "part",
                  "tag": "NN",
                  "word": "part"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Is-2, ?-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(part-4, this-3)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "3",
                  "lemma": "this",
                  "tag": "DT",
                  "word": "this"
                },
                "gov": {
                  "index": "4",
                  "lemma": "part",
                  "tag": "NN",
                  "word": "part"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(part-4, test-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "7",
                  "lemma": "test",
                  "tag": "NN",
                  "word": "test"
                },
                "gov": {
                  "index": "4",
                  "lemma": "part",
                  "tag": "NN",
                  "word": "part"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(test-7, of-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "7",
                  "lemma": "test",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(test-7, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "test",
                  "tag": "NN",
                  "word": "test"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "NN": "part"
                },
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "test"
                },
                "s_node_1_node_1_node": {
                  "DT": "this"
                },
                "s_node_2_node_0_node": {
                  "IN": "of"
                },
                "s_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "RB": "Is"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Is this part of the test?"
          },
          "jazzyState": {
            "text": "\u0027\u0027Is this part of the test?",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Is this part of the test?",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "The bright light is annoying.",
          "wordCount": 5,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "The bright light is annoying.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "bright",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "light",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "annoying",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, annoying-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "annoying",
                  "tag": "JJ",
                  "word": "annoying"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(light-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "light",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(light-3, bright-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "bright",
                  "tag": "JJ",
                  "word": "bright"
                },
                "gov": {
                  "index": "3",
                  "lemma": "light",
                  "tag": "NN",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(annoying-5, light-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "light",
                  "tag": "NN",
                  "word": "light"
                },
                "gov": {
                  "index": "5",
                  "lemma": "annoying",
                  "tag": "JJ",
                  "word": "annoying"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(annoying-5, is-4)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "5",
                  "lemma": "annoying",
                  "tag": "JJ",
                  "word": "annoying"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(annoying-5, .-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "5",
                  "lemma": "annoying",
                  "tag": "JJ",
                  "word": "annoying"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "light"
                },
                "s_node_1_node_1_node": {
                  "JJ": "annoying"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "bright"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "annoying."
                ]
              }
            },
            "sentence": "The bright light is annoying."
          },
          "jazzyState": {
            "text": "The bright light is annoying.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Is the bright light part of the test?\u0027\u0027",
          "wordCount": 8,
          "orderParagraph": 3,
          "nlpState": {
            "sentence": "Is the bright light part of the test?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "Is",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "bright",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "light",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "part",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "test",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Is-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Is-1, part-5)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "part",
                  "tag": "NN",
                  "word": "part"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(Is-1, test-8)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "test",
                  "tag": "NN",
                  "word": "test"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Is-1, ?-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Is-1, \u0027\u0027-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(part-5, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "part",
                  "tag": "NN",
                  "word": "part"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(part-5, bright-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "bright",
                  "tag": "JJ",
                  "word": "bright"
                },
                "gov": {
                  "index": "5",
                  "lemma": "part",
                  "tag": "NN",
                  "word": "part"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(part-5, light-4)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "light",
                  "tag": "JJ",
                  "word": "light"
                },
                "gov": {
                  "index": "5",
                  "lemma": "part",
                  "tag": "NN",
                  "word": "part"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(test-8, of-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "8",
                  "lemma": "test",
                  "tag": "NN",
                  "word": "test"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(test-8, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "8",
                  "lemma": "test",
                  "tag": "NN",
                  "word": "test"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node": {
                  "JJ": "bright"
                },
                "s_node_2_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_2_node": {
                  "NN": "light"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "test"
                },
                "s_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node": {
                  "VBZ": "Is"
                },
                "s_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_3_node": {
                  "NN": "part"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Is the bright light part of the test?\u0027\u0027"
          },
          "jazzyState": {
            "text": "Is the bright light part of the test?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Is the bright light part of the test?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "whines Jay to the clear headspheres of John, Sue, Achea, Jobin, Barack, Oprah, Ruth, Judith and Leah.",
          "wordCount": 17,
          "orderParagraph": 4,
          "nlpState": {
            "sentence": "whines Jay to the clear headspheres of John, Sue, Achea, Jobin, Barack, Oprah, Ruth, Judith and Leah.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "whines",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "clear",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "headspheres",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "John",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Sue",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Achea",
                "net": "LOCATION"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jobin",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Barack",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Oprah",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Ruth",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Judith",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Leah",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, whines-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "whine",
                  "tag": "NNS",
                  "word": "whines"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(whines-1, Jay-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "1",
                  "lemma": "whine",
                  "tag": "NNS",
                  "word": "whines"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(whines-1, .-25)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "25",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "1",
                  "lemma": "whine",
                  "tag": "NNS",
                  "word": "whines"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(Jay-2, headspheres-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                },
                "gov": {
                  "index": "2",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(headspheres-6, Barack-16)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "16",
                  "lemma": "Barack",
                  "tag": "NNP",
                  "word": "Barack"
                },
                "gov": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(headspheres-6, Oprah-18)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "18",
                  "lemma": "Oprah",
                  "tag": "NNP",
                  "word": "Oprah"
                },
                "gov": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(headspheres-6, to-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(headspheres-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(headspheres-6, Ruth-20)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "20",
                  "lemma": "Ruth",
                  "tag": "NNP",
                  "word": "Ruth"
                },
                "gov": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(headspheres-6, clear-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "clear",
                  "tag": "JJ",
                  "word": "clear"
                },
                "gov": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(headspheres-6, Judith-22)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "22",
                  "lemma": "Judith",
                  "tag": "NNP",
                  "word": "Judith"
                },
                "gov": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(headspheres-6, John-8)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                },
                "gov": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(headspheres-6, Leah-24)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "24",
                  "lemma": "Leah",
                  "tag": "NNP",
                  "word": "Leah"
                },
                "gov": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(headspheres-6, Sue-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Sue",
                  "tag": "NNP",
                  "word": "Sue"
                },
                "gov": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(headspheres-6, Achea-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "12",
                  "lemma": "Achea",
                  "tag": "NNP",
                  "word": "Achea"
                },
                "gov": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(headspheres-6, Jobin-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "14",
                  "lemma": "Jobin",
                  "tag": "NNP",
                  "word": "Jobin"
                },
                "gov": {
                  "index": "6",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(John-8, of-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(John-8, ,-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(John-8, Sue-10)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Sue",
                  "tag": "NNP",
                  "word": "Sue"
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(John-8, ,-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(John-8, Achea-12)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "12",
                  "lemma": "Achea",
                  "tag": "NNP",
                  "word": "Achea"
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(John-8, ,-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(John-8, Jobin-14)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "14",
                  "lemma": "Jobin",
                  "tag": "NNP",
                  "word": "Jobin"
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(John-8, ,-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(John-8, Barack-16)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "16",
                  "lemma": "Barack",
                  "tag": "NNP",
                  "word": "Barack"
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(John-8, ,-17)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "17",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(John-8, Oprah-18)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "18",
                  "lemma": "Oprah",
                  "tag": "NNP",
                  "word": "Oprah"
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(John-8, ,-19)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "19",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(John-8, Ruth-20)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "20",
                  "lemma": "Ruth",
                  "tag": "NNP",
                  "word": "Ruth"
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(John-8, ,-21)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "21",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(John-8, Judith-22)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "22",
                  "lemma": "Judith",
                  "tag": "NNP",
                  "word": "Judith"
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(John-8, and-23)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "23",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(John-8, Leah-24)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "24",
                  "lemma": "Leah",
                  "tag": "NNP",
                  "word": "Leah"
                },
                "gov": {
                  "index": "8",
                  "lemma": "John",
                  "tag": "NNP",
                  "word": "John"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_1_node_1_node_9_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "NNP": "John"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_6_node": {
                  "NNP": "Jobin"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_12_node": {
                  "NNP": "Ruth"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_7_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_4_node": {
                  "NNP": "Achea"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_0_node": {
                  "VBZ": "Jay"
                },
                "s_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_13_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_16_node": {
                  "NNP": "Leah"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_5_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_10_node": {
                  "NNP": "Oprah"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_8_node": {
                  "NNP": "Barack"
                },
                "s_node_1_node_1_node_1_node_0_node_2_node": {
                  "NNS": "headspheres"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_11_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_15_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_14_node": {
                  "NNP": "Judith"
                },
                "s_node_0_node": {
                  "NNS": "whines"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJ": "clear"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node": {
                  "NNP": "Sue"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Leah."
                ]
              }
            },
            "sentence": "whines Jay to the clear headspheres of John, Sue, Achea, Jobin, Barack, Oprah, Ruth, Judith and Leah."
          },
          "jazzyState": {
            "text": "whines Jay to the clear headspheres of John, Sue, Achea, Jobin, Barack, Oprah, Ruth, Judith and Leah.",
            "misspelledWords": {
              "Achea": [
                "ache",
                "ached",
                "aches"
              ],
              "Ruth": [
                "truth",
                "rut",
                "ruts",
                "rush"
              ],
              "Judith": [],
              "Jobin": [
                "robin",
                "join"
              ],
              "Leah": [
                "yeah",
                "leash",
                "lead",
                "leap",
                "lean",
                "leak",
                "leaf"
              ],
              "Oprah": [
                "opera"
              ],
              "Barack": [
                "barrack"
              ],
              "headspheres": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027Should we close the door?",
          "wordCount": 5,
          "orderParagraph": 5,
          "nlpState": {
            "sentence": "\u0027\u0027Should we close the door?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "MD",
                "text": "Should",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "we",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "close",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, close-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "close",
                  "tag": "VB",
                  "word": "close"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(close-4, \u0027\u0027-1)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "close",
                  "tag": "VB",
                  "word": "close"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(close-4, Should-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "should",
                  "tag": "MD",
                  "word": "Should"
                },
                "gov": {
                  "index": "4",
                  "lemma": "close",
                  "tag": "VB",
                  "word": "close"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(close-4, we-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "we"
                },
                "gov": {
                  "index": "4",
                  "lemma": "close",
                  "tag": "VB",
                  "word": "close"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(close-4, door-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "close",
                  "tag": "VB",
                  "word": "close"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(close-4, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "close",
                  "tag": "VB",
                  "word": "close"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node": {
                  "PRP": "we"
                },
                "s_node_2_node_0_node": {
                  "VBP": "close"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Should"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Should we close the door?"
          },
          "jazzyState": {
            "text": "\u0027\u0027Should we close the door?",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Should we close the door?",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "Or should we stay in our spaceseats with spacehelmets?",
          "wordCount": 9,
          "orderParagraph": 6,
          "nlpState": {
            "sentence": "Or should we stay in our spaceseats with spacehelmets?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "CC",
                "text": "Or",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "MD",
                "text": "should",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "we",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "stay",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP$",
                "text": "our",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "spaceseats",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "spacehelmets",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stay-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "stay",
                  "tag": "VB",
                  "word": "stay"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(stay-4, Or-1)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "1",
                  "lemma": "or",
                  "tag": "CC",
                  "word": "Or"
                },
                "gov": {
                  "index": "4",
                  "lemma": "stay",
                  "tag": "VB",
                  "word": "stay"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(stay-4, should-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "should",
                  "tag": "MD",
                  "word": "should"
                },
                "gov": {
                  "index": "4",
                  "lemma": "stay",
                  "tag": "VB",
                  "word": "stay"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stay-4, we-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "we"
                },
                "gov": {
                  "index": "4",
                  "lemma": "stay",
                  "tag": "VB",
                  "word": "stay"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(stay-4, spaceseats-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "7",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                },
                "gov": {
                  "index": "4",
                  "lemma": "stay",
                  "tag": "VB",
                  "word": "stay"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(stay-4, spacehelmets-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "9",
                  "lemma": "spacehelmet",
                  "tag": "NNS",
                  "word": "spacehelmets"
                },
                "gov": {
                  "index": "4",
                  "lemma": "stay",
                  "tag": "VB",
                  "word": "stay"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stay-4, ?-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "stay",
                  "tag": "VB",
                  "word": "stay"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(spaceseats-7, in-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "7",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(spaceseats-7, our-6)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "6",
                  "lemma": "we",
                  "tag": "PRP$",
                  "word": "our"
                },
                "gov": {
                  "index": "7",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(spacehelmets-9, with-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "with",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "9",
                  "lemma": "spacehelmet",
                  "tag": "NNS",
                  "word": "spacehelmets"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_3_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_3_node_2_node_0_node": {
                  "IN": "with"
                },
                "s_node_3_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PRP": "we"
                },
                "s_node_3_node_1_node_1_node_1_node": {
                  "NNS": "spaceseats"
                },
                "s_node_3_node_0_node": {
                  "VB": "stay"
                },
                "s_node_3_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_3_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node": {
                  "MD": "should"
                },
                "s_node_3_node_1_node_1_node_0_node": {
                  "PRP$": "our"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_2_node_1_node": {
                  "NNS": "spacehelmets"
                },
                "s_node_0_node": {
                  "CC": "Or"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Or should we stay in our spaceseats with spacehelmets?"
          },
          "jazzyState": {
            "text": "Or should we stay in our spaceseats with spacehelmets?",
            "misspelledWords": {
              "spacehelmets": [],
              "spaceseats": [
                "subsists"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "They\u0027re call spaceseats and spacehelmets, like fucking fishbowls, right?",
          "wordCount": 9,
          "orderParagraph": 7,
          "nlpState": {
            "sentence": "They\u0027re call spaceseats and spacehelmets, like fucking fishbowls, right?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "They",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "\u0027re",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "call",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "spaceseats",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "spacehelmets",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "like",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBG",
                "text": "fucking",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "fishbowls",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "right",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, spaceseats-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(spaceseats-4, They-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "they",
                  "tag": "PRP",
                  "word": "They"
                },
                "gov": {
                  "index": "4",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(spaceseats-4, \u0027re-2)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "\u0027re"
                },
                "gov": {
                  "index": "4",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(spaceseats-4, call-3)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "call",
                  "tag": "JJ",
                  "word": "call"
                },
                "gov": {
                  "index": "4",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(spaceseats-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(spaceseats-4, spacehelmets-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "spacehelmet",
                  "tag": "NNS",
                  "word": "spacehelmets"
                },
                "gov": {
                  "index": "4",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(spaceseats-4, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "4",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:like(spaceseats-4, fishbowls-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:like"
                },
                "dep": {
                  "index": "10",
                  "lemma": "fishbowl",
                  "tag": "NNS",
                  "word": "fishbowls"
                },
                "gov": {
                  "index": "4",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(spaceseats-4, ?-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(fishbowls-10, like-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "like",
                  "tag": "IN",
                  "word": "like"
                },
                "gov": {
                  "index": "10",
                  "lemma": "fishbowl",
                  "tag": "NNS",
                  "word": "fishbowls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(fishbowls-10, fucking-9)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "fuck",
                  "tag": "VBG",
                  "word": "fucking"
                },
                "gov": {
                  "index": "10",
                  "lemma": "fishbowl",
                  "tag": "NNS",
                  "word": "fishbowls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(fishbowls-10, ,-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "10",
                  "lemma": "fishbowl",
                  "tag": "NNS",
                  "word": "fishbowls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(fishbowls-10, right-12)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "12",
                  "lemma": "right",
                  "tag": "NN",
                  "word": "right"
                },
                "gov": {
                  "index": "10",
                  "lemma": "fishbowl",
                  "tag": "NNS",
                  "word": "fishbowls"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "NNS": "fishbowls"
                },
                "s_node_1_node_1_node_3_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_0_node_2_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_4_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node_4_node": {
                  "RB": "right"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "VBG": "fucking"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_0_node_3_node": {
                  "NNS": "spacehelmets"
                },
                "s_node_1_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "NN": "call"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "IN": "like"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node": {
                  "PRP": "They"
                },
                "s_node_1_node_0_node": {
                  "VBP": "\u0027re"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node": {
                  "NNS": "spaceseats"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "They\u0027re call spaceseats and spacehelmets, like fucking fishbowls, right?"
          },
          "jazzyState": {
            "text": "They\u0027re call spaceseats and spacehelmets, like fucking fishbowls, right?",
            "misspelledWords": {
              "spacehelmets": [],
              "fishbowls": [],
              "fucking": [
                "mucking",
                "bucking",
                "sucking",
                "ducking",
                "tucking"
              ],
              "spaceseats": [
                "subsists"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "That\u0027s what they called them, right?\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 8,
          "nlpState": {
            "sentence": "That\u0027s what they called them, right?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "DT",
                "text": "That",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WP",
                "text": "what",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "they",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "called",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "them",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "right",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, \u0027s-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(\u0027s-2, That-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "that",
                  "tag": "DT",
                  "word": "That"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(\u0027s-2, called-5)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "5",
                  "lemma": "call",
                  "tag": "VBD",
                  "word": "called"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(\u0027s-2, ?-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(\u0027s-2, \u0027\u0027-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(called-5, what-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "what",
                  "tag": "WP",
                  "word": "what"
                },
                "gov": {
                  "index": "5",
                  "lemma": "call",
                  "tag": "VBD",
                  "word": "called"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(called-5, they-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "they",
                  "tag": "PRP",
                  "word": "they"
                },
                "gov": {
                  "index": "5",
                  "lemma": "call",
                  "tag": "VBD",
                  "word": "called"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(called-5, them-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "they",
                  "tag": "PRP",
                  "word": "them"
                },
                "gov": {
                  "index": "5",
                  "lemma": "call",
                  "tag": "VBD",
                  "word": "called"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(called-5, ,-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "5",
                  "lemma": "call",
                  "tag": "VBD",
                  "word": "called"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(called-5, right-8)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "right",
                  "tag": "RB",
                  "word": "right"
                },
                "gov": {
                  "index": "5",
                  "lemma": "call",
                  "tag": "VBD",
                  "word": "called"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "WHNP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBD": "called"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "PRP": "they"
                },
                "s_node_1_node_1_node_1_node_1_node_3_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node_3_node": {
                  "RB": "right"
                },
                "s_node_0_node": {
                  "DT": "That"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "\u0027s"
                },
                "s_node_1_node_1_node_0_node": {
                  "WP": "what"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node": {
                  "PRP": "them"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "That\u0027s what they called them, right?\u0027\u0027"
          },
          "jazzyState": {
            "text": "That\u0027s what they called them, right?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "That\u0027s what they called them, right?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The forklift stops as the white-panel container lowers to the concrete floor of the hanger as the huge hanger doors roll to close.",
      "wordCount": 23,
      "order": 20,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The forklift stops as the white-panel container lowers to the concrete floor of the hanger as the huge hanger doors roll to close.",
          "wordCount": 23,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "The forklift stops as the white-panel container lowers to the concrete floor of the hanger as the huge hanger doors roll to close.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "forklift",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "stops",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "white-panel",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "container",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "lowers",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "concrete",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "floor",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "hanger",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "huge",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "hanger",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "doors",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBP",
                "text": "roll",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VB",
                "text": "close",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, stops-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "stop",
                  "tag": "VBZ",
                  "word": "stops"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(forklift-2, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "2",
                  "lemma": "forklift",
                  "tag": "NN",
                  "word": "forklift"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(stops-3, forklift-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "forklift",
                  "tag": "NN",
                  "word": "forklift"
                },
                "gov": {
                  "index": "3",
                  "lemma": "stop",
                  "tag": "VBZ",
                  "word": "stops"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(stops-3, lowers-8)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "8",
                  "lemma": "lower",
                  "tag": "VBZ",
                  "word": "lowers"
                },
                "gov": {
                  "index": "3",
                  "lemma": "stop",
                  "tag": "VBZ",
                  "word": "stops"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(stops-3, .-24)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "24",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "stop",
                  "tag": "VBZ",
                  "word": "stops"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(container-7, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(container-7, white-panel-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "white-panel",
                  "tag": "JJ",
                  "word": "white-panel"
                },
                "gov": {
                  "index": "7",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(lowers-8, as-4)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "4",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lower",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(lowers-8, roll-21)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "21",
                  "lemma": "roll",
                  "tag": "VBP",
                  "word": "roll"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lower",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lowers-8, container-7)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "7",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lower",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(lowers-8, floor-12)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "12",
                  "lemma": "floor",
                  "tag": "NN",
                  "word": "floor"
                },
                "gov": {
                  "index": "8",
                  "lemma": "lower",
                  "tag": "VBZ",
                  "word": "lowers"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(floor-12, to-9)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "9",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "12",
                  "lemma": "floor",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(floor-12, the-10)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "10",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "12",
                  "lemma": "floor",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(floor-12, concrete-11)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "concrete",
                  "tag": "JJ",
                  "word": "concrete"
                },
                "gov": {
                  "index": "12",
                  "lemma": "floor",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(floor-12, hanger-15)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "15",
                  "lemma": "hanger",
                  "tag": "NN",
                  "word": "hanger"
                },
                "gov": {
                  "index": "12",
                  "lemma": "floor",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(hanger-15, of-13)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "13",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "15",
                  "lemma": "hanger",
                  "tag": "NN",
                  "word": "hanger"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(hanger-15, the-14)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "14",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "15",
                  "lemma": "hanger",
                  "tag": "NN",
                  "word": "hanger"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(doors-20, the-17)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "17",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "20",
                  "lemma": "door",
                  "tag": "NNS",
                  "word": "doors"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(doors-20, huge-18)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "18",
                  "lemma": "huge",
                  "tag": "JJ",
                  "word": "huge"
                },
                "gov": {
                  "index": "20",
                  "lemma": "door",
                  "tag": "NNS",
                  "word": "doors"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(doors-20, hanger-19)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "19",
                  "lemma": "hanger",
                  "tag": "NN",
                  "word": "hanger"
                },
                "gov": {
                  "index": "20",
                  "lemma": "door",
                  "tag": "NNS",
                  "word": "doors"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(roll-21, as-16)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "16",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "21",
                  "lemma": "roll",
                  "tag": "VBP",
                  "word": "roll"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(roll-21, doors-20)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "20",
                  "lemma": "door",
                  "tag": "NNS",
                  "word": "doors"
                },
                "gov": {
                  "index": "21",
                  "lemma": "roll",
                  "tag": "VBP",
                  "word": "roll"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(roll-21, close-23)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "23",
                  "lemma": "close",
                  "tag": "VB",
                  "word": "close"
                },
                "gov": {
                  "index": "21",
                  "lemma": "roll",
                  "tag": "VBP",
                  "word": "roll"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(close-23, to-22)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "22",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "23",
                  "lemma": "close",
                  "tag": "VB",
                  "word": "close"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_1_node_0_node_2_node": {
                  "NN": "hanger"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_1_node_0_node_3_node": {
                  "NNS": "doors"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_0_node": {
                  "IN": "as"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "stops"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "as"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "forklift"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBZ": "lowers"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJ": "concrete"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_node_2_node": {
                  "NN": "container"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_1_node_1_node_0_node": {
                  "VBP": "roll"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_1_node_1_node_1_node_1_node": {
                  "VB": "close"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "hanger"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node_2_node": {
                  "NN": "floor"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "JJ": "white-panel"
                },
                "s_node_1_node_1_node_1_node_1_node_2_node_1_node_0_node_1_node": {
                  "JJ": "huge"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "close."
                ]
              }
            },
            "sentence": "The forklift stops as the white-panel container lowers to the concrete floor of the hanger as the huge hanger doors roll to close."
          },
          "jazzyState": {
            "text": "The forklift stops as the white-panel container lowers to the concrete floor of the hanger as the huge hanger doors roll to close.",
            "misspelledWords": {
              "forklift": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Jay shouts as soldiers aiming rifles walk pass the container\u0027s doorway. \u0027\u0027OVER HERE ASSHOLES.\u0027\u0027 He wobbles head. \u0027\u0027FUCKERS, CLOSE THE DOOR!\u0027\u0027",
      "wordCount": 21,
      "order": 21,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Jay shouts as soldiers aiming rifles walk pass the container\u0027s doorway.",
          "wordCount": 11,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Jay shouts as soldiers aiming rifles walk pass the container\u0027s doorway.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "shouts",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "soldiers",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBG",
                "text": "aiming",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "rifles",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBP",
                "text": "walk",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VB",
                "text": "pass",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "container",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "doorway",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shouts-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "shout",
                  "tag": "VBZ",
                  "word": "shouts"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shouts-2, Jay-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shout",
                  "tag": "VBZ",
                  "word": "shouts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(shouts-2, walk-7)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "7",
                  "lemma": "walk",
                  "tag": "VBP",
                  "word": "walk"
                },
                "gov": {
                  "index": "2",
                  "lemma": "shout",
                  "tag": "VBZ",
                  "word": "shouts"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shouts-2, .-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "shout",
                  "tag": "VBZ",
                  "word": "shouts"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "acl(soldiers-4, aiming-5)",
                  "name": "clausal modifier of noun",
                  "tag": "acl"
                },
                "dep": {
                  "index": "5",
                  "lemma": "aim",
                  "tag": "VBG",
                  "word": "aiming"
                },
                "gov": {
                  "index": "4",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(aiming-5, rifles-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "rifle",
                  "tag": "NNS",
                  "word": "rifles"
                },
                "gov": {
                  "index": "5",
                  "lemma": "aim",
                  "tag": "VBG",
                  "word": "aiming"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(walk-7, as-3)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "3",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "7",
                  "lemma": "walk",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(walk-7, soldiers-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "soldier",
                  "tag": "NNS",
                  "word": "soldiers"
                },
                "gov": {
                  "index": "7",
                  "lemma": "walk",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(walk-7, pass-8)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "8",
                  "lemma": "pass",
                  "tag": "VB",
                  "word": "pass"
                },
                "gov": {
                  "index": "7",
                  "lemma": "walk",
                  "tag": "VBP",
                  "word": "walk"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pass-8, doorway-12)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "12",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                },
                "gov": {
                  "index": "8",
                  "lemma": "pass",
                  "tag": "VB",
                  "word": "pass"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(container-10, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "10",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(container-10, \u0027s-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "10",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(doorway-12, container-10)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "10",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                },
                "gov": {
                  "index": "12",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBG": "aiming"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_2_node_1_node": {
                  "NN": "doorway"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "NNS": "rifles"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "VB": "pass"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_2_node_0_node_1_node": {
                  "NN": "container"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNS": "soldiers"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_2_node_0_node_2_node": {
                  "POS": "\u0027s"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "NN": "walk"
                },
                "s_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "shouts"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "as"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_2_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "doorway."
                ]
              }
            },
            "sentence": "Jay shouts as soldiers aiming rifles walk pass the container\u0027s doorway."
          },
          "jazzyState": {
            "text": "Jay shouts as soldiers aiming rifles walk pass the container\u0027s doorway.",
            "misspelledWords": {
              "container\u0027s": [
                "containers"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027OVER HERE ASSHOLES.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "\u0027\u0027OVER HERE ASSHOLES.\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "OVER",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "HERE",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "ASSHOLES",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, ASSHOLES-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "assholes",
                  "tag": "NN",
                  "word": "ASSHOLES"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ASSHOLES-4, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "assholes",
                  "tag": "NN",
                  "word": "ASSHOLES"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(ASSHOLES-4, OVER-2)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "2",
                  "lemma": "over",
                  "tag": "IN",
                  "word": "OVER"
                },
                "gov": {
                  "index": "4",
                  "lemma": "assholes",
                  "tag": "NN",
                  "word": "ASSHOLES"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(ASSHOLES-4, HERE-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "here",
                  "tag": "RB",
                  "word": "HERE"
                },
                "gov": {
                  "index": "4",
                  "lemma": "assholes",
                  "tag": "NN",
                  "word": "ASSHOLES"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ASSHOLES-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "assholes",
                  "tag": "NN",
                  "word": "ASSHOLES"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(ASSHOLES-4, \u0027\u0027-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "assholes",
                  "tag": "NN",
                  "word": "ASSHOLES"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "NNP": "OVER"
                },
                "s_node_3_node": {
                  "VBZ": "ASSHOLES"
                },
                "s_node_2_node": {
                  "RB": "HERE"
                },
                "s_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_5_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "ASSHOLES.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027OVER HERE ASSHOLES.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027OVER HERE ASSHOLES.\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027OVER HERE ASSHOLES.\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "He wobbles head.",
          "wordCount": 3,
          "orderParagraph": 3,
          "nlpState": {
            "sentence": "He wobbles head.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "PRP",
                "text": "He",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "wobbles",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "head",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, wobbles-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wobble",
                  "tag": "VBZ",
                  "word": "wobbles"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(wobbles-2, He-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "he",
                  "tag": "PRP",
                  "word": "He"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wobble",
                  "tag": "VBZ",
                  "word": "wobbles"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(wobbles-2, head-3)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "head",
                  "tag": "NN",
                  "word": "head"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wobble",
                  "tag": "VBZ",
                  "word": "wobbles"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(wobbles-2, .-4)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "4",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "wobble",
                  "tag": "VBZ",
                  "word": "wobbles"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "NN": "head"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "He"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "wobbles"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "head."
                ]
              }
            },
            "sentence": "He wobbles head."
          },
          "jazzyState": {
            "text": "He wobbles head.",
            "misspelledWords": {
              "wobbles": [
                "hobbles",
                "gobbles"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027FUCKERS, CLOSE THE DOOR!\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 4,
          "nlpState": {
            "sentence": "\u0027\u0027FUCKERS, CLOSE THE DOOR!\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "FUCKERS",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "CLOSE",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "THE",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "DOOR",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "!",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, DOOR-6)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "6",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "DOOR"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(FUCKERS-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "FUCKERS",
                  "tag": "NNP",
                  "word": "FUCKERS"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DOOR-6, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "DOOR"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(DOOR-6, FUCKERS-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "FUCKERS",
                  "tag": "NNP",
                  "word": "FUCKERS"
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "DOOR"
                }
              },
              {
                "reln": {
                  "string": "dep(DOOR-6, CLOSE-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "CLOSE",
                  "tag": "NNP",
                  "word": "CLOSE"
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "DOOR"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(DOOR-6, THE-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "THE"
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "DOOR"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DOOR-6, !-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "!",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "DOOR"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(DOOR-6, \u0027\u0027-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "6",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "DOOR"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "DT": "THE"
                },
                "s_node_3_node": {
                  "PERIOD": "!"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "DOOR"
                },
                "s_node_1_node_1_node": {
                  "COMMA": ","
                },
                "s_node_2_node_0_node": {
                  "VBP": "CLOSE"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "NNP": "FUCKERS"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027FUCKERS, CLOSE THE DOOR!\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027FUCKERS, CLOSE THE DOOR!\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027FUCKERS, CLOSE THE DOOR!\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A silhouette steps before the dawn\u0027s light glowing between the rolling hanger door and through the white-panel doorway.",
      "wordCount": 18,
      "order": 22,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A silhouette steps before the dawn\u0027s light glowing between the rolling hanger door and through the white-panel doorway.",
          "wordCount": 18,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "A silhouette steps before the dawn\u0027s light glowing between the rolling hanger door and through the white-panel doorway.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "silhouette",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "steps",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "before",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "dawn",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "POS",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "light",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "glowing",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "between",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBG",
                "text": "rolling",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "hanger",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "through",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "white-panel",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "doorway",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, steps-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "step",
                  "tag": "NNS",
                  "word": "steps"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(steps-3, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "3",
                  "lemma": "step",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(steps-3, silhouette-2)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "2",
                  "lemma": "silhouette",
                  "tag": "NN",
                  "word": "silhouette"
                },
                "gov": {
                  "index": "3",
                  "lemma": "step",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(steps-3, steps-3\u0027)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "3",
                  "lemma": "step",
                  "tag": "NNS",
                  "word": "steps"
                },
                "gov": {
                  "index": "3",
                  "lemma": "step",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(steps-3, steps-3\u0027\u0027)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "3",
                  "lemma": "step",
                  "tag": "NNS",
                  "word": "steps"
                },
                "gov": {
                  "index": "3",
                  "lemma": "step",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(steps-3, .-20)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "20",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "step",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:\u0027s(steps-3, dawn-6)",
                  "name": "nmod_preposition",
                  "tag": "nmod:\u0027s"
                },
                "dep": {
                  "index": "6",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                },
                "gov": {
                  "index": "3",
                  "lemma": "step",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(steps-3, and-15)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "15",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "step",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:through(steps-3\u0027, doorway-19)",
                  "name": "nmod_preposition",
                  "tag": "nmod:through"
                },
                "dep": {
                  "index": "19",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                },
                "gov": {
                  "index": "3",
                  "lemma": "step",
                  "tag": "NNS",
                  "word": "steps"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(dawn-6, before-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "before",
                  "tag": "IN",
                  "word": "before"
                },
                "gov": {
                  "index": "6",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(dawn-6, the-5)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "5",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(dawn-6, \u0027s-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "\u0027s",
                  "tag": "POS",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "6",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(dawn-6, light-8)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "light",
                  "tag": "JJ",
                  "word": "light"
                },
                "gov": {
                  "index": "6",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(dawn-6, glowing-9)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "glowing",
                  "tag": "JJ",
                  "word": "glowing"
                },
                "gov": {
                  "index": "6",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:between(dawn-6, door-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:between"
                },
                "dep": {
                  "index": "14",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "6",
                  "lemma": "dawn",
                  "tag": "NN",
                  "word": "dawn"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(door-14, between-10)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "10",
                  "lemma": "between",
                  "tag": "IN",
                  "word": "between"
                },
                "gov": {
                  "index": "14",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-14, the-11)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "11",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "14",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-14, rolling-12)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "12",
                  "lemma": "roll",
                  "tag": "VBG",
                  "word": "rolling"
                },
                "gov": {
                  "index": "14",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(door-14, hanger-13)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "13",
                  "lemma": "hanger",
                  "tag": "NN",
                  "word": "hanger"
                },
                "gov": {
                  "index": "14",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(doorway-19, through-16)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "16",
                  "lemma": "through",
                  "tag": "IN",
                  "word": "through"
                },
                "gov": {
                  "index": "19",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(doorway-19, the-17)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "17",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "19",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(doorway-19, white-panel-18)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "18",
                  "lemma": "white-panel",
                  "tag": "JJ",
                  "word": "white-panel"
                },
                "gov": {
                  "index": "19",
                  "lemma": "doorway",
                  "tag": "NN",
                  "word": "doorway"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node_1_node_3_node": {
                  "NN": "door"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node_1_node": {
                  "NN": "dawn"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "steps"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "before"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node_2_node": {
                  "POS": "\u0027s"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "silhouette"
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "VBG": "glowing"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node_1_node_1_node": {
                  "JJ": "white-panel"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node_1_node_1_node": {
                  "JJ": "rolling"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node_0_node": {
                  "IN": "between"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node_1_node_2_node": {
                  "NN": "doorway"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_2_node_0_node": {
                  "IN": "through"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node_1_node_2_node": {
                  "NN": "hanger"
                },
                "s_node_1_node_1_node_1_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "NN": "light"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "doorway."
                ]
              }
            },
            "sentence": "A silhouette steps before the dawn\u0027s light glowing between the rolling hanger door and through the white-panel doorway."
          },
          "jazzyState": {
            "text": "A silhouette steps before the dawn\u0027s light glowing between the rolling hanger door and through the white-panel doorway.",
            "misspelledWords": {
              "dawn\u0027s": [
                "dawns",
                "Dan\u0027s",
                "pawn\u0027s",
                "lawn\u0027s"
              ]
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Jay says, \u0027\u0027HEY! THIS,\u0027\u0027 dry coughs, \u0027\u0027This is Jay. I know we\u0027re not supposed to talk, and I didn\u0027t after that missile from nowhere blew-up Mary. But they shot Jesus in the head, and that freaked me the fuck-out. There\u0027s still blood on the floor. I\u0027ve got questions. Are we still applicants for a job on Mars? Have we failed the test screen? Something wrong with my application? Is the chip in my forehead not going to work?\u0027\u0027 as the silhouette pulls and swings the door.",
      "wordCount": 86,
      "order": 23,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Jay says,",
          "wordCount": 2,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Jay says,",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "says",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, says-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "say",
                  "tag": "VBZ",
                  "word": "says"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(says-2, Jay-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "tag": "VBZ",
                  "word": "says"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(says-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "say",
                  "tag": "VBZ",
                  "word": "says"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "says"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Jay says,"
          },
          "jazzyState": {
            "text": "Jay says,",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027HEY!",
          "wordCount": 1,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "\u0027\u0027HEY!",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "HEY",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "!",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, HEY-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "hey",
                  "tag": "NN",
                  "word": "HEY"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(HEY-2, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hey",
                  "tag": "NN",
                  "word": "HEY"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(HEY-2, !-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": "!",
                  "tag": ".",
                  "word": "!"
                },
                "gov": {
                  "index": "2",
                  "lemma": "hey",
                  "tag": "NN",
                  "word": "HEY"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "NNP": "HEY"
                },
                "s_node_2_node": {
                  "PERIOD": "!"
                },
                "s_node_0_node": {
                  "NNP": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027HEY!"
          },
          "jazzyState": {
            "text": "\u0027\u0027HEY!",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027HEY!",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "THIS,\u0027\u0027",
          "wordCount": 1,
          "orderParagraph": 3,
          "nlpState": {
            "sentence": "THIS,\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "THIS",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, THIS-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "this",
                  "tag": "NNS",
                  "word": "THIS"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(THIS-1, ,-2)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "2",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "1",
                  "lemma": "this",
                  "tag": "NNS",
                  "word": "THIS"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "appos(THIS-1, \u0027\u0027-3)",
                  "name": "appositional modifier",
                  "tag": "appos"
                },
                "dep": {
                  "index": "3",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "1",
                  "lemma": "this",
                  "tag": "NNS",
                  "word": "THIS"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "NNP": "\u0027\u0027"
                },
                "s_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "NNS": "THIS"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "THIS,\u0027\u0027"
          },
          "jazzyState": {
            "text": "THIS,\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "THIS,\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "dry coughs,",
          "wordCount": 2,
          "orderParagraph": 4,
          "nlpState": {
            "sentence": "dry coughs,",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "dry",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "coughs",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, coughs-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "cough",
                  "tag": "NNS",
                  "word": "coughs"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(coughs-2, dry-1)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "1",
                  "lemma": "dry",
                  "tag": "JJ",
                  "word": "dry"
                },
                "gov": {
                  "index": "2",
                  "lemma": "cough",
                  "tag": "NNS",
                  "word": "coughs"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(coughs-2, ,-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "cough",
                  "tag": "NNS",
                  "word": "coughs"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "coughs"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_0_node": {
                  "JJ": "dry"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "dry coughs,"
          },
          "jazzyState": {
            "text": "dry coughs,",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u0027\u0027This is Jay.",
          "wordCount": 3,
          "orderParagraph": 5,
          "nlpState": {
            "sentence": "\u0027\u0027This is Jay.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "This",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "is",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Jay-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Jay-4, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Jay-4, This-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "this",
                  "tag": "DT",
                  "word": "This"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(Jay-4, is-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "is"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Jay-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node": {
                  "DT": "This"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "NNP": "Jay"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "is"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Jay."
                ]
              }
            },
            "sentence": "\u0027\u0027This is Jay."
          },
          "jazzyState": {
            "text": "\u0027\u0027This is Jay.",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027This is Jay.",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": true
          },
          "completeSentence": false
        },
        {
          "sentence": "I know we\u0027re not supposed to talk, and I didn\u0027t after that missile from nowhere blew-up Mary.",
          "wordCount": 17,
          "orderParagraph": 6,
          "nlpState": {
            "sentence": "I know we\u0027re not supposed to talk, and I didn\u0027t after that missile from nowhere blew-up Mary.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "know",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "we",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "\u0027re",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBN",
                "text": "supposed",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "talk",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "did",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "n\u0027t",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "after",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "that",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "missile",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "nowhere",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "blew-up",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Mary",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, know-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "know",
                  "tag": "VBP",
                  "word": "know"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(know-2, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "2",
                  "lemma": "know",
                  "tag": "VBP",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(know-2, Mary-20)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "20",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                },
                "gov": {
                  "index": "2",
                  "lemma": "know",
                  "tag": "VBP",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(know-2, .-21)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "21",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "know",
                  "tag": "VBP",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(know-2, supposed-6)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "suppose",
                  "tag": "VBN",
                  "word": "supposed"
                },
                "gov": {
                  "index": "2",
                  "lemma": "know",
                  "tag": "VBP",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(know-2, ,-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "know",
                  "tag": "VBP",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(know-2, and-10)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "10",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "know",
                  "tag": "VBP",
                  "word": "know"
                }
              },
              {
                "reln": {
                  "parent": "nsubj",
                  "string": "nsubjpass(supposed-6, we-3)",
                  "name": "nominal passive subject",
                  "tag": "nsubjpass"
                },
                "dep": {
                  "index": "3",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "we"
                },
                "gov": {
                  "index": "6",
                  "lemma": "suppose",
                  "tag": "VBN",
                  "word": "supposed"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "auxpass(supposed-6, \u0027re-4)",
                  "name": "passive auxiliary",
                  "tag": "auxpass"
                },
                "dep": {
                  "index": "4",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "\u0027re"
                },
                "gov": {
                  "index": "6",
                  "lemma": "suppose",
                  "tag": "VBN",
                  "word": "supposed"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(supposed-6, not-5)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "5",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "6",
                  "lemma": "suppose",
                  "tag": "VBN",
                  "word": "supposed"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(supposed-6, talk-8)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "8",
                  "lemma": "talk",
                  "tag": "VB",
                  "word": "talk"
                },
                "gov": {
                  "index": "6",
                  "lemma": "suppose",
                  "tag": "VBN",
                  "word": "supposed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(talk-8, to-7)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "7",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "8",
                  "lemma": "talk",
                  "tag": "VB",
                  "word": "talk"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(missile-16, nowhere-18)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "18",
                  "lemma": "nowhere",
                  "tag": "RB",
                  "word": "nowhere"
                },
                "gov": {
                  "index": "16",
                  "lemma": "missile",
                  "tag": "NN",
                  "word": "missile"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(missile-16, after-14)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "14",
                  "lemma": "after",
                  "tag": "IN",
                  "word": "after"
                },
                "gov": {
                  "index": "16",
                  "lemma": "missile",
                  "tag": "NN",
                  "word": "missile"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(missile-16, that-15)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "15",
                  "lemma": "that",
                  "tag": "DT",
                  "word": "that"
                },
                "gov": {
                  "index": "16",
                  "lemma": "missile",
                  "tag": "NN",
                  "word": "missile"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(nowhere-18, from-17)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "17",
                  "lemma": "from",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "18",
                  "lemma": "nowhere",
                  "tag": "RB",
                  "word": "nowhere"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(Mary-20, missile-16)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "16",
                  "lemma": "missile",
                  "tag": "NN",
                  "word": "missile"
                },
                "gov": {
                  "index": "20",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(Mary-20, blew-up-19)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "19",
                  "lemma": "blew-up",
                  "tag": "JJ",
                  "word": "blew-up"
                },
                "gov": {
                  "index": "20",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Mary-20, I-11)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "20",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(Mary-20, did-12)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "12",
                  "lemma": "do",
                  "tag": "VBD",
                  "word": "did"
                },
                "gov": {
                  "index": "20",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                }
              },
              {
                "reln": {
                  "parent": "advmod",
                  "string": "neg(Mary-20, n\u0027t-13)",
                  "name": "negation modifier",
                  "tag": "neg"
                },
                "dep": {
                  "index": "13",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "n\u0027t"
                },
                "gov": {
                  "index": "20",
                  "lemma": "Mary",
                  "tag": "NNP",
                  "word": "Mary"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_1_node_1_node_0_node": {
                  "NNP": "nowhere"
                },
                "s_node_3_node_1_node_2_node_0_node_1_node_0_node": {
                  "DT": "that"
                },
                "s_node_3_node_0_node": {
                  "PRP": "I"
                },
                "s_node_3_node_1_node_1_node": {
                  "RB": "n\u0027t"
                },
                "s_node_3_node_1_node_2_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_0_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_2_node_1_node_1_node_2_node": {
                  "NNP": "Mary"
                },
                "s_node_1_node": {
                  "COMMA": ","
                },
                "s_node_3_node_1_node_2_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_3_node_1_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node_1_node_2_node_0_node_0_node": {
                  "IN": "after"
                },
                "s_node_0_node_0_node": {
                  "PRP": "I"
                },
                "s_node_0_node_1_node_0_node": {
                  "VBP": "know"
                },
                "s_node_3_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_1_node_1_node_0_node": {
                  "PRP": "we"
                },
                "s_node_3_node_1_node_0_node": {
                  "VBD": "did"
                },
                "s_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_1_node_1_node": {
                  "VB": "talk"
                },
                "s_node_3_node_1_node_2_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_0_node": {
                  "VBN": "supposed"
                },
                "s_node_2_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_1_node_1_node_0_node": {
                  "VBP": "\u0027re"
                },
                "s_node_0_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                },
                "s_node_3_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node_1_node_2_node_0_node_1_node_1_node": {
                  "NN": "missile"
                },
                "s_node_0_node_1_node_1_node_1_node_1_node": {
                  "RB": "not"
                },
                "s_node_3_node_1_node_2_node_1_node_1_node_1_node": {
                  "NNP": "blew-up"
                },
                "s_node_0_node_1_node_1_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "Mary."
                ]
              }
            },
            "sentence": "I know we\u0027re not supposed to talk, and I didn\u0027t after that missile from nowhere blew-up Mary."
          },
          "jazzyState": {
            "text": "I know we\u0027re not supposed to talk, and I didn\u0027t after that missile from nowhere blew-up Mary.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "But they shot Jesus in the head, and that freaked me the fuck-out.",
          "wordCount": 13,
          "orderParagraph": 7,
          "nlpState": {
            "sentence": "But they shot Jesus in the head, and that freaked me the fuck-out.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "CC",
                "text": "But",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "they",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "shot",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Jesus",
                "net": "PERSON"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "head",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ",",
                "text": ",",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "that",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "freaked",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "me",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "fuck-out",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, shot-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "shot"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(shot-3, But-1)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "1",
                  "lemma": "but",
                  "tag": "CC",
                  "word": "But"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "shot"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(shot-3, they-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "they",
                  "tag": "PRP",
                  "word": "they"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "shot"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(shot-3, Jesus-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "Jesus",
                  "tag": "NNP",
                  "word": "Jesus"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "shot"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shot-3, ,-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "3",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "shot"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(shot-3, and-9)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "9",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "shot"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(shot-3, freaked-11)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "11",
                  "lemma": "freak",
                  "tag": "VBD",
                  "word": "freaked"
                },
                "gov": {
                  "index": "3",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "shot"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(shot-3, .-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "shoot",
                  "tag": "VBD",
                  "word": "shot"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:in(Jesus-4, head-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:in"
                },
                "dep": {
                  "index": "7",
                  "lemma": "head",
                  "tag": "NN",
                  "word": "head"
                },
                "gov": {
                  "index": "4",
                  "lemma": "Jesus",
                  "tag": "NNP",
                  "word": "Jesus"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(head-7, in-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "7",
                  "lemma": "head",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(head-7, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "head",
                  "tag": "NN",
                  "word": "head"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(freaked-11, that-10)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "that",
                  "tag": "IN",
                  "word": "that"
                },
                "gov": {
                  "index": "11",
                  "lemma": "freak",
                  "tag": "VBD",
                  "word": "freaked"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(freaked-11, me-12)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "12",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "11",
                  "lemma": "freak",
                  "tag": "VBD",
                  "word": "freaked"
                }
              },
              {
                "reln": {
                  "string": "dep(freaked-11, fuck-out-14)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "14",
                  "lemma": "fuck-out",
                  "tag": "NN",
                  "word": "fuck-out"
                },
                "gov": {
                  "index": "11",
                  "lemma": "freak",
                  "tag": "VBD",
                  "word": "freaked"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(fuck-out-14, the-13)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "13",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "14",
                  "lemma": "fuck-out",
                  "tag": "NN",
                  "word": "fuck-out"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_4_node_1_node_1_node_1_node_1_node": {
                  "NN": "fuck-out"
                },
                "s_node_3_node": {
                  "CC": "and"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_4_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "NNP": "Jesus"
                },
                "s_node_4_node_0_node": {
                  "DT": "that"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node_1_node_1_node": {
                  "NN": "head"
                },
                "s_node_4_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_4_node_1_node_0_node": {
                  "VBZ": "freaked"
                },
                "s_node_5_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_0_node": {
                  "PRP": "they"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBD": "shot"
                },
                "s_node_4_node_1_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_4_node_1_node_1_node_0_node": {
                  "PRP": "me"
                },
                "s_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_1_node_0_node": {
                  "IN": "in"
                },
                "s_node_4_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node": {
                  "CC": "But"
                },
                "s_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "PP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "fuck-out."
                ]
              }
            },
            "sentence": "But they shot Jesus in the head, and that freaked me the fuck-out."
          },
          "jazzyState": {
            "text": "But they shot Jesus in the head, and that freaked me the fuck-out.",
            "misspelledWords": {
              "freaked": [
                "creaked"
              ],
              "Jesus": [
                "jests"
              ],
              "fuck": [
                "muck",
                "buck",
                "suck",
                "luck",
                "duck",
                "tuck",
                "yuck"
              ]
            }
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "There\u0027s still blood on the floor.",
          "wordCount": 6,
          "orderParagraph": 8,
          "nlpState": {
            "sentence": "There\u0027s still blood on the floor.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "EX",
                "text": "There",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "\u0027s",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "still",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "blood",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "floor",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, \u0027s-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "expl(\u0027s-2, There-1)",
                  "name": "expletive",
                  "tag": "expl"
                },
                "dep": {
                  "index": "1",
                  "lemma": "there",
                  "tag": "EX",
                  "word": "There"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(\u0027s-2, still-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "still",
                  "tag": "RB",
                  "word": "still"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(\u0027s-2, blood-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "blood",
                  "tag": "NN",
                  "word": "blood"
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(\u0027s-2, .-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "\u0027s"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(blood-4, floor-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "7",
                  "lemma": "floor",
                  "tag": "NN",
                  "word": "floor"
                },
                "gov": {
                  "index": "4",
                  "lemma": "blood",
                  "tag": "NN",
                  "word": "blood"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(floor-7, on-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "on",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "7",
                  "lemma": "floor",
                  "tag": "NN",
                  "word": "floor"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(floor-7, the-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "floor",
                  "tag": "NN",
                  "word": "floor"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_0_node": {
                  "NN": "blood"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "RB": "still"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node": {
                  "NN": "floor"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node": {
                  "EX": "There"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "\u0027s"
                },
                "s_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "floor."
                ]
              }
            },
            "sentence": "There\u0027s still blood on the floor."
          },
          "jazzyState": {
            "text": "There\u0027s still blood on the floor.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "I\u0027ve got questions.",
          "wordCount": 3,
          "orderParagraph": 9,
          "nlpState": {
            "sentence": "I\u0027ve got questions.",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "\u0027ve",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBN",
                "text": "got",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "questions",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, got-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "get",
                  "tag": "VBN",
                  "word": "got"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(got-3, I-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "tag": "VBN",
                  "word": "got"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(got-3, \u0027ve-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "have",
                  "tag": "VBP",
                  "word": "\u0027ve"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "tag": "VBN",
                  "word": "got"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(got-3, questions-4)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "question",
                  "tag": "NNS",
                  "word": "questions"
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "tag": "VBN",
                  "word": "got"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(got-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "get",
                  "tag": "VBN",
                  "word": "got"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node": {
                  "NNS": "questions"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node_0_node": {
                  "VBP": "\u0027ve"
                },
                "s_node_1_node_1_node_0_node": {
                  "VBN": "got"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "questions."
                ]
              }
            },
            "sentence": "I\u0027ve got questions."
          },
          "jazzyState": {
            "text": "I\u0027ve got questions.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Are we still applicants for a job on Mars?",
          "wordCount": 9,
          "orderParagraph": 10,
          "nlpState": {
            "sentence": "Are we still applicants for a job on Mars?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "Are",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "we",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "still",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "applicants",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "for",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "a",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "job",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "on",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNP",
                "text": "Mars",
                "net": "LOCATION"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Are-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "Are"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Are-1, we-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "we"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "Are"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:for(Are-1, job-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:for"
                },
                "dep": {
                  "index": "7",
                  "lemma": "job",
                  "tag": "NN",
                  "word": "job"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "Are"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Are-1, ?-10)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "10",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "Are"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:npmod(still-3, applicants-4)",
                  "name": "noun phrase adverbial modifier",
                  "tag": "nmod:npmod"
                },
                "dep": {
                  "index": "4",
                  "lemma": "applicant",
                  "tag": "NNS",
                  "word": "applicants"
                },
                "gov": {
                  "index": "3",
                  "lemma": "still",
                  "tag": "RB",
                  "word": "still"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(job-7, still-3)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "3",
                  "lemma": "still",
                  "tag": "RB",
                  "word": "still"
                },
                "gov": {
                  "index": "7",
                  "lemma": "job",
                  "tag": "NN",
                  "word": "job"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(job-7, for-5)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "5",
                  "lemma": "for",
                  "tag": "IN",
                  "word": "for"
                },
                "gov": {
                  "index": "7",
                  "lemma": "job",
                  "tag": "NN",
                  "word": "job"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(job-7, a-6)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "6",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "a"
                },
                "gov": {
                  "index": "7",
                  "lemma": "job",
                  "tag": "NN",
                  "word": "job"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:on(job-7, Mars-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:on"
                },
                "dep": {
                  "index": "9",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                },
                "gov": {
                  "index": "7",
                  "lemma": "job",
                  "tag": "NN",
                  "word": "job"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(Mars-9, on-8)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "8",
                  "lemma": "on",
                  "tag": "IN",
                  "word": "on"
                },
                "gov": {
                  "index": "9",
                  "lemma": "Mars",
                  "tag": "NNP",
                  "word": "Mars"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_2_node_0_node": {
                  "IN": "for"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "VBN": "applicants"
                },
                "s_node_2_node_0_node": {
                  "RB": "still"
                },
                "s_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_2_node_1_node_0_node_1_node": {
                  "NN": "job"
                },
                "s_node_2_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_2_node_1_node_1_node_1_node": {
                  "NNP": "Mars"
                },
                "s_node_1_node": {
                  "PRP": "we"
                },
                "s_node_2_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_2_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_2_node_1_node_0_node_0_node": {
                  "DT": "a"
                },
                "s_node_2_node_2_node_1_node_1_node_0_node": {
                  "IN": "on"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBP": "Are"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Are we still applicants for a job on Mars?"
          },
          "jazzyState": {
            "text": "Are we still applicants for a job on Mars?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Have we failed the test screen?",
          "wordCount": 6,
          "orderParagraph": 11,
          "nlpState": {
            "sentence": "Have we failed the test screen?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "Have",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "we",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBD",
                "text": "failed",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "test",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "screen",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, failed-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "fail",
                  "tag": "VBD",
                  "word": "failed"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(Have-1, we-2)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "we"
                },
                "gov": {
                  "index": "1",
                  "lemma": "have",
                  "tag": "VBP",
                  "word": "Have"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "csubj(failed-3, Have-1)",
                  "name": "clausal subject",
                  "tag": "csubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "have",
                  "tag": "VBP",
                  "word": "Have"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fail",
                  "tag": "VBD",
                  "word": "failed"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(failed-3, screen-6)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "screen",
                  "tag": "NN",
                  "word": "screen"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fail",
                  "tag": "VBD",
                  "word": "failed"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(failed-3, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "3",
                  "lemma": "fail",
                  "tag": "VBD",
                  "word": "failed"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(screen-6, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "6",
                  "lemma": "screen",
                  "tag": "NN",
                  "word": "screen"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(screen-6, test-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "test",
                  "tag": "NN",
                  "word": "test"
                },
                "gov": {
                  "index": "6",
                  "lemma": "screen",
                  "tag": "NN",
                  "word": "screen"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node": {
                  "PRP": "we"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node_1_node": {
                  "NN": "test"
                },
                "s_node_2_node_1_node_2_node": {
                  "NN": "screen"
                },
                "s_node_2_node_0_node": {
                  "VBN": "failed"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "VBP": "Have"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Have we failed the test screen?"
          },
          "jazzyState": {
            "text": "Have we failed the test screen?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Something wrong with my application?",
          "wordCount": 5,
          "orderParagraph": 12,
          "nlpState": {
            "sentence": "Something wrong with my application?",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "NN",
                "text": "Something",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "wrong",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "with",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "application",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Something-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "something",
                  "tag": "NN",
                  "word": "Something"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "string": "dep(Something-1, wrong-2)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "2",
                  "lemma": "wrong",
                  "tag": "JJ",
                  "word": "wrong"
                },
                "gov": {
                  "index": "1",
                  "lemma": "something",
                  "tag": "NN",
                  "word": "Something"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Something-1, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "something",
                  "tag": "NN",
                  "word": "Something"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:with(wrong-2, application-5)",
                  "name": "nmod_preposition",
                  "tag": "nmod:with"
                },
                "dep": {
                  "index": "5",
                  "lemma": "application",
                  "tag": "NN",
                  "word": "application"
                },
                "gov": {
                  "index": "2",
                  "lemma": "wrong",
                  "tag": "JJ",
                  "word": "wrong"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(application-5, with-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "with",
                  "tag": "IN",
                  "word": "with"
                },
                "gov": {
                  "index": "5",
                  "lemma": "application",
                  "tag": "NN",
                  "word": "application"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(application-5, my-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "my",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "5",
                  "lemma": "application",
                  "tag": "NN",
                  "word": "application"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "NN": "application"
                },
                "s_node_0_node": {
                  "NN": "Something"
                },
                "s_node_1_node_0_node": {
                  "JJ": "wrong"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "with"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_node": {
                  "PRP$": "my"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Something wrong with my application?"
          },
          "jazzyState": {
            "text": "Something wrong with my application?",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "Is the chip in my forehead not going to work?\u0027\u0027",
          "wordCount": 10,
          "orderParagraph": 13,
          "nlpState": {
            "sentence": "Is the chip in my forehead not going to work?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "VBZ",
                "text": "Is",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "chip",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "in",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP$",
                "text": "my",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "forehead",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "not",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBG",
                "text": "going",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "work",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, Is-1)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(Is-1, chip-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "string": "dep(Is-1, not-7)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "7",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "not"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Is-1, ?-11)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "11",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(Is-1, \u0027\u0027-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "1",
                  "lemma": "be",
                  "tag": "VBZ",
                  "word": "Is"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(chip-3, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "3",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(forehead-6, my-5)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "5",
                  "lemma": "my",
                  "tag": "PRP$",
                  "word": "my"
                },
                "gov": {
                  "index": "6",
                  "lemma": "forehead",
                  "tag": "NN",
                  "word": "forehead"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(not-7, in-4)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "4",
                  "lemma": "in",
                  "tag": "IN",
                  "word": "in"
                },
                "gov": {
                  "index": "7",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "not"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(not-7, forehead-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "forehead",
                  "tag": "NN",
                  "word": "forehead"
                },
                "gov": {
                  "index": "7",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "not"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(not-7, going-8)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "8",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                },
                "gov": {
                  "index": "7",
                  "lemma": "not",
                  "tag": "RB",
                  "word": "not"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "xcomp(going-8, work-10)",
                  "name": "xclausal complement",
                  "tag": "xcomp"
                },
                "dep": {
                  "index": "10",
                  "lemma": "work",
                  "tag": "VB",
                  "word": "work"
                },
                "gov": {
                  "index": "8",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(work-10, to-9)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "9",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "10",
                  "lemma": "work",
                  "tag": "VB",
                  "word": "work"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_2_node_1_node_0_node_0_node": {
                  "PRP$": "my"
                },
                "s_node_2_node_1_node_1_node_0_node": {
                  "RB": "not"
                },
                "s_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_1_node_1_node": {
                  "NN": "chip"
                },
                "s_node_2_node_0_node": {
                  "IN": "in"
                },
                "s_node_2_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_1_node_1_node_0_node": {
                  "VBG": "going"
                },
                "s_node_2_node_1_node_0_node_1_node": {
                  "NN": "forehead"
                },
                "s_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_1_node": {
                  "VB": "work"
                },
                "s_node_2_node_1_node_1_node_1_node_1_node_0_node": {
                  "TO": "to"
                },
                "s_node_2_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_0_node": {
                  "VBZ": "Is"
                },
                "s_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Is the chip in my forehead not going to work?\u0027\u0027"
          },
          "jazzyState": {
            "text": "Is the chip in my forehead not going to work?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "Is the chip in my forehead not going to work?\u0027\u0027",
            "dialogMark": [
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "as the silhouette pulls and swings the door.",
          "wordCount": 8,
          "orderParagraph": 14,
          "nlpState": {
            "sentence": "as the silhouette pulls and swings the door.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "silhouette",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "pulls",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "swings",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, pulls-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "pull",
                  "tag": "VBZ",
                  "word": "pulls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(silhouette-3, as-1)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "3",
                  "lemma": "silhouette",
                  "tag": "NN",
                  "word": "silhouette"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(silhouette-3, the-2)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "2",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "3",
                  "lemma": "silhouette",
                  "tag": "NN",
                  "word": "silhouette"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(pulls-4, silhouette-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "silhouette",
                  "tag": "NN",
                  "word": "silhouette"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pull",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(pulls-4, and-5)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "5",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pull",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(pulls-4, swings-6)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "6",
                  "lemma": "swing",
                  "tag": "VBZ",
                  "word": "swings"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pull",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(pulls-4, door-8)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "8",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "4",
                  "lemma": "pull",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(pulls-4, .-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "pull",
                  "tag": "VBZ",
                  "word": "pulls"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(swings-6, silhouette-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "silhouette",
                  "tag": "NN",
                  "word": "silhouette"
                },
                "gov": {
                  "index": "6",
                  "lemma": "swing",
                  "tag": "VBZ",
                  "word": "swings"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-8, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "8",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node": {
                  "VBZ": "swings"
                },
                "s_node_1_node_3_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "silhouette"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "DT": "the"
                },
                "s_node_1_node_3_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_3_node_1_node": {
                  "NN": "door"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "pulls"
                },
                "s_node_0_node_0_node": {
                  "RB": "as"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "door."
                ]
              }
            },
            "sentence": "as the silhouette pulls and swings the door."
          },
          "jazzyState": {
            "text": "as the silhouette pulls and swings the door.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "The white-panel door shuts.",
      "wordCount": 4,
      "order": 24,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "The white-panel door shuts.",
          "wordCount": 4,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "The white-panel door shuts.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "DT",
                "text": "The",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "white-panel",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "shuts",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, door-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-3, The-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "The"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(door-3, white-panel-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "white-panel",
                  "tag": "JJ",
                  "word": "white-panel"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "string": "dep(door-3, shuts-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "shut",
                  "tag": "NNS",
                  "word": "shuts"
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(door-3, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "shuts"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_2_node": {
                  "NN": "door"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "JJ": "white-panel"
                },
                "s_node_0_node_0_node": {
                  "DT": "The"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "shuts."
                ]
              }
            },
            "sentence": "The white-panel door shuts."
          },
          "jazzyState": {
            "text": "The white-panel door shuts.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027What an asshole.\u0027\u0027",
      "wordCount": 3,
      "order": 25,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "\u0027\u0027What an asshole.\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "\u0027\u0027What an asshole.\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WP",
                "text": "What",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "an",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NN",
                "text": "asshole",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": ".",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, asshole-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "asshole",
                  "tag": "NN",
                  "word": "asshole"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(asshole-4, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "asshole",
                  "tag": "NN",
                  "word": "asshole"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(asshole-4, What-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "what",
                  "tag": "WP",
                  "word": "What"
                },
                "gov": {
                  "index": "4",
                  "lemma": "asshole",
                  "tag": "NN",
                  "word": "asshole"
                }
              },
              {
                "reln": {
                  "string": "dep(asshole-4, an-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "an"
                },
                "gov": {
                  "index": "4",
                  "lemma": "asshole",
                  "tag": "NN",
                  "word": "asshole"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(asshole-4, .-5)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "5",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "4",
                  "lemma": "asshole",
                  "tag": "NN",
                  "word": "asshole"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(asshole-4, \u0027\u0027-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "asshole",
                  "tag": "NN",
                  "word": "asshole"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node": {
                  "WP": "What"
                },
                "s_node_3_node": {
                  "VBP": "asshole"
                },
                "s_node_2_node": {
                  "DT": "an"
                },
                "s_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_5_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "PERIOD": "."
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "ANTI": [
                  "asshole.\u0027\u0027"
                ]
              }
            },
            "sentence": "\u0027\u0027What an asshole.\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027What an asshole.\u0027\u0027",
            "misspelledWords": {
              "asshole": [
                "assail"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027What an asshole.\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Darkness spreads.",
      "wordCount": 2,
      "order": 26,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Darkness spreads.",
          "wordCount": 2,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Darkness spreads.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NN",
                "text": "Darkness",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "spreads",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, spreads-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "spread",
                  "tag": "NNS",
                  "word": "spreads"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(spreads-2, Darkness-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "darkness",
                  "tag": "NN",
                  "word": "Darkness"
                },
                "gov": {
                  "index": "2",
                  "lemma": "spread",
                  "tag": "NNS",
                  "word": "spreads"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(spreads-2, .-3)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "3",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "spread",
                  "tag": "NNS",
                  "word": "spreads"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node": {
                  "VBZ": "spreads"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node": {
                  "NN": "Darkness"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "spreads."
                ]
              }
            },
            "sentence": "Darkness spreads."
          },
          "jazzyState": {
            "text": "Darkness spreads.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Where\u0027re the lights?\u0027\u0027",
      "wordCount": 3,
      "order": 27,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "\u0027\u0027Where\u0027re the lights?\u0027\u0027",
          "wordCount": 3,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "\u0027\u0027Where\u0027re the lights?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WRB",
                "text": "Where",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "\u0027re",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "lights",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, lights-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "light",
                  "tag": "NNS",
                  "word": "lights"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lights-5, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "tag": "NNS",
                  "word": "lights"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(lights-5, Where-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "where",
                  "tag": "WRB",
                  "word": "Where"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "tag": "NNS",
                  "word": "lights"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(lights-5, \u0027re-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "\u0027re"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "tag": "NNS",
                  "word": "lights"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(lights-5, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "tag": "NNS",
                  "word": "lights"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lights-5, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "tag": "NNS",
                  "word": "lights"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(lights-5, \u0027\u0027-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "tag": "NNS",
                  "word": "lights"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node": {
                  "NNP": "Where"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node_1_node": {
                  "NNS": "lights"
                },
                "s_node_2_node_0_node": {
                  "VBP": "\u0027re"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Where\u0027re the lights?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Where\u0027re the lights?\u0027\u0027",
            "misspelledWords": {
              "Where\u0027re": [
                "wearer"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027Where\u0027re the lights?\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Red balls of light glow above the twelve bodyboxes and around the ten headspheres.",
      "wordCount": 14,
      "order": 28,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Red balls of light glow above the twelve bodyboxes and around the ten headspheres.",
          "wordCount": 14,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Red balls of light glow above the twelve bodyboxes and around the ten headspheres.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Red",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "balls",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "light",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "glow",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "above",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CD",
                "text": "twelve",
                "net": "NUMBER"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "bodyboxes",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "around",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CD",
                "text": "ten",
                "net": "NUMBER"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "headspheres",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, balls-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(balls-2, Red-1)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Red",
                  "tag": "NNP",
                  "word": "Red"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(balls-2, balls-2\u0027)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "2",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "acl",
                  "string": "acl:of(balls-2, glow-5)",
                  "name": "acl_preposition",
                  "tag": "acl:of"
                },
                "dep": {
                  "index": "5",
                  "lemma": "glow",
                  "tag": "NN",
                  "word": "glow"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:above(balls-2, bodyboxes-9)",
                  "name": "nmod_preposition",
                  "tag": "nmod:above"
                },
                "dep": {
                  "index": "9",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(balls-2, and-10)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "10",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(balls-2, .-15)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "15",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "2",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:around(balls-2\u0027, headspheres-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:around"
                },
                "dep": {
                  "index": "14",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                },
                "gov": {
                  "index": "2",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(glow-5, of-3)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "3",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "5",
                  "lemma": "glow",
                  "tag": "NN",
                  "word": "glow"
                }
              },
              {
                "reln": {
                  "string": "dep(glow-5, light-4)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "4",
                  "lemma": "light",
                  "tag": "JJ",
                  "word": "light"
                },
                "gov": {
                  "index": "5",
                  "lemma": "glow",
                  "tag": "NN",
                  "word": "glow"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(bodyboxes-9, above-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "above",
                  "tag": "IN",
                  "word": "above"
                },
                "gov": {
                  "index": "9",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(bodyboxes-9, the-7)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "7",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(bodyboxes-9, twelve-8)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "8",
                  "lemma": "twelve",
                  "tag": "CD",
                  "word": "twelve"
                },
                "gov": {
                  "index": "9",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(headspheres-14, around-11)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "11",
                  "lemma": "around",
                  "tag": "IN",
                  "word": "around"
                },
                "gov": {
                  "index": "14",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(headspheres-14, the-12)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "12",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "14",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(headspheres-14, ten-13)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "13",
                  "lemma": "ten",
                  "tag": "CD",
                  "word": "ten"
                },
                "gov": {
                  "index": "14",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_2_node_1_node_1_node": {
                  "CD": "ten"
                },
                "s_node_1_node_1_node_0_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_0_node_1_node_2_node": {
                  "NNS": "bodyboxes"
                },
                "s_node_1_node_1_node_2_node_0_node": {
                  "IN": "around"
                },
                "s_node_0_node_0_node_0_node": {
                  "JJ": "Red"
                },
                "s_node_1_node_1_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "glow"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_1_node_1_node_2_node_1_node_2_node": {
                  "NNS": "headspheres"
                },
                "s_node_1_node_1_node_0_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "NNS": "balls"
                },
                "s_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "light"
                },
                "s_node_1_node_1_node_0_node_0_node": {
                  "IN": "above"
                },
                "s_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_0_node_1_node_1_node": {
                  "CD": "twelve"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "headspheres."
                ]
              }
            },
            "sentence": "Red balls of light glow above the twelve bodyboxes and around the ten headspheres."
          },
          "jazzyState": {
            "text": "Red balls of light glow above the twelve bodyboxes and around the ten headspheres.",
            "misspelledWords": {
              "bodyboxes": [],
              "headspheres": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Why am I red?\u0027\u0027",
      "wordCount": 4,
      "order": 29,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "\u0027\u0027Why am I red?\u0027\u0027",
          "wordCount": 4,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "\u0027\u0027Why am I red?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WRB",
                "text": "Why",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "am",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "I",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, red-5)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "5",
                  "lemma": "red",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(red-5, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "5",
                  "lemma": "red",
                  "tag": "JJ",
                  "word": "red"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(red-5, Why-2)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "why",
                  "tag": "WRB",
                  "word": "Why"
                },
                "gov": {
                  "index": "5",
                  "lemma": "red",
                  "tag": "JJ",
                  "word": "red"
                }
              },
              {
                "reln": {
                  "parent": "aux",
                  "string": "cop(red-5, am-3)",
                  "name": "copula",
                  "tag": "cop"
                },
                "dep": {
                  "index": "3",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "am"
                },
                "gov": {
                  "index": "5",
                  "lemma": "red",
                  "tag": "JJ",
                  "word": "red"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(red-5, I-4)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "4",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "I"
                },
                "gov": {
                  "index": "5",
                  "lemma": "red",
                  "tag": "JJ",
                  "word": "red"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(red-5, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "5",
                  "lemma": "red",
                  "tag": "JJ",
                  "word": "red"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(red-5, \u0027\u0027-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "5",
                  "lemma": "red",
                  "tag": "JJ",
                  "word": "red"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_2_node_1_node_0_node": {
                  "PRP": "I"
                },
                "s_node_1_node": {
                  "NNP": "Why"
                },
                "s_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node_1_node": {
                  "JJ": "red"
                },
                "s_node_2_node_0_node": {
                  "VBP": "am"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Why am I red?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Why am I red?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Why am I red?\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "A thump sucks the door and sucks the sand and air from the container to the desert.",
      "wordCount": 17,
      "order": 30,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "A thump sucks the door and sucks the sand and air from the container to the desert.",
          "wordCount": 17,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "A thump sucks the door and sucks the sand and air from the container to the desert.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "DT",
                "text": "A",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "thump",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "sucks",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "door",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "sucks",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "sand",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "air",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "from",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "container",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "TO",
                "text": "to",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "desert",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, sucks-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "suck",
                  "tag": "VBZ",
                  "word": "sucks"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(thump-2, A-1)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "1",
                  "lemma": "a",
                  "tag": "DT",
                  "word": "A"
                },
                "gov": {
                  "index": "2",
                  "lemma": "thump",
                  "tag": "NN",
                  "word": "thump"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sucks-3, thump-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "thump",
                  "tag": "NN",
                  "word": "thump"
                },
                "gov": {
                  "index": "3",
                  "lemma": "suck",
                  "tag": "VBZ",
                  "word": "sucks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(sucks-3, .-18)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "18",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "suck",
                  "tag": "VBZ",
                  "word": "sucks"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(sucks-3, door-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                },
                "gov": {
                  "index": "3",
                  "lemma": "suck",
                  "tag": "VBZ",
                  "word": "sucks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(sucks-3, and-6)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "6",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "3",
                  "lemma": "suck",
                  "tag": "VBZ",
                  "word": "sucks"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(sucks-3, sucks-7)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "7",
                  "lemma": "suck",
                  "tag": "VBZ",
                  "word": "sucks"
                },
                "gov": {
                  "index": "3",
                  "lemma": "suck",
                  "tag": "VBZ",
                  "word": "sucks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(door-5, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "5",
                  "lemma": "door",
                  "tag": "NN",
                  "word": "door"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:to(sucks-7, desert-17)",
                  "name": "nmod_preposition",
                  "tag": "nmod:to"
                },
                "dep": {
                  "index": "17",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                },
                "gov": {
                  "index": "7",
                  "lemma": "suck",
                  "tag": "VBZ",
                  "word": "sucks"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(sucks-7, thump-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "thump",
                  "tag": "NN",
                  "word": "thump"
                },
                "gov": {
                  "index": "7",
                  "lemma": "suck",
                  "tag": "VBZ",
                  "word": "sucks"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(sucks-7, sand-9)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "9",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                },
                "gov": {
                  "index": "7",
                  "lemma": "suck",
                  "tag": "VBZ",
                  "word": "sucks"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(sucks-7, air-11)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "11",
                  "lemma": "air",
                  "tag": "NN",
                  "word": "air"
                },
                "gov": {
                  "index": "7",
                  "lemma": "suck",
                  "tag": "VBZ",
                  "word": "sucks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(sand-9, the-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "9",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(sand-9, and-10)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "10",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "9",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(sand-9, air-11)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "11",
                  "lemma": "air",
                  "tag": "NN",
                  "word": "air"
                },
                "gov": {
                  "index": "9",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:from(sand-9, container-14)",
                  "name": "nmod_preposition",
                  "tag": "nmod:from"
                },
                "dep": {
                  "index": "14",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                },
                "gov": {
                  "index": "9",
                  "lemma": "sand",
                  "tag": "NN",
                  "word": "sand"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(container-14, from-12)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "12",
                  "lemma": "from",
                  "tag": "IN",
                  "word": "from"
                },
                "gov": {
                  "index": "14",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(container-14, the-13)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "13",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "14",
                  "lemma": "container",
                  "tag": "NN",
                  "word": "container"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(desert-17, the-16)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "16",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "17",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(desert-17, to-15)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "15",
                  "lemma": "to",
                  "tag": "TO",
                  "word": "to"
                },
                "gov": {
                  "index": "17",
                  "lemma": "desert",
                  "tag": "NN",
                  "word": "desert"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_2_node_1_node_0_node_3_node": {
                  "NN": "air"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_2_node_0_node": {
                  "TO": "to"
                },
                "s_node_1_node_2_node_1_node_0_node_1_node": {
                  "NN": "sand"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_node_1_node": {
                  "NN": "desert"
                },
                "s_node_1_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_1_node_1_node_1_node": {
                  "NN": "container"
                },
                "s_node_1_node_2_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node_0_node": {
                  "VBZ": "sucks"
                },
                "s_node_1_node_0_node_1_node_1_node": {
                  "NN": "door"
                },
                "s_node_0_node_0_node": {
                  "DT": "A"
                },
                "s_node_1_node_2_node_0_node": {
                  "VBZ": "sucks"
                },
                "s_node_1_node_2_node_1_node_0_node_2_node": {
                  "CC": "and"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node": {
                  "PERIOD": "."
                },
                "s_node_0_node_1_node": {
                  "NN": "thump"
                },
                "s_node_1_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_0_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_2_node_1_node_1_node_0_node": {
                  "IN": "from"
                },
                "s_node_1_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_2_node_1_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_2_node_1_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_2_node_2_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "desert."
                ]
              }
            },
            "sentence": "A thump sucks the door and sucks the sand and air from the container to the desert."
          },
          "jazzyState": {
            "text": "A thump sucks the door and sucks the sand and air from the container to the desert.",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027Are we going too die?\u0027\u0027",
      "wordCount": 5,
      "order": 31,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "\u0027\u0027Are we going too die?\u0027\u0027",
          "wordCount": 5,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "\u0027\u0027Are we going too die?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBP",
                "text": "Are",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "we",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VBG",
                "text": "going",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "RB",
                "text": "too",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "die",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, going-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(going-4, \u0027\u0027-1)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(going-4, Are-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "be",
                  "tag": "VBP",
                  "word": "Are"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(going-4, we-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "we",
                  "tag": "PRP",
                  "word": "we"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advmod(going-4, too-5)",
                  "name": "adverbial modifier",
                  "tag": "advmod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "too",
                  "tag": "RB",
                  "word": "too"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "comp",
                  "string": "ccomp(going-4, die-6)",
                  "name": "clausal complement",
                  "tag": "ccomp"
                },
                "dep": {
                  "index": "6",
                  "lemma": "die",
                  "tag": "VB",
                  "word": "die"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(going-4, ?-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(going-4, \u0027\u0027-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "go",
                  "tag": "VBG",
                  "word": "going"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_leaf": {
                  "phrase": "VP"
                },
                "s_node_3_node": {
                  "VBP": "die"
                },
                "s_node_2_node_1_node": {
                  "RB": "too"
                },
                "s_node_1_node_1_node": {
                  "PRP": "we"
                },
                "s_node_2_node_0_node": {
                  "NN": "going"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_5_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Are"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "PERIOD": "?"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027Are we going too die?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027Are we going too die?\u0027\u0027",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u0027\u0027Are we going too die?\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Ten red balls of light around heads and clear headspheres glow green.",
      "wordCount": 12,
      "order": 32,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Ten red balls of light around heads and clear headspheres glow green.",
          "wordCount": 12,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Ten red balls of light around heads and clear headspheres glow green.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "CD",
                "text": "Ten",
                "net": "NUMBER"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "balls",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "light",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "around",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "heads",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "clear",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "headspheres",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "glow",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "green",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, balls-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(balls-3, Ten-1)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "ten",
                  "tag": "CD",
                  "word": "Ten"
                },
                "gov": {
                  "index": "3",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(balls-3, red-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "red",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "3",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:of(balls-3, headspheres-10)",
                  "name": "nmod_preposition",
                  "tag": "nmod:of"
                },
                "dep": {
                  "index": "10",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                },
                "gov": {
                  "index": "3",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(balls-3, green-12)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "12",
                  "lemma": "green",
                  "tag": "JJ",
                  "word": "green"
                },
                "gov": {
                  "index": "3",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(balls-3, .-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:around(light-5, heads-7)",
                  "name": "nmod_preposition",
                  "tag": "nmod:around"
                },
                "dep": {
                  "index": "7",
                  "lemma": "head",
                  "tag": "NNS",
                  "word": "heads"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "tag": "JJ",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(light-5, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "tag": "JJ",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(light-5, clear-9)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "9",
                  "lemma": "clear",
                  "tag": "JJ",
                  "word": "clear"
                },
                "gov": {
                  "index": "5",
                  "lemma": "light",
                  "tag": "JJ",
                  "word": "light"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(heads-7, around-6)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "6",
                  "lemma": "around",
                  "tag": "IN",
                  "word": "around"
                },
                "gov": {
                  "index": "7",
                  "lemma": "head",
                  "tag": "NNS",
                  "word": "heads"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(headspheres-10, of-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "10",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(headspheres-10, light-5)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "light",
                  "tag": "JJ",
                  "word": "light"
                },
                "gov": {
                  "index": "10",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(headspheres-10, clear-9)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "clear",
                  "tag": "JJ",
                  "word": "clear"
                },
                "gov": {
                  "index": "10",
                  "lemma": "headsphere",
                  "tag": "NNS",
                  "word": "headspheres"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:npmod(green-12, glow-11)",
                  "name": "noun phrase adverbial modifier",
                  "tag": "nmod:npmod"
                },
                "dep": {
                  "index": "11",
                  "lemma": "glow",
                  "tag": "NN",
                  "word": "glow"
                },
                "gov": {
                  "index": "12",
                  "lemma": "green",
                  "tag": "JJ",
                  "word": "green"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_2_node_0_node": {
                  "RB": "clear"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_2_node": {
                  "NNS": "balls"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_1_node": {
                  "CC": "and"
                },
                "s_node_2_node_2_node_2_node_1_node": {
                  "JJ": "green"
                },
                "s_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_0_node": {
                  "VBZ": "heads"
                },
                "s_node_2_node_2_node_2_node_0_node": {
                  "NN": "glow"
                },
                "s_node_0_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_0_node_1_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_0_node_0_node_1_node": {
                  "JJ": "red"
                },
                "s_node_1_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_2_node_2_node_2_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_node": {
                  "RB": "around"
                },
                "s_node_0_node_1_node_1_node": {
                  "NN": "light"
                },
                "s_node_2_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node_2_node_1_node": {
                  "VBZ": "headspheres"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node_0_node_0_node": {
                  "CD": "Ten"
                },
                "s_node_2_node_2_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_0_node_1_node_0_node": {
                  "IN": "of"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "green."
                ]
              }
            },
            "sentence": "Ten red balls of light around heads and clear headspheres glow green."
          },
          "jazzyState": {
            "text": "Ten red balls of light around heads and clear headspheres glow green.",
            "misspelledWords": {
              "headspheres": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "\u0027\u0027What about the two empty spaceseats?\u0027\u0027",
      "wordCount": 6,
      "order": 33,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "\u0027\u0027What about the two empty spaceseats?\u0027\u0027",
          "wordCount": 6,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "\u0027\u0027What about the two empty spaceseats?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "WP",
                "text": "What",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "IN",
                "text": "about",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "CD",
                "text": "two",
                "net": "NUMBER"
              },
              {
                "dialog": "true",
                "pos": "JJ",
                "text": "empty",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "NNS",
                "text": "spaceseats",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, spaceseats-7)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "7",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(spaceseats-7, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "7",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(spaceseats-7, What-2)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "2",
                  "lemma": "what",
                  "tag": "WP",
                  "word": "What"
                },
                "gov": {
                  "index": "7",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "string": "dep(spaceseats-7, about-3)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "3",
                  "lemma": "about",
                  "tag": "IN",
                  "word": "about"
                },
                "gov": {
                  "index": "7",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(spaceseats-7, the-4)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "4",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "7",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(spaceseats-7, two-5)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "5",
                  "lemma": "two",
                  "tag": "CD",
                  "word": "two"
                },
                "gov": {
                  "index": "7",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(spaceseats-7, empty-6)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "6",
                  "lemma": "empty",
                  "tag": "JJ",
                  "word": "empty"
                },
                "gov": {
                  "index": "7",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(spaceseats-7, ?-8)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "8",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "7",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(spaceseats-7, \u0027\u0027-9)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "9",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "7",
                  "lemma": "spaceseat",
                  "tag": "NNS",
                  "word": "spaceseats"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "VBZ": "spaceseats"
                },
                "s_node_2_node_0_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node": {
                  "WP": "What"
                },
                "s_node_2_node_0_node_1_node_1_node": {
                  "CD": "two"
                },
                "s_node_2_node_0_node_1_node_2_node": {
                  "NNS": "empty"
                },
                "s_node_2_node_0_leaf": {
                  "phrase": "ADVP"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_2_node_0_node_0_node": {
                  "IN": "about"
                },
                "s_node_2_node_0_node_1_node_0_node": {
                  "DT": "the"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u0027\u0027What about the two empty spaceseats?\u0027\u0027"
          },
          "jazzyState": {
            "text": "\u0027\u0027What about the two empty spaceseats?\u0027\u0027",
            "misspelledWords": {
              "spaceseats": [
                "subsists"
              ]
            }
          },
          "dialogState": {
            "sentence": "\u0027\u0027What about the two empty spaceseats?\u0027\u0027",
            "dialogMark": [
              "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
              "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": false,
            "dialogEnd": true,
            "dialogContinue": true
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Two red balls of light glow over the two empty bodyboxes.",
      "wordCount": 11,
      "order": 34,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Two red balls of light glow over the two empty bodyboxes.",
          "wordCount": 11,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Two red balls of light glow over the two empty bodyboxes.",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "CD",
                "text": "Two",
                "net": "NUMBER"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "red",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "balls",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "of",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "light",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "glow",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "over",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CD",
                "text": "two",
                "net": "NUMBER"
              },
              {
                "dialog": "false",
                "pos": "JJ",
                "text": "empty",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "bodyboxes",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ".",
                "text": ".",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, balls-3)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "3",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(balls-3, Two-1)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "1",
                  "lemma": "two",
                  "tag": "CD",
                  "word": "Two"
                },
                "gov": {
                  "index": "3",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(balls-3, red-2)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "2",
                  "lemma": "red",
                  "tag": "JJ",
                  "word": "red"
                },
                "gov": {
                  "index": "3",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "acl",
                  "string": "acl:of(balls-3, glow-6)",
                  "name": "acl_preposition",
                  "tag": "acl:of"
                },
                "dep": {
                  "index": "6",
                  "lemma": "glow",
                  "tag": "NN",
                  "word": "glow"
                },
                "gov": {
                  "index": "3",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "nmod",
                  "string": "nmod:over(balls-3, bodyboxes-11)",
                  "name": "nmod_preposition",
                  "tag": "nmod:over"
                },
                "dep": {
                  "index": "11",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                },
                "gov": {
                  "index": "3",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(balls-3, .-12)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "12",
                  "lemma": ".",
                  "tag": ".",
                  "word": "."
                },
                "gov": {
                  "index": "3",
                  "lemma": "ball",
                  "tag": "NNS",
                  "word": "balls"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(glow-6, of-4)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "4",
                  "lemma": "of",
                  "tag": "IN",
                  "word": "of"
                },
                "gov": {
                  "index": "6",
                  "lemma": "glow",
                  "tag": "NN",
                  "word": "glow"
                }
              },
              {
                "reln": {
                  "string": "dep(glow-6, light-5)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "5",
                  "lemma": "light",
                  "tag": "JJ",
                  "word": "light"
                },
                "gov": {
                  "index": "6",
                  "lemma": "glow",
                  "tag": "NN",
                  "word": "glow"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "case(bodyboxes-11, over-7)",
                  "name": "case marker",
                  "tag": "case"
                },
                "dep": {
                  "index": "7",
                  "lemma": "over",
                  "tag": "IN",
                  "word": "over"
                },
                "gov": {
                  "index": "11",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(bodyboxes-11, the-8)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "8",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "11",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nummod(bodyboxes-11, two-9)",
                  "name": "numeric modifier",
                  "tag": "nummod"
                },
                "dep": {
                  "index": "9",
                  "lemma": "two",
                  "tag": "CD",
                  "word": "two"
                },
                "gov": {
                  "index": "11",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "amod(bodyboxes-11, empty-10)",
                  "name": "adjectival modifier",
                  "tag": "amod"
                },
                "dep": {
                  "index": "10",
                  "lemma": "empty",
                  "tag": "JJ",
                  "word": "empty"
                },
                "gov": {
                  "index": "11",
                  "lemma": "bodybox",
                  "tag": "NNS",
                  "word": "bodyboxes"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_2_node_1_node_0_node": {
                  "DT": "the"
                },
                "s_node_2_node_1_node_3_node": {
                  "NNS": "bodyboxes"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "."
                },
                "s_node_2_node_0_node": {
                  "IN": "over"
                },
                "s_node_0_node_1_node": {
                  "JJ": "red"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "ADJP"
                },
                "s_node_1_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_1_node_1_node": {
                  "NN": "glow"
                },
                "s_node_2_node_1_node_1_node": {
                  "CD": "two"
                },
                "s_node_2_node_1_node_2_node": {
                  "JJ": "empty"
                },
                "s_node_0_node_2_node": {
                  "NNS": "balls"
                },
                "s_node_2_leaf": {
                  "phrase": "PP"
                },
                "s_node_1_node_0_node": {
                  "IN": "of"
                },
                "s_node_1_node_1_node_0_node": {
                  "JJ": "light"
                },
                "s_node_0_node_0_node": {
                  "CD": "Two"
                }
              }
            }
          },
          "punctuationState": {
            "periodState": {
              "periodStates": {
                "INITIAL": "([A-Z]\\.)+[\\.]{0,1}",
                "ELLIPSIS": "([A-Za-z]*\\.\\.\\.[A-Za-z]*)+[\\\\.|\\\\!|\\\\?]{0,1}",
                "MARK": ".",
                "PERIOD": "[a-zA-Z0-9]+\\.$"
              },
              "patterns": {
                "PERIOD": [
                  "bodyboxes."
                ]
              }
            },
            "sentence": "Two red balls of light glow over the two empty bodyboxes."
          },
          "jazzyState": {
            "text": "Two red balls of light glow over the two empty bodyboxes.",
            "misspelledWords": {
              "bodyboxes": []
            }
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    },
    {
      "paragraph": "Jay thinks as his stem chip grows and the Life agent records, \u003cCan they hear me?\u003e",
      "wordCount": 16,
      "order": 35,
      "dialog": false,
      "sentenceStates": [
        {
          "sentence": "Jay thinks as his stem chip grows and the Life agent records,",
          "wordCount": 12,
          "orderParagraph": 1,
          "nlpState": {
            "sentence": "Jay thinks as his stem chip grows and the Life agent records,",
            "coreAnnotations": [
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Jay",
                "net": "PERSON"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "thinks",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "IN",
                "text": "as",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "PRP$",
                "text": "his",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "stem",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "chip",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "VBZ",
                "text": "grows",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "CC",
                "text": "and",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "DT",
                "text": "the",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNP",
                "text": "Life",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NN",
                "text": "agent",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "NNS",
                "text": "records",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": ",",
                "text": ",",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, thinks-2)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "2",
                  "lemma": "think",
                  "tag": "VBZ",
                  "word": "thinks"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(thinks-2, Jay-1)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "1",
                  "lemma": "Jay",
                  "tag": "NNP",
                  "word": "Jay"
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "tag": "VBZ",
                  "word": "thinks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(thinks-2, grows-7)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "7",
                  "lemma": "grow",
                  "tag": "VBZ",
                  "word": "grows"
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "tag": "VBZ",
                  "word": "thinks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "advcl(thinks-2, records-12)",
                  "name": "adverbial clause modifier",
                  "tag": "advcl"
                },
                "dep": {
                  "index": "12",
                  "lemma": "record",
                  "tag": "NNS",
                  "word": "records"
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "tag": "VBZ",
                  "word": "thinks"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(thinks-2, ,-13)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "13",
                  "lemma": ",",
                  "tag": ",",
                  "word": ","
                },
                "gov": {
                  "index": "2",
                  "lemma": "think",
                  "tag": "VBZ",
                  "word": "thinks"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "nmod:poss(chip-6, his-4)",
                  "name": "possession modifier",
                  "tag": "nmod:poss"
                },
                "dep": {
                  "index": "4",
                  "lemma": "he",
                  "tag": "PRP$",
                  "word": "his"
                },
                "gov": {
                  "index": "6",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(chip-6, stem-5)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "5",
                  "lemma": "stem",
                  "tag": "NN",
                  "word": "stem"
                },
                "gov": {
                  "index": "6",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "mark(grows-7, as-3)",
                  "name": "marker",
                  "tag": "mark"
                },
                "dep": {
                  "index": "3",
                  "lemma": "as",
                  "tag": "IN",
                  "word": "as"
                },
                "gov": {
                  "index": "7",
                  "lemma": "grow",
                  "tag": "VBZ",
                  "word": "grows"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(grows-7, chip-6)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "6",
                  "lemma": "chip",
                  "tag": "NN",
                  "word": "chip"
                },
                "gov": {
                  "index": "7",
                  "lemma": "grow",
                  "tag": "VBZ",
                  "word": "grows"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "cc(grows-7, and-8)",
                  "name": "coordination",
                  "tag": "cc"
                },
                "dep": {
                  "index": "8",
                  "lemma": "and",
                  "tag": "CC",
                  "word": "and"
                },
                "gov": {
                  "index": "7",
                  "lemma": "grow",
                  "tag": "VBZ",
                  "word": "grows"
                }
              },
              {
                "reln": {
                  "parent": "conj",
                  "string": "conj:and(grows-7, records-12)",
                  "name": "conj_collapsed",
                  "tag": "conj:and"
                },
                "dep": {
                  "index": "12",
                  "lemma": "record",
                  "tag": "NNS",
                  "word": "records"
                },
                "gov": {
                  "index": "7",
                  "lemma": "grow",
                  "tag": "VBZ",
                  "word": "grows"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "det(agent-11, the-9)",
                  "name": "determiner",
                  "tag": "det"
                },
                "dep": {
                  "index": "9",
                  "lemma": "the",
                  "tag": "DT",
                  "word": "the"
                },
                "gov": {
                  "index": "11",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                }
              },
              {
                "reln": {
                  "parent": "mod",
                  "string": "compound(agent-11, Life-10)",
                  "name": "compound modifier",
                  "tag": "compound"
                },
                "dep": {
                  "index": "10",
                  "lemma": "Life",
                  "tag": "NNP",
                  "word": "Life"
                },
                "gov": {
                  "index": "11",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                }
              },
              {
                "reln": {
                  "string": "dep(records-12, agent-11)",
                  "name": "dependent",
                  "tag": "dep"
                },
                "dep": {
                  "index": "11",
                  "lemma": "agent",
                  "tag": "NN",
                  "word": "agent"
                },
                "gov": {
                  "index": "12",
                  "lemma": "record",
                  "tag": "NNS",
                  "word": "records"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_1_node_1_node_1_node_2_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_2_node_1_node": {
                  "VBZ": "records"
                },
                "s_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node_2_node": {
                  "NN": "agent"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node_2_node": {
                  "NN": "chip"
                },
                "s_node_1_node_1_node_1_node_0_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_2_node": {
                  "COMMA": ","
                },
                "s_node_1_node_1_node_1_node_2_node_0_node_0_node": {
                  "DT": "the"
                },
                "s_node_1_node_1_leaf": {
                  "phrase": "SBAR"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node_0_node": {
                  "PRP$": "his"
                },
                "s_node_1_leaf": {
                  "phrase": "VP"
                },
                "s_node_1_node_1_node_1_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_2_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_0_leaf": {
                  "phrase": "S"
                },
                "s_node_1_node_1_node_1_node_2_node_0_node_1_node": {
                  "NNP": "Life"
                },
                "s_node_1_node_1_node_1_node_0_node_0_node_1_node": {
                  "NN": "stem"
                },
                "s_node_1_node_1_node_1_node_0_node_0_leaf": {
                  "phrase": "NP"
                },
                "s_node_1_node_1_node_1_node_1_node": {
                  "CC": "and"
                },
                "s_node_0_node": {
                  "NNP": "Jay"
                },
                "s_node_1_node_0_node": {
                  "VBZ": "thinks"
                },
                "s_node_1_node_1_node_0_node": {
                  "IN": "as"
                },
                "s_node_1_node_1_node_1_node_0_node_1_node": {
                  "VBZ": "grows"
                },
                "s_node_1_node_1_node_1_node_2_node_1_leaf": {
                  "phrase": "VP"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "Jay thinks as his stem chip grows and the Life agent records,"
          },
          "jazzyState": {
            "text": "Jay thinks as his stem chip grows and the Life agent records,",
            "misspelledWords": {}
          },
          "dialogState": {
            "dialog": false,
            "dialogBegin": false,
            "dialogEnd": false,
            "dialogContinue": false
          },
          "completeSentence": false
        },
        {
          "sentence": "\u003cCan they hear me?\u003e",
          "wordCount": 4,
          "orderParagraph": 2,
          "nlpState": {
            "sentence": "\u0027\u0027Can they hear me?\u0027\u0027",
            "coreAnnotations": [
              {
                "dialog": "true",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "MD",
                "text": "Can",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "they",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "VB",
                "text": "hear",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": "PRP",
                "text": "me",
                "net": "O"
              },
              {
                "dialog": "true",
                "pos": ".",
                "text": "?",
                "net": "O"
              },
              {
                "dialog": "false",
                "pos": "\u0027\u0027",
                "text": "\u0027\u0027",
                "net": "O"
              }
            ],
            "typedDependency": [
              {
                "reln": {
                  "string": "root(ROOT-0, hear-4)",
                  "name": "root",
                  "tag": "root"
                },
                "dep": {
                  "index": "4",
                  "lemma": "hear",
                  "tag": "VB",
                  "word": "hear"
                },
                "gov": {
                  "index": "0"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hear-4, \u0027\u0027-1)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "1",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hear",
                  "tag": "VB",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "aux(hear-4, Can-2)",
                  "name": "auxiliary",
                  "tag": "aux"
                },
                "dep": {
                  "index": "2",
                  "lemma": "can",
                  "tag": "MD",
                  "word": "Can"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hear",
                  "tag": "VB",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "subj",
                  "string": "nsubj(hear-4, they-3)",
                  "name": "nominal subject",
                  "tag": "nsubj"
                },
                "dep": {
                  "index": "3",
                  "lemma": "they",
                  "tag": "PRP",
                  "word": "they"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hear",
                  "tag": "VB",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "obj",
                  "string": "dobj(hear-4, me-5)",
                  "name": "direct object",
                  "tag": "dobj"
                },
                "dep": {
                  "index": "5",
                  "lemma": "I",
                  "tag": "PRP",
                  "word": "me"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hear",
                  "tag": "VB",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hear-4, ?-6)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "6",
                  "lemma": "?",
                  "tag": ".",
                  "word": "?"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hear",
                  "tag": "VB",
                  "word": "hear"
                }
              },
              {
                "reln": {
                  "parent": "dep",
                  "string": "punct(hear-4, \u0027\u0027-7)",
                  "name": "punctuation",
                  "tag": "punct"
                },
                "dep": {
                  "index": "7",
                  "lemma": "\u0027\u0027",
                  "tag": "\u0027\u0027",
                  "word": "\u0027\u0027"
                },
                "gov": {
                  "index": "4",
                  "lemma": "hear",
                  "tag": "VB",
                  "word": "hear"
                }
              }
            ],
            "pennTreebankState": {
              "treeBranchesMap": {
                "s_node_2_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_3_node": {
                  "PERIOD": "?"
                },
                "s_node_2_node_1_node": {
                  "PRP": "me"
                },
                "s_node_1_node_1_node": {
                  "PRP": "they"
                },
                "s_node_2_node_0_node": {
                  "VBP": "hear"
                },
                "s_node_2_leaf": {
                  "phrase": "VP"
                },
                "s_node_0_node": {
                  "\u0027\u0027": "\u0027\u0027"
                },
                "s_node_1_node_0_node": {
                  "NNP": "Can"
                },
                "s_node_1_leaf": {
                  "phrase": "NP"
                },
                "s_node_4_node": {
                  "\u0027\u0027": "\u0027\u0027"
                }
              }
            }
          },
          "punctuationState": {
            "sentence": "\u003cCan they hear me?\u003e"
          },
          "jazzyState": {
            "text": "\u003cCan they hear me?\u003e",
            "misspelledWords": {}
          },
          "dialogState": {
            "sentence": "\u003cCan they hear me?\u003e",
            "dialogMark": [
              "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
              "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)"
            ],
            "dialogNplToken": "\u0027\u0027",
            "telepathicBeginRegex": "(\u003e[A-Za-z].*)|(\u003e\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e[A-Za-z].*)",
            "telepathicContinueRegex": "(\u003e\\|[A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*)",
            "telepathicEndRegex": "(\u003e\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|\\.+[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e\\|[A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*,\u003c [A-Za-z].*)|([A-Za-z].*,\u003c [A-Za-z].*)|(\u003e[A-Za-z].*\u003c)|(\u003e\\.+[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e[A-Za-z].*\u003c)|(\u003e\\|[A-Za-z].*\u003c)|(\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|[A-Za-z].*\u003c)|([A-Za-z].*\\s\u003e\\|\\.+[A-Za-z].*\u003c)|([A-Za-z].*\u003c)",
            "internalBeginRegex": "(\u003c[A-Za-z].*)|(\u003c\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c[A-Za-z].*)",
            "internalContinueRegex": "(\u003c\\|[A-Za-z].*)|(\u003c\\|\\.+[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*)",
            "internalEndRegex": "(\u003c\\|\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\.*[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c\\|[A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*,\u003e [A-Za-z].*)|([A-Za-z].*,\u003e [A-Za-z].*)|(\u003c[A-Za-z].*\u003e)|(\u003c\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c[A-Za-z].*\u003e)|(\u003c\\|[A-Za-z].*\u003e)|(\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|[A-Za-z].*\u003e)|([A-Za-z].*\\s\u003c\\|\\.+[A-Za-z].*\u003e)|([A-Za-z].*\u003e)",
            "audioBeginRegex": "(,,[A-Za-z].*)|(,,\\.+[A-Za-z].*)|([A-Za-z].*\\s,,[A-Za-z].*)",
            "audioContinueRegex": "(\u0027\u0027[A-Za-z].*)|(\u0027\u0027\\.+[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*)|([A-Za-z].*\\s\u0027\u0027\\.+[A-Za-z].*)",
            "audioEndRegex": "(,,[A-Za-z].*\u0027\u0027)|(,,\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s,,[A-Za-z].*\u0027\u0027)|(\u0027\u0027[A-Za-z].*\u0027\u0027)|(\u0027\u0027\\.+[A-Za-z].*\u0027\u0027)|([A-Za-z].*\\s\u0027\u0027[A-Za-z].*\u0027\u0027)|([A-Za-z].*,\u0027\u0027 [A-Za-z].*)|([A-Za-z].*\u0027\u0027)",
            "telepathicBeginUnicode": "u003E",
            "telepathicContinueUnicode": "u003Eu007C",
            "telepathicEndUnicode": "u003C",
            "internalBeginUnicode": "u003C",
            "internalContinueUnicode": "u003Cu007C",
            "internalEndUnicode": "u003E",
            "audioBeginUnicode": "u002Cu002C",
            "audioContinueUnicode": "u0027u0027",
            "audioEndUnicode": "u0027u0027",
            "telepathicBeginMark": "\u003e",
            "telepathicContinueMark": "\u003e|",
            "telepathicEndMark": "\u003c",
            "internalBeginMark": "\u003c",
            "internalContinueMark": "\u003c|",
            "internalEndMark": "\u003e",
            "audioBeginMark": ",,",
            "audioContinueMark": "\u0027\u0027",
            "audioEndMark": "\u0027\u0027",
            "dialog": true,
            "dialogBegin": true,
            "dialogEnd": true,
            "dialogContinue": false
          },
          "completeSentence": false
        }
      ]
    }
  ]
}
